version: 2.1

orbs:
  aws-s3: circleci/aws-s3@1.0.8

references:
  container_config: &container_config
    docker:
      - image: circleci/node
    working_directory: ~/atlantis

  restore_repo: &restore_repo
    restore_cache:
      keys:
        - v1-repo-{{ .Branch }}-{{ .Revision }}
        - v1-repo-{{ .Branch }}
        - v1-repo

  restore_yarn_cache: &restore_yarn_cache
    restore_cache:
      keys:
        - v1-yarn-packages-{{ checksum "yarn.lock" }}
        - v1-yarn-packages

  restore_node_modules: &restore_node_modules
    restore_cache:
      keys:
        - v1-node-modules-{{ checksum "yarn.lock" }}
        - v1-node-modules

  yarn_install: &yarn_install
    run:
      name: Install Dependencies
      command: yarn install --frozen-lockfile --non-interactive

jobs:
  checkout_code:
    <<: *container_config
    steps:
      - *restore_repo
      - checkout
      - save_cache:
          key: v1-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - .

  install_dependencies:
    <<: *container_config
    steps:
      - *restore_repo
      - *restore_yarn_cache
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile --non-interactive
      - save_cache:
          name: Save Yarn Package Cache
          key: v1-yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

  lint_javascript:
    <<: *container_config
    steps:
      - *restore_repo
      - *restore_yarn_cache
      - *yarn_install
      - run: yarn lint:js --format junit -o reports/junit/js-lint-results.xml
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit

  lint_css:
    <<: *container_config
    steps:
      - *restore_repo
      - *restore_yarn_cache
      - *yarn_install
      - run: mkdir -p reports/junit
      - run: yarn --silent lint:css --custom-formatter node_modules/stylelint-junit-formatter > reports/junit/css-lint-results.xml
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit

  test:
    <<: *container_config
    steps:
      - *restore_repo
      - *restore_node_modules
      - *yarn_install
      - run:
          name: "Run tests with jest"
          command: yarn test --runInBand --no-cache --coverage --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT: "reports/junit/js-test-results.xml"
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit
      - store_artifacts:
          path: coverage

  build_docs:
    <<: *container_config
    steps:
      - *restore_repo
      - *restore_yarn_cache
      - *yarn_install
      - run: yarn build --base "/${CIRCLE_PULL_REQUEST##*/}"
      - persist_to_workspace:
          root: .docz
          paths:
            - dist/*

  deploy_docs:
    <<: *container_config
    docker:
      - image: 'circleci/python:2.7'
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - aws-s3/sync:
          from: /tmp/workspace/dist
          to: 's3://${ATLANTIS_S3_BUCKET}/${CIRCLE_PULL_REQUEST##*/}'
          aws-access-key-id: ATLANTIS_AWS_ACCESS_KEY_ID
          aws-secret-access-key: ATLANTIS_AWS_SECRET_ACCESS_KEY
          arguments: |
            --acl public-read \
            --cache-control "max-age=86400" \
            --delete
      - run:
          name: Notify github
          command: |
            PULL_REQUEST_NUMBER=${CIRCLE_PULL_REQUEST##*/}
            DOCS_S3_PREFIX="http://${ATLANTIS_S3_BUCKET}.s3-website-us-east-1.amazonaws.com"
            DOCS_S3_URL="${DOCS_S3_PREFIX}/${PULL_REQUEST_NUMBER}"
            COMMENTS_URL="https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/issues/${PULL_REQUEST_NUMBER}/comments"
            curl -s -H "Authorization: token ${ATLANTIS_GITHUB_DOCS_DEPLOY_TOKEN}" \
              -X POST -d "{\"body\": \"Hi frend. I've prepared a preview of the docs for you. You can find them [here](${DOCS_S3_URL})\"}" \
              $COMMENTS_URL
workflows:
  version: 2

  docs:
    jobs:
      - checkout_code
      - install_dependencies:
          requires:
            - checkout_code
      - lint_javascript:
          requires:
            - checkout_code
            - install_dependencies
      - lint_css:
          requires:
            - checkout_code
            - install_dependencies
      - test:
          requires:
            - checkout_code
            - install_dependencies
      - build_docs:
          requires:
            - checkout_code
            - install_dependencies
            - lint_javascript
            - lint_css
            - test
      - deploy_docs:
          requires:
            - checkout_code
            - install_dependencies
            - lint_javascript
            - lint_css
            - test
            - build_docs
