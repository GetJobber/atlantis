# prettier-ignore

version: 2

references:
  container_config: &container_config
    docker:
      - image: circleci/node
    working_directory: ~/atlantis

  restore_repo: &restore_repo
    restore_cache:
      keys:
        - v1-repo-{{ .Branch }}-{{ .Revision }}
        - v1-repo-{{ .Branch }}
        - v1-repo

  sum_lockfiles: &sum_lockfiles
    run:
      name: Sum Lockfiles
      command: md5sum package-lock.json packages/*/package-lock.json > /tmp/lock-sums

  restore_npm_cache: &restore_npm_cache
    restore_cache:
      name: Restore npm cache
      keys:
        - npm-cache-v1-{{ arch }}-{{ checksum "/tmp/lock-sums" }}
        - npm-cache-v1

  npm_install: &npm_install
    run:
      name: Install Dependencies
      command: npm install

jobs:
  checkout_code:
    <<: *container_config
    steps:
      - *restore_repo
      - checkout
      - save_cache:
          key: v1-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - .

  install_dependencies:
    <<: *container_config
    steps:
      - *restore_repo
      - *sum_lockfiles
      - *restore_npm_cache
      - *npm_install
      - save_cache:
          name: Save npm cache
          key: npm-cache-v1-{{ arch }}-{{ checksum "/tmp/lock-sums" }}
          paths:
            - ~/.npm

  lint_javascript:
    <<: *container_config
    steps:
      - *restore_repo
      - *sum_lockfiles
      - *restore_npm_cache
      - *npm_install
      - run: npm run lint:js -- --format junit -o reports/junit/js-lint-results.xml
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit

  lint_css:
    <<: *container_config
    steps:
      - *restore_repo
      - *sum_lockfiles
      - *restore_npm_cache
      - *npm_install
      - run: mkdir -p reports/junit
      - run: npm run lint:css -- --custom-formatter node_modules/stylelint-junit-formatter > reports/junit/css-lint-results.xml
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit

  test:
    <<: *container_config
    steps:
      - *restore_repo
      - *sum_lockfiles
      - *restore_npm_cache
      - *npm_install
      - run:
          name: "Run tests with jest"
          command:
            npm test -- --runInBand --no-cache --coverage --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT: "reports/junit/js-test-results.xml"
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit
      - store_artifacts:
          path: coverage

  build_docs:
    <<: *container_config
    steps:
      - *restore_repo
      - *sum_lockfiles
      - *restore_npm_cache
      - *npm_install
      - run: npm run build
      - store_artifacts:
          path: ~/atlantis/.docz/dist
          destination: docs

workflows:
  version: 2

  docs:
    jobs:
      - checkout_code
      - install_dependencies:
          requires:
            - checkout_code
      - lint_javascript:
          requires:
            - checkout_code
            - install_dependencies
      - lint_css:
          requires:
            - checkout_code
            - install_dependencies
      - test:
          requires:
            - checkout_code
            - install_dependencies
      - build_docs:
          requires:
            - checkout_code
            - install_dependencies
            - lint_javascript
            - lint_css
            - test
          filters:
            branches:
              only: master
