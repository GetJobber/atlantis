# prettier-ignore

version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.1
  aws-s3: circleci/aws-s3@1.0.8

references:
  container_config: &container_config
    docker:
      - image: cimg/node:22.11.0
    working_directory: ~/atlantis

  restore_repo: &restore_repo
    restore_cache:
      keys:
        - v1-repo-{{ .Branch }}-{{ .Revision }}
        - v1-repo-{{ .Branch }}
        - v1-repo

  restore_npm_cache: &restore_npm_cache
    restore_cache:
      name: Restore npm cache
      keys:
        - npm-cache-v1

  attach_workspace: &attach_workspace
    attach_workspace:
        at: .

  persist_to_workspace: &persist_to_workspace
    persist_to_workspace:
      root: .
      paths:
        - '*'

  npm_install: &npm_install
    run:
      name: Install Dependencies
      command: npm ci

  github_authenticity: &github_authenticity
    run:
      name: Establishing GitHub Authenticity
      command: mkdir -p ~/.ssh; echo 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=' >> ~/.ssh/known_hosts

  generate_base_path: &generate_base_path
    run:
      name: Generate S3 Path
      command: |
        echo 'export PULL_REQUEST_NUMBER=$(basename "${CIRCLE_PULL_REQUEST}")' >> $BASH_ENV
        echo 'export BASE_PATH=${PULL_REQUEST_NUMBER:-${CIRCLE_BRANCH}}' >> $BASH_ENV

jobs:
  checkout_code:
    <<: *container_config
    steps:
      - *restore_repo
      - checkout
      - *persist_to_workspace
      - save_cache:
          key: v1-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - .

  install_dependencies:
    <<: *container_config
    steps:
      - *attach_workspace
      - *restore_npm_cache
      - run:
          name: Authenticate with npm
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/atlantis/.npmrc
      - *npm_install
      - *persist_to_workspace

  check_for_manual_release:
    <<: *container_config
    steps:
      - *attach_workspace
      - run:
          name: Check for manual releases
          command: |
            set -e
            if git log --max-count=1 --pretty=%s | grep -q "chore(release): Publish"; then
              echo "Skipping run on release commit."
            elif git log --max-count=1 --pretty=%s | grep -q "chore(release): Manual release"; then
              echo "Skipping run on manual release commit."
            else
              npm run preventManualRelease
            fi

  check_git_status:
    <<: *container_config
    steps:
      - *attach_workspace
      - run:
          name: Check for uncommitted files
          command: |
            if [ -n "$(git status --porcelain)" ]; then
              echo "Found uncommitted changes which is unexpected. This likely means you forgot to commit generated files."
              echo "Here's the diff:"
              git status
              echo "If the diff includes *.props.json files, run `npm run generate` inside packages/site, review and commit the changes."
              exit 1
            else
              echo "No uncommitted changes."
              git status
            fi

  lint_javascript:
    <<: *container_config
    steps:
      - *attach_workspace
      - run: npm run lint:js -- --format junit -o reports/junit/js-lint-results.xml
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit

  lint_css:
    <<: *container_config
    steps:
      - *attach_workspace
      - run: mkdir -p reports/junit
      - run: npm run lint:css -- --custom-formatter node_modules/stylelint-junit-formatter/index.js > reports/junit/css-lint-results.xml
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit

  test:
    <<: *container_config
    steps:
      - *attach_workspace
      - run:
          name: "Run tests with jest"
          command:
            npm test -- --runInBand --no-cache --coverage --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: "reports/junit/"
            JEST_JUNIT_OUTPUT_NAME: "js-test-results.xml"
            JEST_JUNIT_ADD_FILE_ATTRIBUTE: "true"
            JEST_JUNIT_SUITE_NAME: "{displayName} {title}"
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit
      - store_artifacts:
          path: coverage

  build_storybook:
    resource_class: medium+
    <<: *container_config
    steps:
      - *attach_workspace
      - *generate_base_path
      - run:
          command: npm run storybook:build
      - *persist_to_workspace

  generate_sitemap:
    <<: *container_config
    steps:
      - *attach_workspace
      - run:
          name: Install static sitemap generator
          command: npm install static-sitemap-cli
      - run:
          name: Generate sitemap
          command: |
            cd storybook-static
            npx static-sitemap --prefix https://atlantis.jobber.com/ .
            mv sitemap.xml ../sitemap.xml
      - *persist_to_workspace

  build_new_docs:
    <<: *container_config
    steps:
      - *attach_workspace
      - run:
          command: cd packages/site && npm run generate && npm run build

  release:
    <<: *container_config
    steps:
      - *attach_workspace
      - *github_authenticity
      - add_ssh_keys:
          fingerprints:
            - "0a:70:b5:5e:87:c1:05:50:cc:54:c6:59:3b:43:77:63"
      - run:
          name: Release Packages
          command: |
            if git log --max-count=1 --pretty=%s | grep -q "chore(release): Publish"; then
              echo "Skipping run on release commit."
            else
              npm run ci:release
            fi

workflows:
  version: 2

  atlantis:
    jobs:
      - checkout_code
      - install_dependencies:
          requires:
            - checkout_code
      - check_for_manual_release:
          requires:
            - install_dependencies
      - lint_javascript:
          requires:
            - install_dependencies
      - lint_css:
          requires:
            - install_dependencies
      - test:
          requires:
            - install_dependencies
      - build_storybook:
          requires:
            - install_dependencies
      - generate_sitemap:
          requires:
            - build_storybook
      - build_new_docs:
          requires:
            - install_dependencies
      - check_git_status:
          requires:
            - build_storybook
            - build_new_docs
            - generate_sitemap
      - release:
          filters:
            branches:
              only: "master"
          requires:
            - lint_javascript
            - lint_css
            - test
            - build_storybook
            - build_new_docs
            - check_git_status
