# prettier-ignore

version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.1
  aws-s3: circleci/aws-s3@1.0.8

references:
  container_config: &container_config
    docker:
      - image: cimg/node:18.15.0
    working_directory: ~/atlantis

  restore_repo: &restore_repo
    restore_cache:
      keys:
        - v1-repo-{{ .Branch }}-{{ .Revision }}
        - v1-repo-{{ .Branch }}
        - v1-repo

  restore_npm_cache: &restore_npm_cache
    restore_cache:
      name: Restore npm cache
      keys:
        - npm-cache-v1

  attach_workspace: &attach_workspace
    attach_workspace:
        at: .

  persist_to_workspace: &persist_to_workspace
    persist_to_workspace:
      root: .
      paths:
        - '*'

  npm_install: &npm_install
    run:
      name: Install Dependencies
      command: export IGNORE_OPTIONAL_DEPENDENCIES=true; npm ci -omit=optional --legacy-peer-deps

  github_authenticity: &github_authenticity
    run:
      name: Establishing GitHub Authenticity
      command: mkdir -p ~/.ssh; echo 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==' >> ~/.ssh/known_hosts

  generate_base_path: &generate_base_path
    run:
      name: Generate S3 Path
      command: |
        echo 'export PULL_REQUEST_NUMBER=$(basename "${CIRCLE_PULL_REQUEST}")' >> $BASH_ENV
        echo 'export BASE_PATH=${PULL_REQUEST_NUMBER:-${CIRCLE_BRANCH}}' >> $BASH_ENV

jobs:
  checkout_code:
    <<: *container_config
    steps:
      - *restore_repo
      - checkout
      - *persist_to_workspace
      - save_cache:
          key: v1-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - .

  install_dependencies:
    <<: *container_config
    steps:
      - *attach_workspace
      - *restore_npm_cache
      - run:
          name: Authenticate with npm
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/atlantis/.npmrc
      - *npm_install
      - *persist_to_workspace

  check_for_manual_release:
    <<: *container_config
    steps:
      - *attach_workspace
      - run:
          name: Check for manual releases
          command: |
            set -e
            if git log --max-count=1 --pretty=%s | grep -q "chore(release): Publish"; then
              echo "Skipping run on release commit."
            else
              npm run preventManualRelease
            fi

  lint_javascript:
    <<: *container_config
    steps:
      - *attach_workspace
      - run: npm run lint:js -- --format junit -o reports/junit/js-lint-results.xml
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit

  lint_css:
    <<: *container_config
    steps:
      - *attach_workspace
      - run: mkdir -p reports/junit
      - run: npm run lint:css -- --custom-formatter node_modules/stylelint-junit-formatter > reports/junit/css-lint-results.xml
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit

  test:
    <<: *container_config
    steps:
      - *attach_workspace
      - run:
          name: "Run tests with jest"
          command:
            npm test -- --runInBand --no-cache --coverage --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT: "reports/junit/js-test-results.xml"
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit
      - store_artifacts:
          path: coverage

  build_docs:
    resource_class: medium+
    <<: *container_config
    steps:
      - *attach_workspace
      - *generate_base_path
      - run:
          command: npm run build
      - *persist_to_workspace

  upload_to_cloudflare:
    <<: *container_config
    environment:
      ATLANTIS_BRANCH: << pipeline.git.branch >>
    steps:
      - *attach_workspace
      - *generate_base_path
      - run:
          command: |
            if [ "$ATLANTIS_BRANCH" = "master" ]; then
              npx wrangler pages publish storybook-static --project-name=atlantis
            else
              npx wrangler pages publish storybook-static --project-name=atlantis --branch=$ATLANTIS_BRANCH
            fi

  release:
    <<: *container_config
    steps:
      - *attach_workspace
      - *github_authenticity
      - add_ssh_keys:
          fingerprints:
            - "0a:70:b5:5e:87:c1:05:50:cc:54:c6:59:3b:43:77:63"
      - run:
          name: Release Packages
          command: |
            if git log --max-count=1 --pretty=%s | grep -q "chore(release): Publish"; then
              echo "Skipping run on release commit."
            else
              npm run ci:release
            fi

workflows:
  version: 2

  atlantis:
    jobs:
      - checkout_code
      - install_dependencies:
          requires:
            - checkout_code
      - check_for_manual_release:
          requires:
            - install_dependencies
      - lint_javascript:
          requires:
            - check_for_manual_release
      - lint_css:
          requires:
            - check_for_manual_release
      - test:
          requires:
            - check_for_manual_release
      - build_docs:
          requires:
            - check_for_manual_release
      - upload_to_cloudflare:
          requires:
            - build_docs
      - release:
          filters:
            branches:
              only: "master"
          requires:
            - lint_javascript
            - lint_css
            - test
            - build_docs
