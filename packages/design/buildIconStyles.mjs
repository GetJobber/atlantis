import { readFileSync, writeFile } from "fs";
import path from "path";
import { fileURLToPath } from "url";
import postcss from "postcss";
import postcssCustomProperties from "postcss-custom-properties";
import postcssCalc from "postcss-calc";
import transform from "css-to-react-native-transform";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const foundation = readFileSync("./foundation.css");
const icon = readFileSync("src/icons/Icon.css");
const size = readFileSync("src/icons/Sizes.css");
const color = readFileSync("src/icons/Colors.css");

const allCss = [foundation, icon, size, color].join("\n");

postcss({
  plugins: [
    postcssCustomProperties({ preserve: false }),
    postcssCalc({ warnWhenCannotResolve: true }),
  ],
})
  .process(allCss, { from: undefined })
  .then(function (result) {
    const calculated = transform.default(result.css);

    const jsonContent =
      "/* This file is automatically generated by buildIconStyle.js and should not be edited. */\n" +
      "export const iconStyles = " +
      JSON.stringify(calculated, null, 2);

    writeFile(
      path.join(__dirname, "src/icons/iconStyles.ts"),
      jsonContent,
      "utf8",
      function (err) {
        if (err) {
          console.log("An error occurred while writing JSON object to File.");

          return console.log(err);
        }
        console.log("JSON file has been saved.");
      },
    );
  });
