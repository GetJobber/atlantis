import { readFileSync, readdirSync, statSync, writeFileSync } from "fs";
import { dirname, join, parse } from "path";
import { fileURLToPath } from "url";
import { load } from "cheerio";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const iconFolder = join(__dirname, "../assets/icons");
const iconMap = {
  icons: {},
};

const files = getFiles();
files.forEach(file => {
  const iconName = parse(file).name;
  const paths = extractSVGPaths(file);
  iconMap.icons[iconName] = paths;
});

writeFileSync(
  join(__dirname, "../src/icons/iconMap.ts"),
  `/* tslint:disable */
/* eslint-disable */
/* This file is automatically generated and should not be edited. */
/* Add your icons SVG file under assets/icons and run "npm run bootstrap" */

export const iconMap = ${JSON.stringify(iconMap, undefined, 2)};`,
);

function getFiles(dirPath = iconFolder, arrayOfFiles = []) {
  const filePaths = readdirSync(dirPath);
  filePaths.forEach(function (file) {
    if (statSync(dirPath + "/" + file).isDirectory()) {
      arrayOfFiles = getFiles(dirPath + "/" + file, arrayOfFiles);
    } else {
      arrayOfFiles.push(`${dirPath}/${file}`);
    }
  });

  return arrayOfFiles;
}

function extractSVGPaths(path) {
  const data = readFileSync(path, "utf8");
  const $ = load(data, { xmlMode: true });
  const pathSet = $("path");

  return pathSet
    .map(function () {
      return $(this).attr("d");
    })
    .toArray();
}
