{
  "name": "@jobber/design",
  "version": "0.31.1",
  "description": "Design foundation for the Jobber Atlantis Design System",
  "license": "MIT",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "files": [
    "dist/*",
    "*.css",
    "foundation.*",
    "icons/*"
  ],
  "scripts": {
    "_build": "npm run build:css && npm run build:css:icons && npm run build:colors && npm run build:cssTypes && npm run build:foundation",
    "build": "npm run build:css && npm run build:css:icons && npm run build:colors && npm run build:cssTypes && npm run build:foundation && npm run build:iconCssStyle && npm run build:rollup",

    "build:rollup": "rollup --config",
    "build:css": "postcss src/foundation.css --output foundation.css --use postcss-import",
    "build:css:icons": "postcss src/icons/*.css --dir icons/ --use postcss-import",
    "build:ts": "tsc --project .",
    "build:cssTypes": "tcm src/icons",
    "build:colors": "node buildColors.js",
    "build:foundation": "node buildFoundation.js && node jobberStyle.js && npm run build:foundationTypes && npm run build:addTypeLinterExceptions && npm run build:addFoundationLinterExceptions && npm run build:removeTempFiles",
    "build:foundationTypes": "tsc --declaration --emitDeclarationOnly --allowJs foundation.js --outDir . --skipLibCheck",
    "build:addTypeLinterExceptions": "(printf '/* tslint:disable */\n/* eslint-disable */\n/* This file is automatically generated and should not be edited. */\n'; cat foundation.d.ts) > foundation.d.ts.temp",
    "build:addFoundationLinterExceptions": "(printf '/* tslint:disable */\n/* eslint-disable */\n/* This file is automatically generated and should not be edited. */\n'; cat foundation.js) > foundation.js.temp",
    "build:removeTempFiles": "rm -f src/foundation.js && mv foundation.d.ts.temp foundation.d.ts && mv foundation.js.temp foundation.js",
    "build:iconCssStyle": "node buildIconStyles.js && npm run build:iconCssStyleTypes",
    "build:iconCssStyleTypes": "tsc --declaration --emitDeclarationOnly --allowJs src/icons/iconStyles.ts --outDir ./src/icons --skipLibCheck",
    "clean": "rm -rf dist/* icons/* colors.js foundation.* iconStyles.* tsconfig.tsbuildinfo",
    "bootstrap": "npm run clean && npm run build"
  },
  "dependencies": {
    "classnames": "^2.3.2"
  },
  "devDependencies": {
    "@csstools/postcss-extract": "^2.0.1",
    "@rollup/plugin-commonjs": "^24.0.1",
    "@types/node": "^18.15.7",
    "autoprefixer": "^9.5.1",
    "css-to-react-native-transform": "^2.0.0",
    "postcss": "^8.4.21",
    "postcss-calc": "7.0.2",
    "postcss-cli": "^10.1.0",
    "postcss-custom-properties": "^13.1.4",
    "postcss-import": "^15.1.0",
    "postcss-preset-env": "^6.6.0",
    "rollup": "^1.11.3",
    "rollup-plugin-copy": "^3.4.0",
    "rollup-plugin-multi-input": "^1.4.1",
    "rollup-plugin-postcss": "^4.0.2",
    "rollup-plugin-typescript2": "^0.34.1",
    "typed-css-modules": "^0.7.0",
    "typescript": "^4.9.5"
  }
}
