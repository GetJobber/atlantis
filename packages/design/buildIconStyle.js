/* eslint-env node */
/* eslint-disable @typescript-eslint/no-var-requires */
const fs = require("fs");
const postcss = require("postcss");
const postcssCustomProperties = require("postcss-custom-properties");
const postcssCalc = require("postcss-calc");
const transform = require("css-to-react-native-transform").default;

const icon = fs.readFileSync("src/icons/Icon.css");
const size = fs.readFileSync("src/icons/Sizes.css");
const color = fs.readFileSync("src/icons/Colors.css");

const allCss = [icon, size, color].join("\n");

postcss([
  postcssCustomProperties({
    preserve: false,
    importFrom: ["foundation.css"],
  }),
  postcssCalc(),
])
  .process(allCss, { from: undefined })
  .then(function (result) {
    const calculated = transform(`${result.css}`);
    const jsonContent =
      "/* tslint:disable */\n" +
      "/* eslint-disable */\n" +
      "/* This file is automatically generated and should not be edited. */\n" +
      "export const iconStyle = " +
      JSON.stringify(calculated, undefined, 2);

    fs.writeFile("./iconStyle.js", jsonContent, "utf8", function (err) {
      if (err) {
        console.log("An error occurred while writing JSON object to File.");
        return console.log(err);
      }
      console.log("JSON file has been saved.");
    });
  });
