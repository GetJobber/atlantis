/* eslint-env node */
/* eslint-disable @typescript-eslint/no-var-requires */

const fs = require("fs");
const path = require("path");
const postcss = require("postcss");
// const postcssCustomProperties = require("postcss-custom-properties");
// const postcssExtract = require("@csstools/postcss-extract");
const postcssImport = require("postcss-import");
const postcssCalc = require("postcss-calc");
const transform = require("css-to-react-native-transform").default;

const icon = fs.readFileSync("src/icons/Icon.css");
const size = fs.readFileSync("src/icons/Sizes.css");
const color = fs.readFileSync("src/icons/Colors.css");

const allCss = [icon, size, color].join("\n");

postcss([postcssImport(), postcssCalc()])
  .process(allCss, { from: "src/icons/Colors.css" })
  .then(function (result) {
    const calculated = transform(result.css);
    const jsonContent =
      "/* This file is automatically generated by buildIconStyle.js and should not be edited. */\n" +
      "export const iconStyles = " +
      JSON.stringify(calculated, undefined, 2);

    fs.writeFile(
      path.join(__dirname, "src/icons/iconStyles.ts"),
      jsonContent,
      "utf8",
      function (err) {
        if (err) {
          console.log("An error occurred while writing JSON object to File.");
          return console.log(err);
        }
        console.log("JSON file has been saved.");
      },
    );
  });
