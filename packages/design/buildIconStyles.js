/* eslint-env node */
/* eslint-disable @typescript-eslint/no-var-requires */

const fs = require("fs");
const path = require("path");
const postcss = require("postcss");
const postcssCustomProperties = require("postcss-custom-properties");
const postcssCalc = require("postcss-calc");
const transform = require("css-to-react-native-transform").default;

const icon = fs.readFileSync("src/icons/Icon.css");
const size = fs.readFileSync("src/icons/Sizes.css");
const color = fs.readFileSync("src/icons/Colors.css");

const allCss = [icon, size, color].join("\n");

let hasJobberFonts = false;
try {
  require("@jobber/fonts");
  hasJobberFonts = true;
} catch (e) {
  hasJobberFonts = false;
}
postcss([
  postcssCustomProperties({
    preserve: false,
    importFrom: ["foundation.css"],
  }),
  postcssCalc(),
])
  .process(allCss, { from: undefined })
  .then(function (result) {
    const calculated = transform(result.css);
    const jsonContent =
      "/* This file is automatically generated by buildIconStyle.js and should not be edited. */\n" +
      "export const iconStyles = " +
      JSON.stringify(
        {
          ...calculated,
          circleCi: process.env.CIRCLECI || "false",
          tokenExists: Boolean(process.env.JOBBER_NPM_TOKEN) || "false",
          ignoreDeps:
            Boolean(process.env.IGNORE_OPTIONAL_DEPENDENCIES) || "false",
          hasJobberFonts,
          includeFonts: Boolean(process.env.INCLUDE_FONTS),
        },
        undefined,
        2,
      );
    try {
      fs.readdirSync("./node_modules", (err, files) => {
        if (err) {
          console.log("error", err);
        }
        files.forEach(file => {
          console.log(file);
        });
      });
    } catch (e) {
      console.log("error", e);
    }

    console.log(process.cwd(), jsonContent);
    fs.writeFile(
      path.join(__dirname, "src/icons/iconStyles.ts"),
      jsonContent,
      "utf8",
      function (err) {
        if (err) {
          console.log("An error occurred while writing JSON object to File.");
          return console.log(err);
        }
        console.log("JSON file has been saved.");
      },
    );
  });
