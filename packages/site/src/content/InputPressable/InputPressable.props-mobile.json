[
  {
    "tags": {},
    "filePath": "packages/components-native/src/InputPressable/InputPressable.tsx",
    "description": "",
    "displayName": "InputPressable",
    "methods": [],
    "props": {
      "accessibilityHint": {
        "defaultValue": null,
        "description": "Helps users understand what will happen when they perform an action",
        "name": "accessibilityHint",
        "parent": {
          "fileName": "packages/components-native/src/InputPressable/InputPressable.tsx",
          "name": "InputPressableProps"
        },
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "accessibilityLabel": {
        "defaultValue": null,
        "description": "VoiceOver will read this string when a user selects the element",
        "name": "accessibilityLabel",
        "parent": {
          "fileName": "packages/components-native/src/InputPressable/InputPressable.tsx",
          "name": "InputPressableProps"
        },
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "clearable": {
        "defaultValue": null,
        "description": "Add a clear action on the input that clears the value.\n\nSince the input value isn't editable (i.e. `InputDateTime`) you can\nset it to `always`. If you set it to `always` you must also provide an\nonClear to clear the input's value",
        "name": "clearable",
        "parent": {
          "fileName": "packages/components-native/src/InputPressable/InputPressable.tsx",
          "name": "InputPressableProps"
        },
        "required": false,
        "type": {
          "name": "Clearable"
        }
      },
      "disabled": {
        "defaultValue": null,
        "description": "Disables input selection",
        "name": "disabled",
        "parent": {
          "fileName": "packages/components-native/src/InputPressable/InputPressable.tsx",
          "name": "InputPressableProps"
        },
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "error": {
        "defaultValue": null,
        "description": "Indicates if there is an validation error",
        "name": "error",
        "parent": {
          "fileName": "packages/components-native/src/InputPressable/InputPressable.tsx",
          "name": "InputPressableProps"
        },
        "required": false,
        "type": {
          "name": "FieldError"
        }
      },
      "focused": {
        "defaultValue": null,
        "description": "Indicates if the input is focused",
        "name": "focused",
        "parent": {
          "fileName": "packages/components-native/src/InputPressable/InputPressable.tsx",
          "name": "InputPressableProps"
        },
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "invalid": {
        "defaultValue": null,
        "description": "Indicates the current selection is invalid",
        "name": "invalid",
        "parent": {
          "fileName": "packages/components-native/src/InputPressable/InputPressable.tsx",
          "name": "InputPressableProps"
        },
        "required": false,
        "type": {
          "name": "string | boolean"
        }
      },
      "onClear": {
        "defaultValue": null,
        "description": "Callback called when the user clicks the ClearAction button. Should clear\nthe value passed. To disallow clearing set the clearable prop to never",
        "name": "onClear",
        "parent": {
          "fileName": "packages/components-native/src/InputPressable/InputPressable.tsx",
          "name": "InputPressableProps"
        },
        "required": false,
        "type": {
          "name": "(() => void)"
        }
      },
      "onPress": {
        "defaultValue": null,
        "description": "Callback that is called when the text input is focused\n@param event",
        "name": "onPress",
        "parent": {
          "fileName": "packages/components-native/src/InputPressable/InputPressable.tsx",
          "name": "InputPressableProps"
        },
        "required": false,
        "type": {
          "name": "(() => void)"
        }
      },
      "placeholder": {
        "defaultValue": null,
        "description": "Placeholder item shown until a selection is made",
        "name": "placeholder",
        "parent": {
          "fileName": "packages/components-native/src/InputPressable/InputPressable.tsx",
          "name": "InputPressableProps"
        },
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "prefix": {
        "defaultValue": null,
        "description": "Symbol to display before the text input",
        "name": "prefix",
        "parent": {
          "fileName": "packages/components-native/src/InputPressable/InputPressable.tsx",
          "name": "InputPressableProps"
        },
        "required": false,
        "type": {
          "name": "{ icon?: IconNames; label?: string; } | undefined"
        }
      },
      "ref": {
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}",
        "name": "ref",
        "parent": {
          "fileName": "atlantis/node_modules/@types/react/index.d.ts",
          "name": "RefAttributes"
        },
        "required": false,
        "type": {
          "name": "LegacyRef<Text>"
        }
      },
      "suffix": {
        "defaultValue": null,
        "description": "Symbol to display after the text input",
        "name": "suffix",
        "parent": {
          "fileName": "packages/components-native/src/InputPressable/InputPressable.tsx",
          "name": "InputPressableProps"
        },
        "required": false,
        "type": {
          "name": "{ icon: IconNames; label?: string; onPress: () => void; } | { onPress?: undefined; icon?: IconNames; label?: string | undefined; } | undefined"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "Current value of the component",
        "name": "value",
        "parent": {
          "fileName": "packages/components-native/src/InputPressable/InputPressable.tsx",
          "name": "InputPressableProps"
        },
        "required": false,
        "type": {
          "name": "string"
        }
      }
    }
  }
]