[
  {
    "tags": {},
    "filePath": "packages/components-native/src/InputDate/InputDate.tsx",
    "description": "Allow users to select a date using the device date picker.",
    "displayName": "InputDate",
    "methods": [],
    "props": {
      "accessibilityHint": {
        "defaultValue": null,
        "description": "Helps users understand what will happen when they perform an action",
        "name": "accessibilityHint",
        "parent": {
          "fileName": "packages/components-native/src/InputDate/InputDate.tsx",
          "name": "BaseInputDateProps"
        },
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "accessibilityLabel": {
        "defaultValue": null,
        "description": "VoiceOver will read this string when a user selects the element",
        "name": "accessibilityLabel",
        "parent": {
          "fileName": "packages/components-native/src/InputDate/InputDate.tsx",
          "name": "BaseInputDateProps"
        },
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "clearable": {
        "defaultValue": null,
        "description": "Defaulted to \"always\" so user can clear the dates whenever there's a value.",
        "name": "clearable",
        "parent": {
          "fileName": "packages/components-native/src/InputDate/InputDate.tsx",
          "name": "BaseInputDateProps"
        },
        "required": false,
        "type": {
          "name": "\"never\" | \"always\""
        }
      },
      "defaultValue": {
        "defaultValue": null,
        "description": "The initial value for the input.",
        "name": "defaultValue",
        "parent": {
          "fileName": "packages/components-native/src/InputDate/InputDate.tsx",
          "name": "FormControlledInputDate"
        },
        "required": false,
        "type": {
          "name": "Date"
        }
      },
      "disabled": {
        "defaultValue": null,
        "description": "Disable the input",
        "name": "disabled",
        "parent": {
          "fileName": "packages/components-native/src/InputFieldWrapper/InputFieldWrapper.tsx",
          "name": "InputFieldWrapperProps"
        },
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "emptyValueLabel": {
        "defaultValue": null,
        "description": "This label is shown to the user when there's no selected date.",
        "name": "emptyValueLabel",
        "parent": {
          "fileName": "packages/components-native/src/InputDate/InputDate.tsx",
          "name": "BaseInputDateProps"
        },
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "invalid": {
        "defaultValue": null,
        "description": "Highlights the field red and shows message below (if string) to indicate an error",
        "name": "invalid",
        "parent": {
          "fileName": "packages/components-native/src/InputFieldWrapper/InputFieldWrapper.tsx",
          "name": "InputFieldWrapperProps"
        },
        "required": false,
        "type": {
          "name": "string | boolean"
        }
      },
      "maxDate": {
        "defaultValue": null,
        "description": "Maximum date the user can set.",
        "name": "maxDate",
        "parent": {
          "fileName": "packages/components-native/src/InputDate/InputDate.tsx",
          "name": "BaseInputDateProps"
        },
        "required": false,
        "type": {
          "name": "Date"
        }
      },
      "minDate": {
        "defaultValue": null,
        "description": "Minimum date the user can set",
        "name": "minDate",
        "parent": {
          "fileName": "packages/components-native/src/InputDate/InputDate.tsx",
          "name": "BaseInputDateProps"
        },
        "required": false,
        "type": {
          "name": "Date"
        }
      },
      "name": {
        "defaultValue": null,
        "description": "Adding a `name` would make this component \"Form controlled\" and must be\nnested within a `<Form />` component.\n\nCannot be declared if `value` prop is used.",
        "name": "name",
        "parent": {
          "fileName": "packages/components-native/src/InputDate/InputDate.tsx",
          "name": "FormControlledInputDate"
        },
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "The callback that fires whenever a date gets selected.",
        "name": "onChange",
        "parent": {
          "fileName": "packages/components-native/src/InputDate/InputDate.tsx",
          "name": "DevControlledInputDate"
        },
        "required": false,
        "type": {
          "name": "((value?: Date) => void) | ((value?: Date | null) => void) | undefined"
        }
      },
      "placeholder": {
        "defaultValue": null,
        "description": "Hint text that goes above the value once the field is filled out",
        "name": "placeholder",
        "parent": {
          "fileName": "packages/components-native/src/InputFieldWrapper/InputFieldWrapper.tsx",
          "name": "InputFieldWrapperProps"
        },
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "validations": {
        "defaultValue": null,
        "description": "Shows an error message below the field and highlights it red when the\nvalue is invalid. Only applies when nested within a `<Form />` component.\n\nYou can see **most** of the rules you can pass in\n[React-hook-form Documentation](https://react-hook-form.com/api/useform/register#options).",
        "name": "validations",
        "parent": {
          "fileName": "packages/components-native/src/InputDate/InputDate.tsx",
          "name": "FormControlledInputDate"
        },
        "required": false,
        "type": {
          "name": "Omit<RegisterOptions<FieldValues, string>, \"setValueAs\" | \"disabled\" | \"valueAsNumber\" | \"valueAsDate\">"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "The value shown on the field. This gets automatically formatted to the\naccount's date format.\n\nCannot be declared if `name` prop is used.",
        "name": "value",
        "parent": {
          "fileName": "packages/components-native/src/InputDate/InputDate.tsx",
          "name": "DevControlledInputDate"
        },
        "required": false,
        "type": {
          "name": "string | Date"
        }
      }
    }
  }
]