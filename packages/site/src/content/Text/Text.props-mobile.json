[
  {
    "tags": {},
    "filePath": "packages/components-native/src/Text/Text.tsx",
    "description": "",
    "displayName": "Text",
    "methods": [],
    "props": {
      "adjustsFontSizeToFit": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Determines whether text should be scaled down to fit based on maxLines prop",
        "name": "adjustsFontSizeToFit",
        "parent": {
          "fileName": "packages/components-native/src/Text/Text.tsx",
          "name": "TextProps"
        },
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "align": {
        "defaultValue": null,
        "description": "Alignment of text",
        "name": "align",
        "parent": {
          "fileName": "packages/components-native/src/Text/Text.tsx",
          "name": "TextProps"
        },
        "required": false,
        "type": {
          "name": "TextAlign"
        }
      },
      "allowFontScaling": {
        "defaultValue": {
          "value": "true"
        },
        "description": "Allow text to be resized based on user's device display scale",
        "name": "allowFontScaling",
        "parent": {
          "fileName": "packages/components-native/src/Text/Text.tsx",
          "name": "TextProps"
        },
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "children": {
        "defaultValue": null,
        "description": "Text to display. Supports nesting text elements.",
        "name": "children",
        "parent": {
          "fileName": "packages/components-native/src/Text/Text.tsx",
          "name": "TextProps"
        },
        "required": false,
        "type": {
          "name": "ReactNode"
        }
      },
      "emphasis": {
        "defaultValue": null,
        "description": "Change the appearance of the text",
        "name": "emphasis",
        "parent": {
          "fileName": "packages/components-native/src/Text/Text.tsx",
          "name": "TextProps"
        },
        "required": false,
        "type": {
          "name": "\"strong\""
        }
      },
      "hideFromScreenReader": {
        "defaultValue": {
          "value": "false"
        },
        "description": "This will make the text inaccessible to the screen reader.\nThis should be avoided unless there is a good reason.\nFor example this is used in InputText to make it so the label isn't\nselectable because it is already read from the accessibilityLabel\nof the TextInput",
        "name": "hideFromScreenReader",
        "parent": {
          "fileName": "packages/components-native/src/Text/Text.tsx",
          "name": "TextProps"
        },
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "italic": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Use italic font style",
        "name": "italic",
        "parent": {
          "fileName": "packages/components-native/src/Text/Text.tsx",
          "name": "TextProps"
        },
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "level": {
        "defaultValue": {
          "value": "text"
        },
        "description": "Visual hierarchy of the text",
        "name": "level",
        "parent": {
          "fileName": "packages/components-native/src/Text/Text.tsx",
          "name": "TextProps"
        },
        "required": false,
        "type": {
          "name": "TextLevel"
        }
      },
      "maxFontScaleSize": {
        "defaultValue": null,
        "description": "Set the maximum font the text can go to size when the user scales their\ndevice font size",
        "name": "maxFontScaleSize",
        "parent": {
          "fileName": "packages/components-native/src/Typography/Typography.tsx",
          "name": "TypographyProps"
        },
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "maxLines": {
        "defaultValue": {
          "value": "unlimited"
        },
        "description": "The maximum amount of lines the text can occupy before being truncated with \"...\".\nUses predefined string values that correspond to a doubling scale for the amount of lines.",
        "name": "maxLines",
        "parent": {
          "fileName": "packages/components-native/src/Text/Text.tsx",
          "name": "TextProps"
        },
        "required": false,
        "type": {
          "name": "TruncateLength"
        }
      },
      "onTextLayout": {
        "defaultValue": null,
        "description": "Callback that is called when the text is laid out.",
        "name": "onTextLayout",
        "parent": {
          "fileName": "packages/components-native/src/Text/Text.tsx",
          "name": "TextProps"
        },
        "required": false,
        "type": {
          "name": "((event: TextLayoutEvent) => void)"
        }
      },
      "reverseTheme": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Reverse theme for better display on dark background",
        "name": "reverseTheme",
        "parent": {
          "fileName": "packages/components-native/src/Text/Text.tsx",
          "name": "TextProps"
        },
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "selectable": {
        "defaultValue": {
          "value": "true"
        },
        "description": "Lets the user select text, to use the native copy and paste functionality.\nWARNING: if true, this prevents ellipsis from being shown on Android.",
        "name": "selectable",
        "parent": {
          "fileName": "packages/components-native/src/Typography/Typography.tsx",
          "name": "TypographyProps"
        },
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "strikeThrough": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Have text styled with strike through",
        "name": "strikeThrough",
        "parent": {
          "fileName": "packages/components-native/src/Text/Text.tsx",
          "name": "TextProps"
        },
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "underline": {
        "defaultValue": null,
        "description": "Underline style to use for the text. The non-solid style is only supported\non iOS, as per React Native's Text component's limitations.\nhttps://reactnative.dev/docs/text-style-props#textdecorationstyle-ios",
        "name": "underline",
        "parent": {
          "fileName": "packages/components-native/src/Text/Text.tsx",
          "name": "TextProps"
        },
        "required": false,
        "type": {
          "name": "\"solid\" | \"dotted\""
        }
      },
      "UNSAFE_style": {
        "defaultValue": null,
        "description": "**Use at your own risk:** Custom style for specific elements. This should only be used as a\n**last resort**. Using this may result in unexpected side effects.\nMore information in the [Customizing components Guide](https://atlantis.getjobber.com/guides/customizing-components).",
        "name": "UNSAFE_style",
        "parent": {
          "fileName": "packages/components-native/src/Text/Text.tsx",
          "name": "TextProps"
        },
        "required": false,
        "type": {
          "name": "TypographyUnsafeStyle"
        }
      },
      "variation": {
        "defaultValue": {
          "value": "base"
        },
        "description": "Color variation of text",
        "name": "variation",
        "parent": {
          "fileName": "packages/components-native/src/Text/Text.tsx",
          "name": "TextProps"
        },
        "required": false,
        "type": {
          "name": "TextVariation"
        }
      }
    }
  }
]