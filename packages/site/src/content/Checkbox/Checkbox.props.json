[
  {
    "tags": {},
    "filePath": "packages/components/src/Checkbox/Checkbox.tsx",
    "description": "",
    "displayName": "CheckboxLegacy",
    "methods": [],
    "props": {
      "checked": {
        "defaultValue": null,
        "description": "Determines if the checkbox is checked or not.",
        "name": "checked",
        "parent": {
          "fileName": "packages/components/src/Checkbox/Checkbox.types.ts",
          "name": "BaseCheckboxProps"
        },
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "children": {
        "defaultValue": null,
        "description": "Component children, which shows up as a label",
        "name": "children",
        "parent": {
          "fileName": "packages/components/src/Checkbox/Checkbox.types.ts",
          "name": "CheckboxChildrenProps"
        },
        "required": false,
        "type": {
          "name": "ReactElement<any, string | JSXElementConstructor<any>>"
        }
      },
      "defaultChecked": {
        "defaultValue": null,
        "description": "Initial checked value of the checkbox. Only use this when you need to\npre-populate the checked attribute that is not controlled by the component's\nstate. If a state is controlling it, use the `checked` prop instead.",
        "name": "defaultChecked",
        "parent": {
          "fileName": "packages/components/src/Checkbox/Checkbox.types.ts",
          "name": "BaseCheckboxProps"
        },
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "description": {
        "defaultValue": null,
        "description": "Further description of the label",
        "name": "description",
        "parent": {
          "fileName": "packages/components/src/Checkbox/Checkbox.types.ts",
          "name": "BaseCheckboxProps"
        },
        "required": false,
        "type": {
          "name": "ReactNode"
        }
      },
      "disabled": {
        "defaultValue": null,
        "description": "Disables the checkbox.",
        "name": "disabled",
        "parent": {
          "fileName": "packages/components/src/Checkbox/Checkbox.types.ts",
          "name": "BaseCheckboxProps"
        },
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "id": {
        "defaultValue": null,
        "description": "ID for the checkbox input",
        "name": "id",
        "parent": {
          "fileName": "packages/components/src/Checkbox/Checkbox.types.ts",
          "name": "BaseCheckboxProps"
        },
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "indeterminate": {
        "defaultValue": {
          "value": "false"
        },
        "description": "When `true` the checkbox to appears in indeterminate.",
        "name": "indeterminate",
        "parent": {
          "fileName": "packages/components/src/Checkbox/Checkbox.types.ts",
          "name": "BaseCheckboxProps"
        },
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "invalid": {
        "defaultValue": null,
        "description": "Whether the checkbox is invalid",
        "name": "invalid",
        "parent": {
          "fileName": "packages/components/src/Checkbox/Checkbox.types.ts",
          "name": "BaseCheckboxProps"
        },
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "label": {
        "defaultValue": null,
        "description": "Label that shows up beside the checkbox.",
        "name": "label",
        "parent": {
          "fileName": "packages/components/src/Checkbox/Checkbox.types.ts",
          "name": "CheckboxLabelProps"
        },
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "name": {
        "defaultValue": null,
        "description": "Checkbox input name",
        "name": "name",
        "parent": {
          "fileName": "packages/components/src/Checkbox/Checkbox.types.ts",
          "name": "BaseCheckboxProps"
        },
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "onBlur": {
        "defaultValue": null,
        "description": "Called when the checkbox loses focus",
        "name": "onBlur",
        "parent": {
          "fileName": "packages/components/src/Checkbox/Checkbox.types.ts",
          "name": "BaseCheckboxProps"
        },
        "required": false,
        "type": {
          "name": "((event: FocusEvent<HTMLInputElement, Element>) => void)"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "Called when the checkbox value changes",
        "name": "onChange",
        "parent": {
          "fileName": "packages/components/src/Checkbox/Checkbox.types.ts",
          "name": "BaseCheckboxProps"
        },
        "required": false,
        "type": {
          "name": "((newValue: boolean) => void)"
        }
      },
      "onFocus": {
        "defaultValue": null,
        "description": "Called when the checkbox is focused",
        "name": "onFocus",
        "parent": {
          "fileName": "packages/components/src/Checkbox/Checkbox.types.ts",
          "name": "BaseCheckboxProps"
        },
        "required": false,
        "type": {
          "name": "((event: FocusEvent<HTMLInputElement, Element>) => void)"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "Value of the checkbox.",
        "name": "value",
        "parent": {
          "fileName": "packages/components/src/Checkbox/Checkbox.types.ts",
          "name": "BaseCheckboxProps"
        },
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "version": {
        "defaultValue": null,
        "description": "",
        "name": "version",
        "required": false,
        "type": {
          "name": "1"
        }
      }
    }
  }
]