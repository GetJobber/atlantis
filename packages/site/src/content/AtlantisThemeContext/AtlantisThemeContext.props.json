[
  {
    "tags": {},
    "filePath": "../components/src/AtlantisThemeContext/AtlantisThemeContext.tsx",
    "description": "",
    "displayName": "AtlantisThemeContextProvider",
    "methods": [],
    "props": {
      "children": {
        "defaultValue": null,
        "description": "The children to render.",
        "name": "children",
        "parent": {
          "fileName": "packages/components/src/AtlantisThemeContext/types.ts",
          "name": "AtlantisThemeContextProviderProps"
        },
        "required": true,
        "type": {
          "name": "ReactNode"
        }
      },
      "dangerouslyOverrideTheme": {
        "defaultValue": null,
        "description": "Force the theme for this provider to always be the same as the provided theme. Useful for sections that should remain the same theme regardless of the rest of the application's theme.\nThis is dangerous because the children in this provider will not be able to change the theme.",
        "name": "dangerouslyOverrideTheme",
        "parent": {
          "fileName": "packages/components/src/AtlantisThemeContext/types.ts",
          "name": "AtlantisThemeContextProviderProps"
        },
        "required": false,
        "type": {
          "name": "Theme"
        }
      },
      "dangerouslyOverrideTokens": {
        "defaultValue": null,
        "description": "Overrides existing design tokens with custom values. Can also supply custom tokens which will be accessible\nvia useAtlantisTheme() context and css variables.\nIf provided, these tokens will be used for both light and dark themes.\n\n**Important**: you should provide a constant or at least a memoized value for performance reasons.",
        "name": "dangerouslyOverrideTokens",
        "parent": {
          "fileName": "packages/components/src/AtlantisThemeContext/types.ts",
          "name": "AtlantisThemeContextProviderProps"
        },
        "required": false,
        "type": {
          "name": "OverrideTokens"
        }
      }
    }
  }
]