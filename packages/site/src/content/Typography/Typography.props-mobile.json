[
  {
    "tags": {},
    "filePath": "packages/components-native/src/Typography/Typography.tsx",
    "description": "",
    "displayName": "Typography",
    "methods": [],
    "props": {
      "accessibilityRole": {
        "defaultValue": null,
        "description": "Accessibility role describing the context of the text",
        "name": "accessibilityRole",
        "parent": {
          "fileName": "packages/components-native/src/Typography/Typography.tsx",
          "name": "TypographyProps"
        },
        "required": false,
        "type": {
          "name": "TextAccessibilityRole"
        }
      },
      "adjustsFontSizeToFit": {
        "defaultValue": null,
        "description": "Determines whether text should be scaled down to fit based on maxLines prop",
        "name": "adjustsFontSizeToFit",
        "parent": {
          "fileName": "packages/components-native/src/Typography/Typography.tsx",
          "name": "TypographyProps"
        },
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "align": {
        "defaultValue": null,
        "description": "Alignment of text",
        "name": "align",
        "parent": {
          "fileName": "packages/components-native/src/Typography/Typography.tsx",
          "name": "TypographyProps"
        },
        "required": false,
        "type": {
          "name": "TextAlign"
        }
      },
      "allowFontScaling": {
        "defaultValue": null,
        "description": "Allow text to be resized based on user's device display scale",
        "name": "allowFontScaling",
        "parent": {
          "fileName": "packages/components-native/src/Typography/Typography.tsx",
          "name": "TypographyProps"
        },
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "children": {
        "defaultValue": null,
        "description": "Text to display. Supports nesting text elements.",
        "name": "children",
        "parent": {
          "fileName": "packages/components-native/src/Typography/Typography.tsx",
          "name": "TypographyProps"
        },
        "required": false,
        "type": {
          "name": "ReactNode"
        }
      },
      "color": {
        "defaultValue": null,
        "description": "Color of text",
        "name": "color",
        "parent": {
          "fileName": "packages/components-native/src/Typography/Typography.tsx",
          "name": "TypographyProps"
        },
        "required": false,
        "type": {
          "name": "TextColor"
        }
      },
      "fontFamily": {
        "defaultValue": null,
        "description": "Font Family",
        "name": "fontFamily",
        "parent": {
          "fileName": "packages/components-native/src/Typography/Typography.tsx",
          "name": "TypographyProps"
        },
        "required": false,
        "type": {
          "name": "FontFamily"
        }
      },
      "fontStyle": {
        "defaultValue": null,
        "description": "Font style",
        "name": "fontStyle",
        "parent": {
          "fileName": "packages/components-native/src/Typography/Typography.tsx",
          "name": "TypographyProps"
        },
        "required": false,
        "type": {
          "name": "FontStyle"
        }
      },
      "fontWeight": {
        "defaultValue": null,
        "description": "Font weight",
        "name": "fontWeight",
        "parent": {
          "fileName": "packages/components-native/src/Typography/Typography.tsx",
          "name": "TypographyProps"
        },
        "required": false,
        "type": {
          "name": "\"black\" | \"bold\" | \"regular\" | \"medium\" | \"semiBold\" | \"extraBold\""
        }
      },
      "hideFromScreenReader": {
        "defaultValue": null,
        "description": "This will make the text inaccessible to the screen reader.\nThis should be avoided unless there is a good reason.\nFor example this is used in InputText to make it so the label isn't\nselectable because it is already read from the accessibilityLabel\nof the TextInput",
        "name": "hideFromScreenReader",
        "parent": {
          "fileName": "packages/components-native/src/Typography/Typography.tsx",
          "name": "TypographyProps"
        },
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "letterSpacing": {
        "defaultValue": null,
        "description": "Spacing between letters",
        "name": "letterSpacing",
        "parent": {
          "fileName": "packages/components-native/src/Typography/Typography.tsx",
          "name": "TypographyProps"
        },
        "required": false,
        "type": {
          "name": "LetterSpacing"
        }
      },
      "lineHeight": {
        "defaultValue": null,
        "description": "Line Height",
        "name": "lineHeight",
        "parent": {
          "fileName": "packages/components-native/src/Typography/Typography.tsx",
          "name": "TypographyProps"
        },
        "required": false,
        "type": {
          "name": "LineHeight"
        }
      },
      "maxFontScaleSize": {
        "defaultValue": null,
        "description": "Set the maximum font the text can go to size when the user scales their\ndevice font size",
        "name": "maxFontScaleSize",
        "parent": {
          "fileName": "packages/components-native/src/Typography/Typography.tsx",
          "name": "TypographyProps"
        },
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "maxLines": {
        "defaultValue": null,
        "description": "The maximum amount of lines the text can occupy before being truncated with \"...\".\nUses predefined string values that correspond to a doubling scale for the amount of lines.\nWARNING: if `selectable` is true, Android will not show an ellipsis.",
        "name": "maxLines",
        "parent": {
          "fileName": "packages/components-native/src/Typography/Typography.tsx",
          "name": "TypographyProps"
        },
        "required": false,
        "type": {
          "name": "TruncateLength"
        }
      },
      "onTextLayout": {
        "defaultValue": null,
        "description": "Callback behaves differently on iOS and Android.\nOn iOS, it is called when the text is laid out.\nOn Android, it is called before the text is laid out.\n@see https://reactnative.dev/docs/text#ontextlayout",
        "name": "onTextLayout",
        "parent": {
          "fileName": "packages/components-native/src/Typography/Typography.tsx",
          "name": "TypographyProps"
        },
        "required": false,
        "type": {
          "name": "((event: TextLayoutEvent) => void)"
        }
      },
      "reverseTheme": {
        "defaultValue": null,
        "description": "Reverse theme for better display on dark background",
        "name": "reverseTheme",
        "parent": {
          "fileName": "packages/components-native/src/Typography/Typography.tsx",
          "name": "TypographyProps"
        },
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "selectable": {
        "defaultValue": {
          "value": "true"
        },
        "description": "Lets the user select text, to use the native copy and paste functionality.\nWARNING: if true, this prevents ellipsis from being shown on Android.",
        "name": "selectable",
        "parent": {
          "fileName": "packages/components-native/src/Typography/Typography.tsx",
          "name": "TypographyProps"
        },
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "size": {
        "defaultValue": null,
        "description": "Font size",
        "name": "size",
        "parent": {
          "fileName": "packages/components-native/src/Typography/Typography.tsx",
          "name": "TypographyProps"
        },
        "required": false,
        "type": {
          "name": "TextSize"
        }
      },
      "strikeThrough": {
        "defaultValue": null,
        "description": "Have text styled with strike through",
        "name": "strikeThrough",
        "parent": {
          "fileName": "packages/components-native/src/Typography/Typography.tsx",
          "name": "TypographyProps"
        },
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "transform": {
        "defaultValue": null,
        "description": "Text capitalization",
        "name": "transform",
        "parent": {
          "fileName": "packages/components-native/src/Typography/Typography.tsx",
          "name": "TypographyProps"
        },
        "required": false,
        "type": {
          "name": "TextTransform"
        }
      },
      "underline": {
        "defaultValue": null,
        "description": "Underline style to use for the text. The non-solid style is only supported\non iOS, as per React Native's Text component's limitations.\nhttps://reactnative.dev/docs/text-style-props#textdecorationstyle-ios",
        "name": "underline",
        "parent": {
          "fileName": "packages/components-native/src/Typography/Typography.tsx",
          "name": "TypographyProps"
        },
        "required": false,
        "type": {
          "name": "\"solid\" | \"double\" | \"dotted\" | \"dashed\""
        }
      },
      "UNSAFE_style": {
        "defaultValue": null,
        "description": "",
        "name": "UNSAFE_style",
        "parent": {
          "fileName": "packages/components-native/src/Typography/Typography.tsx",
          "name": "TypographyProps"
        },
        "required": false,
        "type": {
          "name": "TypographyUnsafeStyle"
        }
      }
    }
  }
]