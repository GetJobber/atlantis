[
  {
    "tags": {},
    "filePath": "../components/src/InputFile/InputFile.tsx",
    "description": "",
    "displayName": "InputFile",
    "methods": [],
    "props": {
      "variation": {
        "defaultValue": {
          "value": "dropzone"
        },
        "description": "Display variation.",
        "name": "variation",
        "parent": {
          "fileName": "../components/src/InputFile/InputFile.tsx",
          "name": "InputFileProps"
        },
        "required": false,
        "type": {
          "name": "\"dropzone\" | \"button\""
        }
      },
      "size": {
        "defaultValue": {
          "value": "base"
        },
        "description": "Size of the InputFile",
        "name": "size",
        "parent": {
          "fileName": "../components/src/InputFile/InputFile.tsx",
          "name": "InputFileProps"
        },
        "required": false,
        "type": {
          "name": "\"small\" | \"base\""
        }
      },
      "buttonLabel": {
        "defaultValue": {
          "value": "Automatic"
        },
        "description": "Label for the InputFile's button.",
        "name": "buttonLabel",
        "parent": {
          "fileName": "../components/src/InputFile/InputFile.tsx",
          "name": "InputFileProps"
        },
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "allowedTypes": {
        "defaultValue": {
          "value": "all"
        },
        "description": "Allowed File types.\n@param  \"images\" - only accepts all types of image\n@param  \"basicImages\" - only accepts png, jpg and jpeg\n@param  \"string[]\" - accept a specific list of MIME types",
        "name": "allowedTypes",
        "parent": {
          "fileName": "../components/src/InputFile/InputFile.tsx",
          "name": "InputFileProps"
        },
        "required": false,
        "type": {
          "name": "\"all\" | \"images\" | \"basicImages\" | string[]"
        }
      },
      "allowMultiple": {
        "defaultValue": {
          "value": false
        },
        "description": "Allow for multiple files to be selected for upload.",
        "name": "allowMultiple",
        "parent": {
          "fileName": "../components/src/InputFile/InputFile.tsx",
          "name": "InputFileProps"
        },
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "description": {
        "defaultValue": null,
        "description": "Further description of the input.",
        "name": "description",
        "parent": {
          "fileName": "../components/src/InputFile/InputFile.tsx",
          "name": "InputFileProps"
        },
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "maxFilesValidation": {
        "defaultValue": null,
        "description": "An object which helps control and validate the number of files being uploaded\nvia the dropzone.\n`maxFilesValidation={{ maxFiles: 3, numberOfCurrentFiles: files.length }}`",
        "name": "maxFilesValidation",
        "parent": {
          "fileName": "../components/src/InputFile/InputFile.tsx",
          "name": "InputFileProps"
        },
        "required": false,
        "type": {
          "name": "{ readonly maxFiles: number; readonly numberOfCurrentFiles: number; }"
        }
      },
      "getUploadParams": {
        "defaultValue": null,
        "description": "A callback that receives a file object and returns a `UploadParams` needed\nto upload the file.\n\nMore info is available at:\nhttps://atlantis.getjobber.com/?path=/docs/components-forms-and-inputs-inputfile--docs#getuploadparams",
        "name": "getUploadParams",
        "parent": {
          "fileName": "../components/src/InputFile/InputFile.tsx",
          "name": "InputFileProps"
        },
        "required": true,
        "type": {
          "name": "(file: File) => UploadParams | Promise<UploadParams>"
        }
      },
      "onUploadStart": {
        "defaultValue": null,
        "description": "Upload event handler. Triggered on upload start.",
        "name": "onUploadStart",
        "parent": {
          "fileName": "../components/src/InputFile/InputFile.tsx",
          "name": "InputFileProps"
        },
        "required": false,
        "type": {
          "name": "(file: FileUpload) => void"
        }
      },
      "onUploadProgress": {
        "defaultValue": null,
        "description": "Upload event handler. Triggered as upload progresses.",
        "name": "onUploadProgress",
        "parent": {
          "fileName": "../components/src/InputFile/InputFile.tsx",
          "name": "InputFileProps"
        },
        "required": false,
        "type": {
          "name": "(file: FileUpload) => void"
        }
      },
      "onUploadComplete": {
        "defaultValue": null,
        "description": "Upload event handler. Triggered on upload completion.",
        "name": "onUploadComplete",
        "parent": {
          "fileName": "../components/src/InputFile/InputFile.tsx",
          "name": "InputFileProps"
        },
        "required": false,
        "type": {
          "name": "(file: FileUpload) => void"
        }
      },
      "onUploadError": {
        "defaultValue": null,
        "description": "Upload event handler. Triggered on upload error.",
        "name": "onUploadError",
        "parent": {
          "fileName": "../components/src/InputFile/InputFile.tsx",
          "name": "InputFileProps"
        },
        "required": false,
        "type": {
          "name": "(error: Error) => void"
        }
      },
      "validator": {
        "defaultValue": null,
        "description": "Pass a custom validator function that will be called when a file is dropped.",
        "name": "validator",
        "parent": {
          "fileName": "../components/src/InputFile/InputFile.tsx",
          "name": "InputFileProps"
        },
        "required": false,
        "type": {
          "name": "<T extends File>(file: T) => FileError | FileError[]"
        }
      }
    }
  }
]