[
  {
    "tags": {},
    "filePath": "packages/components/src/Form/Form.tsx",
    "description": "",
    "displayName": "Form",
    "methods": [],
    "props": {
      "onStateChange": {
        "defaultValue": null,
        "description": "",
        "name": "onStateChange",
        "parent": {
          "fileName": "packages/components/src/Form/Form.tsx",
          "name": "FormProps"
        },
        "required": false,
        "type": {
          "name": "((formState: { isDirty: boolean; isValid: boolean; }) => void)"
        }
      },
      "onSubmit": {
        "defaultValue": null,
        "description": "Callback for when the form has been sucessfully\nsubmitted.",
        "name": "onSubmit",
        "parent": {
          "fileName": "packages/components/src/Form/Form.tsx",
          "name": "FormProps"
        },
        "required": false,
        "type": {
          "name": "(() => void)"
        }
      },
      "ref": {
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}",
        "name": "ref",
        "parent": {
          "fileName": "atlantis/node_modules/@types/react/index.d.ts",
          "name": "RefAttributes"
        },
        "required": false,
        "type": {
          "name": "LegacyRef<FormRef>"
        }
      }
    }
  }
]