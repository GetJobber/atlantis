:root {
  --switch--pipSize: var(--space-large);
  --switch--width: 68px;
  --switch--labelWidth: calc(var(--switch--width) - var(--switch--pipSize));
  --switch--innerOffset: var(--space-smaller);
}

.track,
.track * {
  box-sizing: border-box;
  transition: all var(--timing-base);
}

.track {
  display: inline-flex;
  position: relative;
  width: var(--switch--width);
  padding: var(--space-smaller);
  border: none;
  border-radius: var(--switch--pipSize);
  overflow: hidden;
  line-height: normal;
  background-color: var(--color-surface--background);
  cursor: pointer;
  appearance: none;
}

.track:focus {
  box-shadow: var(--shadow-focus);
  outline: none;
}

.isChecked {
  background-color: var(--color-interactive);
  transform-origin: left center;
}

.withForce.isChecked {
  background-color: var(--color-green);
  animation: inertia var(--timing-base) ease-in-out var(--timing-quick);
}

@keyframes inertia {
  0%,
  100% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.1, 1);
  }
}

.pip {
  position: relative;
  left: 0;
  z-index: 1;
  width: var(--switch--pipSize);
  height: var(--switch--pipSize);
  box-shadow: var(--shadow-base);
  border-radius: var(--radius-circle);
  background-color: var(--color-surface);
  transition: all var(--timing-base) ease-in-out;
  flex: 0 0 auto;
}

.disabled {
  border-color: var(--color-disabled--secondary);
  background-color: var(--color-surface--background);
  cursor: not-allowed;
}

.disabled .pip {
  border-color: var(--color-disabled--secondary);
}

.withForce .pip {
  animation: shake var(--timing-base) ease-in-out infinite;
}

.isChecked .pip {
  left: calc(
    calc(var(--switch--width) - var(--switch--pipSize)) - var(--space-small)
  );
  border-color: var(--color-green);
  animation: pipInertiaForwards var(--timing-base) ease-in-out;
}

.withForce.isChecked .pip {
  animation-duration: var(--timing-quick);
  transition-duration: var(--timing-quick);
}

@keyframes pipInertiaForwards {
  10%,
  85%,
  100% {
    width: var(--switch--pipSize);
  }

  40% {
    width: calc(var(--switch--pipSize) + var(--space-base));
    border-top-right-radius: var(--space-large);
    border-bottom-right-radius: var(--space-large);
  }
}

@keyframes shake {
  0% {
    transform: translate(1px, 1px);
  }

  10% {
    transform: translate(-1px, -2px);
  }

  20% {
    transform: translate(-3px, 0px);
  }

  30% {
    transform: translate(3px, 2px);
  }

  40% {
    transform: translate(1px, -1px);
  }

  50% {
    transform: translate(-1px, 2px);
  }

  60% {
    transform: translate(-3px, 1px);
  }

  70% {
    transform: translate(3px, 1px);
  }

  80% {
    transform: translate(-1px, -1px);
  }

  90% {
    transform: translate(1px, 2px);
  }

  100% {
    transform: translate(1px, -2px);
  }
}

.label {
  display: flex;
  position: absolute;
  top: 50%;
  z-index: 0;
  min-width: var(--switch--labelWidth);
  margin-top: var(--space-minuscule);
  -webkit-font-smoothing: antialiased;
  user-select: none;
  pointer-events: none;
  transform: translateY(-50%);
  align-items: center;
  justify-content: center;
}

.label:first-of-type {
  left: 0;
  opacity: 0;
  transform: translate(20%, -50%);
}

.label:last-of-type {
  right: 0;
  opacity: 1;
  transform: translate(0, -50%);
}

.isChecked .label:first-of-type {
  opacity: 1;
  transform: translate(0, -50%);
}

.isChecked .label:last-of-type {
  opacity: 0;
  transform: translate(-20%, -50%);
}
