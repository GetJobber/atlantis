:root {
  --button--color-variation: var(--color-interactive);
  --button--color-variation--hover: var(--color-interactive--hover);
  --button--color-surface: var(--color-surface);
  --button--color-surface--hover: var(--color-surface--background);
  --button--color-primaryLabel: var(--color-white);

  --button--duration-loading: 2s;
}

.button {
  display: inline-flex;
  min-height: calc(var(--base-unit) * 2.25);
  box-sizing: border-box;
  margin: 0;
  border: var(--border-base) solid var(--button--color-variation);
  border-radius: var(--radius-base);
  color: var(--button--color-variation);
  fill: var(--button--color-variation);
  -webkit-font-smoothing: antialiased;
  text-align: center;
  text-decoration: none;
  vertical-align: middle;
  background-color: var(--button--color-surface);
  cursor: pointer;
  transition: all var(--timing-base);
  appearance: none;
  align-items: center;
  justify-content: center;
}

.button * {
  color: inherit;
  fill: inherit !important; /* required to over-ride very specific fill from <Icon> */
}

.button:hover,
a.button:hover,
.button:focus,
a.button:focus,
.button:active,
a.button:active {
  border-color: var(--button--color-variation--hover);
  color: var(--button--color-variation--hover);
  fill: var(--button--color-variation--hover);
  background-color: var(--button--color-surface--hover);
}

.button:focus,
a.button:focus,
.button:active,
a.button:active {
  box-shadow: var(--shadow-focus);
  outline: none;
}

/* Variation */

.work {
  --button--color-variation: var(--color-interactive);
  --button--color-variation--hover: var(--color-interactive--hover);
}

.learning {
  --button--color-variation: var(--color-informative);
  --button--color-variation--hover: var(--color-informative--onSurface);
}

.destructive {
  --button--color-variation: var(--color-destructive);
  --button--color-variation--hover: var(--color-destructive--hover);
}

/* Cancel is special because, by default, it's styled as a secondary button */

.cancel,
.subtle {
  --button--color-variation: var(--color-interactive--subtle);
  --button--color-variation--hover: var(--color-interactive--subtle--hover);
}

/* Type */

.primary:not(.cancel, .subtle, .disabled),
.primary:not(.cancel, .subtle, .disabled):hover,
.primary:not(.cancel, .subtle, .disabled):focus {
  color: var(--button--color-primaryLabel);
  background-color: var(--button--color-variation);
  fill: var(--button--color-primaryLabel);
}

.primary:not(.cancel, .subtle, .disabled):hover,
.primary:not(.cancel, .subtle, .disabled):focus {
  background-color: var(--button--color-variation--hover);
}

.cancel.primary,
.subtle.primary {
  color: var(--button--color-variation);
  fill: var(--button--color-variation);
  background-color: var(--button--color-surface);
}

.secondary,
.subtle.primary {
  border-color: var(--button--color-variation);
}

.cancel.primary:hover,
.cancel.primary:focus,
.subtle.primary:hover,
.subtle.primary:focus {
  color: var(--button--color-variation--hover);
  background-color: var(--button--color-surface--hover);
  fill: var(--button--color-variation--hover);
}

.subtle.secondary {
  background-color: var(--button--color-surface);
}

.tertiary,
.subtle.secondary {
  border-color: transparent;
}

.subtle.secondary:hover,
.subtle.secondary:focus {
  background-color: var(--button--color-surface--hover);
}

.tertiary:hover,
.tertiary:focus,
a.tertiary:hover,
a.tertiary:focus,
.subtle.secondary:hover,
.subtle.secondary:focus,
a.subtle.secondary:hover,
a.subtle.secondary:focus {
  border-color: transparent;
}

.subtle {
  border-color: transparent;
  background-color: transparent;
}

.subtle.tertiary:hover,
.subtle.tertiary:focus,
a.subtle.tertiary:hover,
a.subtle.tertiary:focus {
  border-color: transparent;
  color: var(--color-interactive--subtle--hover);
  fill: var(--color-interactive--subtle--hover);
}

/* Disabled */

.button.disabled,
a.button.disabled,
.button.disabled:hover,
a.button.disabled:hover {
  border-color: var(--color-disabled--secondary);
  color: var(--color-disabled);
  user-select: none;
  background-color: var(--color-disabled--secondary);
  fill: var(--color-disabled);
  pointer-events: none;
  cursor: not-allowed;
}

/* Sizes */

.small {
  min-height: calc(var(--base-unit) * 1.5);
  padding: 0 var(--space-small);
}

.base {
  min-height: calc(var(--base-unit) * 2.25);
  padding: 0 calc(var(--space-base) - 4px);
}

.large {
  min-height: calc(var(--base-unit) * 3);
  padding: 0 var(--space-base);
}

/* Icon */

.onlyIcon {
  width: calc(var(--base-unit) * 2.25);
  padding: 0;
}

.onlyIcon.small {
  width: calc(var(--space-small) * 3);
}

.onlyIcon.base {
  width: calc(var(--space-base) * 2.25);
}

.onlyIcon.large {
  width: calc(var(--space-large) * 2);
}

.hasIconAndLabel {
  width: auto;
}

.hasIconAndLabel > *:first-child {
  margin-right: var(--space-small);
}

.iconOnRight > *:first-child {
  margin-left: var(--space-small);
  margin-right: 0;
  order: 1;
}

.fullWidth {
  width: 100%;
}

.loading {
  background-image: linear-gradient(
    135deg,
    rgba(0, 0, 0, 10%) 0%,
    rgba(0, 0, 0, 10%) 25%,
    transparent 25%,
    transparent 50%,
    rgba(0, 0, 0, 10%) 50%,
    rgba(0, 0, 0, 10%) 75%,
    transparent 75%,
    transparent 100%
  );
  background-size: var(--space-larger) var(--space-larger);
  pointer-events: none;
  cursor: not-allowed;
  animation-duration: var(--button--duration-loading);
  animation-iteration-count: infinite;
  animation-name: animateStripes;
  animation-timing-function: linear;
}

.primary.loading:not(.cancel, .subtle) {
  background-image: linear-gradient(
    135deg,
    rgba(255, 255, 255, 25%) 0%,
    rgba(255, 255, 255, 25%) 25%,
    transparent 25%,
    transparent 50%,
    rgba(255, 255, 255, 25%) 50%,
    rgba(255, 255, 255, 25%) 75%,
    transparent 75%,
    transparent 100%
  );
}

@keyframes animateStripes {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: var(--space-larger) var(--space-larger);
  }
}
