:root {
  --field--color: var(--color-blue);
  --field--textAlign: left;
  --field--placeholder-color: var(--color-greyBlue--light);
  --field--border-width: var(--border-base);
  --field--border-color: var(--color-border);
  --field--background-color: var(--color-surface);

  --field--padding-top: calc(var(--space-base) - var(--space-smallest));
  --field--padding-bottom: calc(var(--space-base) - var(--space-smallest));
  --field--padding-left: var(--space-base);
  --field--padding-right: var(--space-base);
  --field--height: var(--space-largest);

  --field--wrapper-elevation: auto;

  --public-field--top-left-radius: var(--radius-base);
  --public-field--top-right-radius: var(--radius-base);
  --public-field--bottom-left-radius: var(--radius-base);
  --public-field--bottom-right-radius: var(--radius-base);
}

.wrapper {
  position: relative;
  z-index: var(--field--wrapper-elevation);
  width: 100%;
  background-color: var(--field--background-color);
}

.wrapper:focus-within {
  --field--border-color: var(--color-focus);
  --field--wrapper-elevation: var(--elevation-base);
}

.formField,
.label {
  box-sizing: border-box;
  margin: 0;
  padding-top: var(--field--padding-top);
  padding-bottom: var(--field--padding-bottom);
  padding-left: var(--field--padding-left);
  padding-right: var(--field--padding-right);
  font-family: inherit;
  font-size: var(--base-unit);
}

.formField {
  display: block;
  position: relative;
  z-index: auto;
  width: inherit;
  height: var(--field--height);
  border: var(--field--border-width) solid var(--field--border-color);
  border-top-right-radius: var(--public-field--top-right-radius);
  border-bottom-right-radius: var(--public-field--bottom-right-radius);
  border-bottom-left-radius: var(--public-field--bottom-left-radius);
  border-top-left-radius: var(--public-field--top-left-radius);
  outline: none;
  color: var(--field--color);
  font-size: var(--base-unit);
  line-height: calc(var(--base-unit) * 1.25);
  text-align: var(--field--textAlign);
  background-color: transparent;
  transition: padding var(--timing-base);
  appearance: none;
}

.formField::-ms-clear,
.formField::-webkit-clear-button {
  display: none;
}

textarea.formField {
  height: auto;
  min-height: auto;
  resize: vertical;
}

.select {
  padding-top: 0;
  padding-bottom: 0;
}

select.formField {
  padding-right: calc(var(--field--padding-right) + var(--space-large));
}

.label {
  position: absolute;
  top: var(--field--border-width);
  right: var(--field--border-width);
  bottom: var(--field--border-width);
  left: var(--field--border-width);
  overflow: hidden;
  color: var(--field--placeholder-color);
  font-size: var(--base-unit);
  line-height: calc(var(--base-unit) * 1.25);
  text-overflow: ellipsis;
  white-space: nowrap;
  pointer-events: none;
  transition: all var(--timing-quick);
}

.inline {
  display: inline-block;
  width: auto;
}

.inline > input,
.inline > select {
  display: inline-block;
}

/* Sizes */

.small {
  --field--padding-top: var(--space-small);
  --field--padding-bottom: var(--space-small);
  --field--padding-left: calc(var(--space-base) - var(--space-smaller));
  --field--padding-right: calc(var(--space-base) - var(--space-smaller));
  --field--height: calc(var(--space-larger) + var(--space-smaller));
}

.large {
  --field--padding-top: calc(var(--space-large) - var(--space-smallest));
  --field--padding-bottom: calc(var(--space-large) - var(--space-smallest));
  --field--padding-left: var(--space-large);
  --field--padding-right: var(--space-large);
  --field--height: calc(var(--space-extravagant));
}

.large select {
  --field--padding-top: var(--space-base);
  --field--padding-bottom: var(--space-base);
}

/* Alignment */

.center {
  --field--textAlign: center;
}

.right {
  --field--textAlign: right;
}

/* State */

.invalid,
.invalid .formField:focus {
  --field--border-color: var(--color-critical);
  --field--wrapper-elevation: var(--elevation-base);
}

.disabled {
  --field--placeholder-color: var(--color-disabled);
  --field--background-color: var(--color-surface--background);
  --field--border-color: var(--color-disabled--secondary);

  opacity: 0.6;
}

/* Mini Label */

.miniLabel:not(.small) .select {
  padding-top: var(--space-small);
}

.miniLabel:not(.small) .formField {
  --field--padding-top: calc(var(--space-base) + var(--space-smaller));
  --field--padding-bottom: var(--space-small);
}

.miniLabel .label {
  --field--padding-top: var(--space-smallest);
  --field--padding-bottom: var(--space-smallest);
  --field--padding-left: var(--space-base);
  --field--padding-right: var(--space-base);
  bottom: auto;
  z-index: var(--elevation-base);

  height: auto;
  color: var(--color-text--secondary);
  font-size: calc(var(--base-unit) * 0.875);
}

.miniLabel.small .label {
  display: none;
}

.miniLabel.large .label {
  --field--padding-top: var(--space-small);
  --field--padding-bottom: var(--space-smallest);
  --field--padding-left: var(--space-large);
  --field--padding-right: var(--space-large);
}

.miniLabel.large textarea.formField {
  --field--padding-top: var(--space-larger);
}

.miniLabel.textareaLabel .label {
  background-color: var(--color-surface);
}

/**
 * The custom property --formField-maxLength is getting defined inside the
 * component.
 */
.maxLength {
  width: calc(
    (var(--base-unit) * var(--formField-maxLength)) + var(--field--padding-left) +
      var(--field--padding-right)
  );
}

.postfix {
  position: absolute;
  top: 50%;
  right: var(--field--padding-right);
  color: var(--color-text--secondary);
  pointer-events: none;
  transform: translateY(-50%);
}
