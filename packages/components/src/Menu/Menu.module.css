.wrapper * {
  box-sizing: border-box;
}

.wrapper {
  position: relative;
}

.floatingContainer {
  z-index: var(--elevation-modal);
}

.menu {
  --menu-space: var(--space-small);
  --menu-offset: var(--space-smallest);
  z-index: var(--elevation-modal);
  box-shadow: var(--shadow-base);
  box-sizing: border-box;
  padding: var(--menu-space);
  padding-bottom: calc(env(safe-area-inset-bottom) + var(--menu-space));
  border-radius: var(--radius-base) var(--radius-base) 0 0;
  overflow-y: scroll;
  background-color: var(--color-surface);
  -webkit-overflow-scrolling: touch;

  @media (--small-screens-and-below) {
    position: fixed;
    right: 0;
    bottom: 0;
    left: 0;
  }

  @media (--small-screens-and-up) {
    width: calc(var(--base-unit) * 12.5);
    padding: var(--menu-space);
    border: var(--border-base) solid var(--color-border);
    border-radius: var(--radius-base);
    overflow: auto;
  }
}

.section {
  padding: var(--menu-space) 0;
  border-bottom: var(--border-base) solid var(--color-border);
}

.section:first-of-type {
  padding-top: 0;
}

.section:last-of-type {
  padding-bottom: 0;
  border-bottom: none;
}

.sectionHeader {
  display: flex;
  align-items: center;
  padding: calc(var(--menu-space) * 1.5) var(--menu-space);
}

.action {
  display: flex;
  width: 100%;
  box-sizing: border-box;
  padding: var(--menu-space);
  border: none;
  border-radius: var(--radius-base);
  outline: transparent;
  text-align: start;
  background-color: transparent;
  cursor: pointer;
  gap: var(--menu-space);
  align-items: center;
  transition:
    background-color var(--timing-base) ease-out,
    box-shadow var(--timing-base) ease-out;
}

.action:hover,
.action:focus-visible {
  background-color: var(--color-surface--hover);
}

.action:focus-visible {
  box-shadow: var(--shadow-focus);
}

/* react-aria MenuItem focused state */
.action[data-focused] {
  box-shadow: var(--shadow-focus);
  background-color: var(--color-surface--hover);
}

.action span {
  /* match appearance of Button labels */
  -webkit-font-smoothing: antialiased;
}

.action.destructive > span {
  color: var(--color-destructive);
}

.overlay {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: var(--elevation-modal);
  background-color: var(--color-overlay);

  @media (--small-screens-and-up) {
    background-color: transparent;
  }
}

.fullWidth {
  width: 100%;
}

.screenReaderOnly {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
}
