.wrapper * {
  box-sizing: border-box;
}

.wrapper {
  position: relative;
}

.floatingContainer {
  z-index: var(--elevation-modal);
}

.menu {
  --menu-space: var(--space-small);
  --menu-offset: var(--space-smallest);
  z-index: var(--elevation-modal);
  box-shadow: var(--shadow-base);
  box-sizing: border-box;
  padding: var(--menu-space);
  padding-bottom: calc(env(safe-area-inset-bottom) + var(--menu-space));
  border-radius: var(--radius-base) var(--radius-base) 0 0;
  outline: none;
  overflow-y: scroll;
  background-color: var(--color-surface);
  -webkit-overflow-scrolling: touch;
  --y-translation: 150px;

  @media (--small-screens-and-below) {
    position: fixed;
    top: unset !important;
    right: 0 !important;
    bottom: 0 !important;
    left: 0 !important;
  }

  @media (--small-screens-and-up) {
    --y-translation: 10px;
    width: calc(var(--base-unit) * 12.5);
    padding: var(--menu-space);
    border: var(--border-base) solid var(--color-border);
    border-radius: var(--radius-base);
    overflow: auto;
  }
}

.sectionBorder,
.separator {
  border-bottom: var(--border-base) solid var(--color-border);
}

.sectionBorder:last-of-type {
  border-bottom: none;
}

.section {
  padding: var(--menu-space) 0;
}

.section:first-of-type {
  padding-top: 0;
}

.section:last-of-type {
  padding-bottom: 0;
}

.sectionHeader {
  display: flex;
  align-items: center;
  padding: calc(var(--menu-space) * 1.5) var(--menu-space);
}

.action {
  display: flex;
  width: 100%;
  box-sizing: border-box;
  padding: var(--menu-space);
  border: none;
  border-radius: var(--radius-base);
  outline: transparent;
  text-align: start;
  background-color: transparent;
  cursor: pointer;
  gap: var(--menu-space);
  align-items: center;
  transition:
    background-color var(--timing-base) ease-out,
    box-shadow var(--timing-base) ease-out;
}

.action:hover,
.action:focus-visible {
  background-color: var(--color-surface--hover);
}

.action:focus-visible {
  box-shadow: var(--shadow-focus);
}

.action span {
  /* match appearance of Button labels */
  -webkit-font-smoothing: antialiased;
}

.action.destructive > span {
  color: var(--color-destructive);
}

.triggerWrapper {
  display: inline-flex;
  outline: none;
}

/* Animate the popover itself on enter/exit */
.ariaPopover[data-entering] {
  animation: slide 250ms ease-out;
}

.ariaPopover[data-exiting] {
  animation: slide 250ms ease-out reverse;
}

/* Overlay should sit behind the popover but above content */
.overlay {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: var(--elevation-menu);
  background-color: var(--color-overlay);
  pointer-events: none;
  opacity: 0;
  transition: opacity 150ms ease-out;

  @media (--small-screens-and-up) {
    background-color: transparent;
  }
}

/* Animate overlay based on adjacent popover state */
.ariaPopover + .overlay {
  pointer-events: auto;
  opacity: 1;
}

.ariaPopover[data-exiting] + .overlay {
  opacity: 0;
}

/* Placement-based direction (desktop defaults) */
.ariaPopover[data-placement^="top"] {
  --slide-direction: 1;
}

.ariaPopover[data-placement^="bottom"] {
  --slide-direction: -1;
}

/* Force upward slide on small screens regardless of placement (after placement rules to win cascade) */
@media (--small-screens-and-below) {
  .ariaPopover,
  .ariaPopover[data-placement^="top"],
  .ariaPopover[data-placement^="bottom"] {
    --slide-direction: 1;
  }
}

/* Remove unused keyframes fade if present */
/* @keyframes fade { ... } */

.fullWidth {
  width: 100%;
}

.screenReaderOnly {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
}

@keyframes slide {
  from {
    opacity: 0;
    transform: translateY(
      calc(var(--y-translation) * var(--slide-direction, -1))
    );
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
