:root {
  --public-chip-base-bg-color: var(--color-interactive--background);
  --public-chip-base-hover-bg-color: var(
    --color-interactive--background--hover
  );
  --public-chip-base-content-color: var(--color-heading);
}

.chip {
  --chip-base-bg-color: var(--public-chip-base-bg-color);
  --chip-base-hover-bg-color: var(--public-chip-base-hover-bg-color);
  --chip-base-content-color: var(--public-chip-base-content-color);
  --chip-border-color: transparent;
  --chip-height: 40px;
  --chip-radius: 20px;
  display: inline-flex;
  position: relative;
  height: var(--chip-height);
  min-width: 0;
  box-sizing: border-box;
  padding: 0 var(--base-unit);
  border: var(--border-base) solid var(--chip-border-color);
  border-radius: var(--chip-radius);
  color: var(--color-heading);
  text-align: left;
  background-color: var(--chip-base-bg-color);
  cursor: pointer;
  transition: all var(--timing-base);
  align-items: center;
}

.chip:hover,
.chip:focus,
.chip:focus-visible,
.clickableSuffix:focus-visible {
  border: var(--border-base) solid var(--chip-border-color);
  outline: transparent;
  background-color: var(--chip-base-hover-bg-color);
}

.chip .clickableSuffix {
  padding: 0;
  border: none;
  cursor: pointer;
}

.chip .suffix,
.chip .clickableSuffix {
  margin-left: var(--space-small);
  margin-right: calc(-1 * var(--space-small));
  background-color: var(--color-surface);
}

.chip .prefix,
.chip .suffix,
.chip .clickableSuffix {
  display: flex;
  width: var(--space-large);
  height: var(--space-large);
  flex-shrink: 0;
  border-radius: var(--radius-circle);
  align-items: center;
  justify-content: center;
}

.clickableSuffix:hover {
  background-color: var(--color-surface--hover);
}

.chip:focus-visible,
.chip .clickableSuffix:focus-visible {
  box-shadow: var(--shadow-focus);
}

.chip .prefix {
  margin-left: calc(-1 * var(--space-small));
  margin-right: var(--space-small);
}

.chip .prefix.empty,
.chip .suffix.empty {
  display: none;
}

.chip .chipBar {
  width: var(--space-minuscule);
  height: var(--base-unit);
  margin: 0 var(--space-small);
  background-color: var(--color-text--secondary);
}

.chip .selected {
  border-radius: var(--radius-circle);
  background-color: var(--color-surface);
}

.base,
.base p {
  color: var(--chip-base-content-color);
}

.base .chipBar {
  background-color: var(--chip-base-content-color);
}

.invalid,
.subtle.invalid {
  --chip-border-color: var(--color-critical);
  --chip-base-bg-color: var(--color-critical--surface);
  --chip-base-hover-bg-color: var(--color-interactive--background--hover);
}

/* If these change, please update InternalChip.css focus-visible rules */
.invalid:hover,
.invalid:focus-visible,
.subtle.invalid:hover,
.subtle.invalid:focus-visible {
  --chip-border-color: var(--color-critical);
}

.subtle {
  --chip-border-color: var(--color-border--interactive);
  --chip-base-bg-color: var(--color-surface);
  --chip-base-hover-bg-color: var(--color-interactive--background);
}

/* If these change, please update InternalChip.css focus-visible rules */
.subtle:focus-visible,
.subtle:hover {
  --chip-border-color: var(--chip-base-bg-color);
}

.invalid.disabled,
.invalid.disabled:hover,
.invalid.disabled:focus-visible {
  --chip-base-bg-color: var(--color-disabled--secondary);
  --chip-base-hover-bg-color: var(--color-disabled--secondary);
  cursor: not-allowed;
}

/* If these change, please update InternalChip.css focus-visible rules */
.disabled,
.disabled:hover,
.disabled:focus-visible {
  --chip-border-color: var(--color-disabled--secondary);
  color: var(--color-disabled);
  --chip-base-bg-color: var(--color-disabled--secondary);
  --chip-base-hover-bg-color: var(--color-disabled--secondary);
  cursor: not-allowed;
}

.disabled .chipBar {
  background-color: var(--color-disabled);
}

.chip.disabled .suffix {
  background-color: var(--color-disabled--secondary);
}

.chip.disabled .suffix path {
  fill: var(--color-disabled);
}

.chipContent {
  display: flex;
  position: relative;
  overflow: hidden;
  flex-wrap: nowrap;
}

.chipContent > * {
  flex: 0 0 auto;
}

.chipContent > p {
  overflow: hidden;
  white-space: nowrap;
}

.truncateGradient {
  position: absolute;
  top: 0;
  right: 0;
  width: var(--space-base);
  height: 100%;
}

.truncateGradient::before,
.truncateGradient::after {
  content: "";
  position: absolute;
  inset: 0;
  transition: opacity var(--timing-base);
}

.truncateGradient::before {
  background: linear-gradient(
    to left,
    var(--chip-base-bg-color) 5%,
    rgba(255, 255, 255, 0)
  );
  opacity: 1;
}

.truncateGradient::after {
  background: linear-gradient(
    to left,
    var(--chip-base-hover-bg-color) 5%,
    rgba(255, 255, 255, 0)
  );
  opacity: 0;
}

.chip:hover .truncateGradient::before,
.chip:focus-visible .truncateGradient::before {
  opacity: 0;
}

.chip:hover .truncateGradient::after,
.chip:focus-visible .truncateGradient::after {
  opacity: 1;
}

.chipLabelRef {
  display: inline-block;
  width: 1px;
}
