:root {
  --sideDrawer--base-padding: var(--space-base);
  --sideDrawer--background: var(--color-surface);
}

.drawer {
  position: fixed;
  top: 0;
  right: 0;
  z-index: var(--elevation-modal);
  width: 100%;
  height: 100%;
  max-width: 420px;
}

/* Adjust `Content` components public padding to match the cards */

.drawer > * {
  --public-content--padding: var(--sideDrawer--base-padding);
}

.container {
  display: flex;
  height: 100%;
  overflow-y: auto;
  background-color: var(--sideDrawer--background);
  flex-direction: column;
}

.subtle {
  --sideDrawer--background: var(--color-surface--background--subtle);
}

.header {
  display: flex;
  position: sticky;
  top: 0;
  z-index: var(--elevation-base);
  padding: var(--sideDrawer--base-padding);
  background-color: var(--sideDrawer--background);
  flex-direction: column;
  gap: var(--space-base);
  transition:
    box-shadow var(--timing-base) ease-in-out,
    filter var(--timing-base) ease-in-out;
}

.hasShadow {
  box-shadow: var(--shadow-base);
}

.header:has([data-side-drawer-slot^="title-"]:empty) {
  padding-bottom: var(--space-smaller);
  background-color: transparent;

  &.hasShadow {
    box-shadow: none;
    filter: drop-shadow(
      0 0 var(--space-smaller) rgba(var(--color-black--rgb), 0.25)
    );

    /**
     * Force the 2 built-in buttons to have a background color when the header
     * is not present so the drop shadow is applied to the whole button and not
     * just the icon.
     */
    & button[aria-label="Close"],
    & button[aria-label="Back"] {
      background-color: var(--color-surface);
    }
  }
}

.headerActions {
  display: flex;
  margin-right: calc(-1 * var(--space-small));
}

.hideWhenEmpty:empty {
  display: none;
}

.overlay {
  position: fixed;
  top: 0;
  right: 0;
  z-index: var(--elevation-modal);
  width: 100%;
  height: 100%;
  padding: 0;
  border: none;
  background-color: transparent;
  appearance: none;
}
