{"expireTime":9007200931831330000,"key":"gatsby-plugin-mdx-entire-payload-47e54c7868d28a43302cdee2ff7c6a65-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":114,"offset":115},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":117},"end":{"line":5,"column":29,"offset":145},"indent":[]}},{"type":"import","value":"import { Playground, Props } from \"docz\";\nimport { ComponentStatus } from \"@jobber/docx\";\nimport { Content } from \"@jobber/components/Content\";\nimport { Text } from \"@jobber/components/Text\";\nimport { Heading } from \"@jobber/components/Heading\";\nimport { Card } from \"@jobber/components/Card\";\nimport { Divider } from \".\";","position":{"start":{"line":8,"column":1,"offset":148},"end":{"line":14,"column":29,"offset":470},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Divider","position":{"start":{"line":16,"column":3,"offset":474},"end":{"line":16,"column":10,"offset":481},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":472},"end":{"line":16,"column":10,"offset":481},"indent":[]}},{"type":"jsx","value":"<ComponentStatus stage=\"ready\" responsive=\"yes\" accessible=\"no\" />","position":{"start":{"line":18,"column":1,"offset":483},"end":{"line":18,"column":67,"offset":549},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Divider is a UI element meant to divide to areas of content.","position":{"start":{"line":20,"column":1,"offset":551},"end":{"line":20,"column":61,"offset":611},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":551},"end":{"line":20,"column":61,"offset":611},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"import { Divider } from \"@jobber/components/Divider\";","position":{"start":{"line":22,"column":1,"offset":613},"end":{"line":24,"column":4,"offset":676},"indent":[1,1]}},{"type":"jsx","value":"<Playground>\n  <Content>\n    <Content>Some amazing content</Content>\n    <Divider />\n    <Content>Even more amazing content</Content>\n  </Content>\n</Playground>","position":{"start":{"line":26,"column":1,"offset":678},"end":{"line":32,"column":14,"offset":838},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Props","position":{"start":{"line":34,"column":4,"offset":843},"end":{"line":34,"column":9,"offset":848},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":840},"end":{"line":34,"column":9,"offset":848},"indent":[]}},{"type":"jsx","value":"<Props of={Divider} />","position":{"start":{"line":36,"column":1,"offset":850},"end":{"line":36,"column":23,"offset":872},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":38,"column":1,"offset":874},"end":{"line":38,"column":4,"offset":877},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Design & usage guidelines","position":{"start":{"line":40,"column":4,"offset":882},"end":{"line":40,"column":29,"offset":907},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":879},"end":{"line":40,"column":29,"offset":907},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":42,"column":1,"offset":909},"end":{"line":42,"column":5,"offset":913},"indent":[]}},{"type":"inlineCode","value":"Divider","position":{"start":{"line":42,"column":5,"offset":913},"end":{"line":42,"column":14,"offset":922},"indent":[]}},{"type":"text","value":" component comes with no spacing around it. This means that it\nshould be used within a ","position":{"start":{"line":42,"column":14,"offset":922},"end":{"line":43,"column":25,"offset":1009},"indent":[1]}},{"type":"link","title":null,"url":"/components/content","children":[{"type":"inlineCode","value":"Content","position":{"start":{"line":43,"column":26,"offset":1010},"end":{"line":43,"column":35,"offset":1019},"indent":[]}}],"position":{"start":{"line":43,"column":25,"offset":1009},"end":{"line":43,"column":57,"offset":1041},"indent":[]}},{"type":"text","value":" component.","position":{"start":{"line":43,"column":57,"offset":1041},"end":{"line":43,"column":68,"offset":1052},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":909},"end":{"line":43,"column":68,"offset":1052},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Size","position":{"start":{"line":45,"column":5,"offset":1058},"end":{"line":45,"column":9,"offset":1062},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1054},"end":{"line":45,"column":9,"offset":1062},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For different levels of segmentation, you may find the need to use larger\nDividers. As Dividers increase in size, they get lighter to offset the visual\nimpact of their additional weight.","position":{"start":{"line":47,"column":1,"offset":1064},"end":{"line":49,"column":35,"offset":1250},"indent":[1,1]}}],"position":{"start":{"line":47,"column":1,"offset":1064},"end":{"line":49,"column":35,"offset":1250},"indent":[1,1]}},{"type":"jsx","value":"<Playground>\n  <Content>\n    <Heading level={2}>Intro Section</Heading>\n    <Text>Important main content</Text>\n    <Divider size=\"largest\" />\n    <Content>Some amazing content</Content>\n    <Divider size=\"large\" />\n    <Content>Even more amazing content</Content>\n  </Content>\n</Playground>","position":{"start":{"line":51,"column":1,"offset":1252},"end":{"line":60,"column":14,"offset":1543},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Vertical","position":{"start":{"line":62,"column":5,"offset":1549},"end":{"line":62,"column":13,"offset":1557},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":1545},"end":{"line":62,"column":13,"offset":1557},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use a vertical divider when the content to be divided runs horizontally.","position":{"start":{"line":64,"column":1,"offset":1559},"end":{"line":64,"column":73,"offset":1631},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":1559},"end":{"line":64,"column":73,"offset":1631},"indent":[]}},{"type":"jsx","value":"<Playground>\n  <div style={{ width: \"fit-content\" }}>\n    <Card>\n      <Content>\n        <Heading level={4}>Summary</Heading>\n        <div style={{ display: \"flex\", gap: \"var(--space-base)\" }}>\n          <Content spacing=\"small\">\n            <Heading level={5}>Today</Heading>\n            <Text>$ 104.13</Text>\n          </Content>\n          <Divider direction=\"vertical\" />\n          <Content spacing=\"small\">\n            <Heading level={5}>Tomorrow</Heading>\n            <Text>$ 262.42</Text>\n          </Content>\n          <Divider direction=\"vertical\" />\n          <Content spacing=\"small\">\n            <Heading level={5}>Next Week</Heading>\n            <Text>$ 12403.23</Text>\n          </Content>\n        </div>\n      </Content>\n    </Card>\n  </div>\n</Playground>","position":{"start":{"line":66,"column":1,"offset":1633},"end":{"line":90,"column":14,"offset":2402},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Related components","position":{"start":{"line":92,"column":4,"offset":2407},"end":{"line":92,"column":22,"offset":2425},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":2404},"end":{"line":92,"column":22,"offset":2425},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"To segment different groups of content, use ","position":{"start":{"line":94,"column":3,"offset":2429},"end":{"line":94,"column":47,"offset":2473},"indent":[]}},{"type":"link","title":null,"url":"/components/card","children":[{"type":"text","value":"Card.","position":{"start":{"line":94,"column":48,"offset":2474},"end":{"line":94,"column":53,"offset":2479},"indent":[]}}],"position":{"start":{"line":94,"column":47,"offset":2473},"end":{"line":94,"column":72,"offset":2498},"indent":[]}}],"position":{"start":{"line":94,"column":3,"offset":2429},"end":{"line":94,"column":72,"offset":2498},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":2427},"end":{"line":94,"column":72,"offset":2498},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"For guidance on borders in general, see our ","position":{"start":{"line":95,"column":3,"offset":2501},"end":{"line":95,"column":47,"offset":2545},"indent":[]}},{"type":"link","title":null,"url":"/borders","children":[{"type":"text","value":"Borders guide.","position":{"start":{"line":95,"column":48,"offset":2546},"end":{"line":95,"column":62,"offset":2560},"indent":[]}}],"position":{"start":{"line":95,"column":47,"offset":2545},"end":{"line":95,"column":73,"offset":2571},"indent":[]}}],"position":{"start":{"line":95,"column":3,"offset":2501},"end":{"line":95,"column":73,"offset":2571},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":2499},"end":{"line":95,"column":73,"offset":2571},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":2427},"end":{"line":95,"column":73,"offset":2571},"indent":[1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":98,"column":1,"offset":2574},"end":{"line":98,"column":31,"offset":2604},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":98,"column":31,"offset":2604}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { Playground, Props } from \"docz\";\nimport { ComponentStatus } from \"@jobber/docx\";\nimport { Content } from \"@jobber/components/Content\";\nimport { Text } from \"@jobber/components/Text\";\nimport { Heading } from \"@jobber/components/Heading\";\nimport { Card } from \"@jobber/components/Card\";\nimport { Divider } from \".\";\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"divider\"\n    }}>{`Divider`}</h1>\n    <ComponentStatus stage=\"ready\" responsive=\"yes\" accessible=\"no\" mdxType=\"ComponentStatus\" />\n    <p>{`Divider is a UI element meant to divide to areas of content.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { Divider } from \"@jobber/components/Divider\";\n`}</code></pre>\n    <Playground __position={1} __code={'<Content>\\n  <Content>Some amazing content</Content>\\n  <Divider />\\n  <Content>Even more amazing content</Content>\\n</Content>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ComponentStatus,\n      Content,\n      Text,\n      Heading,\n      Card,\n      Divider,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Content mdxType=\"Content\">\n    <Content mdxType=\"Content\">Some amazing content</Content>\n    <Divider mdxType=\"Divider\" />\n    <Content mdxType=\"Content\">Even more amazing content</Content>\n  </Content>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Divider} mdxType=\"Props\" />\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"design--usage-guidelines\"\n    }}>{`Design & usage guidelines`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Divider`}</inlineCode>{` component comes with no spacing around it. This means that it\nshould be used within a `}<a parentName=\"p\" {...{\n        \"href\": \"/components/content\"\n      }}><inlineCode parentName=\"a\">{`Content`}</inlineCode></a>{` component.`}</p>\n    <h3 {...{\n      \"id\": \"size\"\n    }}>{`Size`}</h3>\n    <p>{`For different levels of segmentation, you may find the need to use larger\nDividers. As Dividers increase in size, they get lighter to offset the visual\nimpact of their additional weight.`}</p>\n    <Playground __position={3} __code={'<Content>\\n  <Heading level={2}>Intro Section</Heading>\\n  <Text>Important main content</Text>\\n  <Divider size=\\\"largest\\\" />\\n  <Content>Some amazing content</Content>\\n  <Divider size=\\\"large\\\" />\\n  <Content>Even more amazing content</Content>\\n</Content>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ComponentStatus,\n      Content,\n      Text,\n      Heading,\n      Card,\n      Divider,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Content mdxType=\"Content\">\n    <Heading level={2} mdxType=\"Heading\">Intro Section</Heading>\n    <Text mdxType=\"Text\">Important main content</Text>\n    <Divider size=\"largest\" mdxType=\"Divider\" />\n    <Content mdxType=\"Content\">Some amazing content</Content>\n    <Divider size=\"large\" mdxType=\"Divider\" />\n    <Content mdxType=\"Content\">Even more amazing content</Content>\n  </Content>\n    </Playground>\n    <h3 {...{\n      \"id\": \"vertical\"\n    }}>{`Vertical`}</h3>\n    <p>{`Use a vertical divider when the content to be divided runs horizontally.`}</p>\n    <Playground __position={4} __code={'<div style={{ width: \\'fit-content\\' }}>\\n  <Card>\\n    <Content>\\n      <Heading level={4}>Summary</Heading>\\n      <div style={{ display: \\'flex\\', gap: \\'var(--space-base)\\' }}>\\n        <Content spacing=\\\"small\\\">\\n          <Heading level={5}>Today</Heading>\\n          <Text>$ 104.13</Text>\\n        </Content>\\n        <Divider direction=\\\"vertical\\\" />\\n        <Content spacing=\\\"small\\\">\\n          <Heading level={5}>Tomorrow</Heading>\\n          <Text>$ 262.42</Text>\\n        </Content>\\n        <Divider direction=\\\"vertical\\\" />\\n        <Content spacing=\\\"small\\\">\\n          <Heading level={5}>Next Week</Heading>\\n          <Text>$ 12403.23</Text>\\n        </Content>\\n      </div>\\n    </Content>\\n  </Card>\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ComponentStatus,\n      Content,\n      Text,\n      Heading,\n      Card,\n      Divider,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <div style={{\n        width: \"fit-content\"\n      }}>\n    <Card mdxType=\"Card\">\n      <Content mdxType=\"Content\">\n        <Heading level={4} mdxType=\"Heading\">Summary</Heading>\n        <div style={{\n              display: \"flex\",\n              gap: \"var(--space-base)\"\n            }}>\n          <Content spacing=\"small\" mdxType=\"Content\">\n            <Heading level={5} mdxType=\"Heading\">Today</Heading>\n            <Text mdxType=\"Text\">$ 104.13</Text>\n          </Content>\n          <Divider direction=\"vertical\" mdxType=\"Divider\" />\n          <Content spacing=\"small\" mdxType=\"Content\">\n            <Heading level={5} mdxType=\"Heading\">Tomorrow</Heading>\n            <Text mdxType=\"Text\">$ 262.42</Text>\n          </Content>\n          <Divider direction=\"vertical\" mdxType=\"Divider\" />\n          <Content spacing=\"small\" mdxType=\"Content\">\n            <Heading level={5} mdxType=\"Heading\">Next Week</Heading>\n            <Text mdxType=\"Text\">$ 12403.23</Text>\n          </Content>\n        </div>\n      </Content>\n    </Card>\n  </div>\n    </Playground>\n    <h2 {...{\n      \"id\": \"related-components\"\n    }}>{`Related components`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`To segment different groups of content, use `}<a parentName=\"li\" {...{\n          \"href\": \"/components/card\"\n        }}>{`Card.`}</a></li>\n      <li parentName=\"ul\">{`For guidance on borders in general, see our `}<a parentName=\"li\" {...{\n          \"href\": \"/borders\"\n        }}>{`Borders guide.`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}