{"expireTime":9007200931831330000,"key":"gatsby-plugin-mdx-entire-payload-abf404130ed27ec2da76b05d3b351fb5-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":114,"offset":115},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":117},"end":{"line":5,"column":29,"offset":145},"indent":[]}},{"type":"import","value":"import { Playground, Props } from \"docz\";\nimport { ComponentStatus } from \"@jobber/docx\";\nimport { useState } from \"react\";\nimport { InputAvatar } from \".\";","position":{"start":{"line":8,"column":1,"offset":148},"end":{"line":11,"column":33,"offset":304},"indent":[1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Input Avatar","position":{"start":{"line":13,"column":3,"offset":308},"end":{"line":13,"column":15,"offset":320},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":306},"end":{"line":13,"column":15,"offset":320},"indent":[]}},{"type":"jsx","value":"<ComponentStatus stage=\"pre\" responsive=\"yes\" accessible=\"yes\" />","position":{"start":{"line":15,"column":1,"offset":322},"end":{"line":15,"column":66,"offset":387},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Experimental:","position":{"start":{"line":17,"column":3,"offset":391},"end":{"line":17,"column":16,"offset":404},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":389},"end":{"line":17,"column":18,"offset":406},"indent":[]}},{"type":"text","value":" InputAvatar component allows you to display an avatar with\noptions input a new one or remove it.","position":{"start":{"line":17,"column":18,"offset":406},"end":{"line":18,"column":38,"offset":503},"indent":[1]}}],"position":{"start":{"line":17,"column":1,"offset":389},"end":{"line":18,"column":38,"offset":503},"indent":[1]}},{"type":"code","lang":"ts","meta":null,"value":"import { InputAvatar } from \"@jobber/components/InputAvatar\";","position":{"start":{"line":20,"column":1,"offset":505},"end":{"line":22,"column":4,"offset":576},"indent":[1,1]}},{"type":"jsx","value":"<Playground>\n  {() => {\n    const [avatarUrl, setAvatarUrl] = useState(\n      \"https://api.adorable.io/avatars/150/jobbler\"\n    );\n    return (\n      <InputAvatar\n        imageUrl={avatarUrl}\n        name=\"The Jobbler\"\n        getUploadParams={() =>\n          Promise.resolve({ url: \"https://httpbin.org/post\" })\n        }\n        onChange={handleChange}\n      />\n    );\n    async function handleChange(newAvatar) {\n      if (newAvatar) {\n        setAvatarUrl(await newAvatar.src());\n      } else {\n        setAvatarUrl(undefined);\n      }\n    }\n  }}\n</Playground>","position":{"start":{"line":24,"column":1,"offset":578},"end":{"line":47,"column":14,"offset":1142},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Design & usage guidelines","position":{"start":{"line":49,"column":4,"offset":1147},"end":{"line":49,"column":29,"offset":1172},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1144},"end":{"line":49,"column":29,"offset":1172},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"An InputAvatar should be used to allow users to change their Avatar.","position":{"start":{"line":51,"column":1,"offset":1174},"end":{"line":51,"column":69,"offset":1242},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1174},"end":{"line":51,"column":69,"offset":1242},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Props","position":{"start":{"line":53,"column":4,"offset":1247},"end":{"line":53,"column":9,"offset":1252},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1244},"end":{"line":53,"column":9,"offset":1252},"indent":[]}},{"type":"jsx","value":"<Props of={InputAvatar} />","position":{"start":{"line":55,"column":1,"offset":1254},"end":{"line":55,"column":27,"offset":1280},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"getUploadParams","position":{"start":{"line":57,"column":4,"offset":1285},"end":{"line":57,"column":19,"offset":1300},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":1282},"end":{"line":57,"column":19,"offset":1300},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"InputAvatar","position":{"start":{"line":59,"column":1,"offset":1302},"end":{"line":59,"column":14,"offset":1315},"indent":[]}},{"type":"text","value":" requires a ","position":{"start":{"line":59,"column":14,"offset":1315},"end":{"line":59,"column":26,"offset":1327},"indent":[]}},{"type":"inlineCode","value":"getUploadParams","position":{"start":{"line":59,"column":26,"offset":1327},"end":{"line":59,"column":43,"offset":1344},"indent":[]}},{"type":"text","value":" telling it where and how to upload\nthe avatar. You can read\n","position":{"start":{"line":59,"column":43,"offset":1344},"end":{"line":61,"column":1,"offset":1405},"indent":[1,1]}},{"type":"link","title":null,"url":"input-file#getuploadparams","children":[{"type":"text","value":"more about ","position":{"start":{"line":61,"column":2,"offset":1406},"end":{"line":61,"column":13,"offset":1417},"indent":[]}},{"type":"inlineCode","value":"getUploadParams","position":{"start":{"line":61,"column":13,"offset":1417},"end":{"line":61,"column":30,"offset":1434},"indent":[]}},{"type":"text","value":" in the ","position":{"start":{"line":61,"column":30,"offset":1434},"end":{"line":61,"column":38,"offset":1442},"indent":[]}},{"type":"inlineCode","value":"InputFile","position":{"start":{"line":61,"column":38,"offset":1442},"end":{"line":61,"column":49,"offset":1453},"indent":[]}},{"type":"text","value":" Component","position":{"start":{"line":61,"column":49,"offset":1453},"end":{"line":61,"column":59,"offset":1463},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":1405},"end":{"line":61,"column":88,"offset":1492},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":61,"column":88,"offset":1492},"end":{"line":61,"column":89,"offset":1493},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":1302},"end":{"line":61,"column":89,"offset":1493},"indent":[1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":64,"column":1,"offset":1496},"end":{"line":64,"column":31,"offset":1526},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":64,"column":31,"offset":1526}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { Playground, Props } from \"docz\";\nimport { ComponentStatus } from \"@jobber/docx\";\nimport { useState } from \"react\";\nimport { InputAvatar } from \".\";\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"input-avatar\"\n    }}>{`Input Avatar`}</h1>\n    <ComponentStatus stage=\"pre\" responsive=\"yes\" accessible=\"yes\" mdxType=\"ComponentStatus\" />\n    <p><strong parentName=\"p\">{`Experimental:`}</strong>{` InputAvatar component allows you to display an avatar with\noptions input a new one or remove it.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { InputAvatar } from \"@jobber/components/InputAvatar\";\n`}</code></pre>\n    <Playground __position={1} __code={'() => {\\n  const [avatarUrl, setAvatarUrl] = useState(\\n    \\'https://api.adorable.io/avatars/150/jobbler\\',\\n  )\\n  return (\\n    <InputAvatar\\n      imageUrl={avatarUrl}\\n      name=\\\"The Jobbler\\\"\\n      getUploadParams={() =>\\n        Promise.resolve({ url: \\'https://httpbin.org/post\\' })\\n      }\\n      onChange={handleChange}\\n    />\\n  )\\n  async function handleChange(newAvatar) {\\n    if (newAvatar) {\\n      setAvatarUrl(await newAvatar.src())\\n    } else {\\n      setAvatarUrl(undefined)\\n    }\\n  }\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ComponentStatus,\n      useState,\n      InputAvatar,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [avatarUrl, setAvatarUrl] = useState(\"https://api.adorable.io/avatars/150/jobbler\");\n        return <InputAvatar imageUrl={avatarUrl} name=\"The Jobbler\" getUploadParams={() => Promise.resolve({\n          url: \"https://httpbin.org/post\"\n        })} onChange={handleChange} mdxType=\"InputAvatar\" />;\n\n        async function handleChange(newAvatar) {\n          if (newAvatar) {\n            setAvatarUrl(await newAvatar.src());\n          } else {\n            setAvatarUrl(undefined);\n          }\n        }\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"design--usage-guidelines\"\n    }}>{`Design & usage guidelines`}</h2>\n    <p>{`An InputAvatar should be used to allow users to change their Avatar.`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={InputAvatar} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"getuploadparams\"\n    }}>{`getUploadParams`}</h2>\n    <p><inlineCode parentName=\"p\">{`InputAvatar`}</inlineCode>{` requires a `}<inlineCode parentName=\"p\">{`getUploadParams`}</inlineCode>{` telling it where and how to upload\nthe avatar. You can read\n`}<a parentName=\"p\" {...{\n        \"href\": \"input-file#getuploadparams\"\n      }}>{`more about `}<inlineCode parentName=\"a\">{`getUploadParams`}</inlineCode>{` in the `}<inlineCode parentName=\"a\">{`InputFile`}</inlineCode>{` Component`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}