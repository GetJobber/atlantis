{"expireTime":9007200931831381000,"key":"gatsby-plugin-mdx-entire-payload-90eacbaf699bd92084c982396df1d908-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":114,"offset":115},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":117},"end":{"line":5,"column":29,"offset":145},"indent":[]}},{"type":"import","value":"import { ArgsTable, Canvas, Meta, Story } from \"@storybook/addon-docs\";\nimport { useRef } from \"react\";\nimport { Button } from \"@jobber/components/Button\";\nimport { Toast, showToast } from \"@jobber/components/Toast\";","position":{"start":{"line":7,"column":1,"offset":147},"end":{"line":10,"column":61,"offset":363},"indent":[1,1,1]}},{"type":"jsx","value":"<Meta title=\"Components/Toast\" component={Toast} />","position":{"start":{"line":12,"column":1,"offset":365},"end":{"line":12,"column":52,"offset":416},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Toast","position":{"start":{"line":14,"column":3,"offset":420},"end":{"line":14,"column":8,"offset":425},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":418},"end":{"line":14,"column":8,"offset":425},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Toasts are short, temporary messages used to inform users that a process was\nperformed. They provide visual feedback on the outcome of an action, and require\nminimal user interaction.","position":{"start":{"line":16,"column":1,"offset":427},"end":{"line":18,"column":26,"offset":610},"indent":[1,1]}}],"position":{"start":{"line":16,"column":1,"offset":427},"end":{"line":18,"column":26,"offset":610},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Toast, unlike common React components is not a component that will be added to\nyour view. Instead, Toast is used by importing and calling the ","position":{"start":{"line":20,"column":1,"offset":612},"end":{"line":21,"column":64,"offset":754},"indent":[1]}},{"type":"inlineCode","value":"showToast()","position":{"start":{"line":21,"column":64,"offset":754},"end":{"line":21,"column":77,"offset":767},"indent":[]}},{"type":"text","value":"\nfunction.","position":{"start":{"line":21,"column":77,"offset":767},"end":{"line":22,"column":10,"offset":777},"indent":[1]}}],"position":{"start":{"line":20,"column":1,"offset":612},"end":{"line":22,"column":10,"offset":777},"indent":[1,1]}},{"type":"code","lang":"ts","meta":null,"value":"import { showToast } from \"@jobber/components/Toast\";","position":{"start":{"line":24,"column":1,"offset":779},"end":{"line":26,"column":4,"offset":842},"indent":[1,1]}},{"type":"jsx","value":"<Canvas>\n  <Story\n    name=\"Toast\"\n    args={{\n      message: \"Toast has been toasted\",\n    }}\n  >\n    {args => <Button label=\"Show toast\" onClick={() => showToast(args)} />}\n  </Story>\n</Canvas>","position":{"start":{"line":28,"column":1,"offset":844},"end":{"line":37,"column":10,"offset":1039},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<ArgsTable of={showToast} story=\"Toast\" />","position":{"start":{"line":39,"column":1,"offset":1041},"end":{"line":39,"column":43,"offset":1083},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Design & usage guidelines","position":{"start":{"line":41,"column":4,"offset":1088},"end":{"line":41,"column":29,"offset":1113},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1085},"end":{"line":41,"column":29,"offset":1113},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When contributing to or consuming the Toast component, consider the following:","position":{"start":{"line":43,"column":1,"offset":1115},"end":{"line":43,"column":79,"offset":1193},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1115},"end":{"line":43,"column":79,"offset":1193},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Keep text labels as short as possible. They should be clear and concise, and\nshould not take up more than one line.","position":{"start":{"line":45,"column":3,"offset":1197},"end":{"line":46,"column":41,"offset":1314},"indent":[3]}}],"position":{"start":{"line":45,"column":3,"offset":1197},"end":{"line":46,"column":41,"offset":1314},"indent":[3]}}],"position":{"start":{"line":45,"column":1,"offset":1195},"end":{"line":46,"column":41,"offset":1314},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Use the pattern: noun + verb.","position":{"start":{"line":47,"column":3,"offset":1317},"end":{"line":47,"column":32,"offset":1346},"indent":[]}}],"position":{"start":{"line":47,"column":3,"offset":1317},"end":{"line":47,"column":32,"offset":1346},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Examples: ","position":{"start":{"line":48,"column":5,"offset":1351},"end":{"line":48,"column":15,"offset":1361},"indent":[]}},{"type":"inlineCode","value":"Job saved","position":{"start":{"line":48,"column":15,"offset":1361},"end":{"line":48,"column":26,"offset":1372},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":48,"column":26,"offset":1372},"end":{"line":48,"column":28,"offset":1374},"indent":[]}},{"type":"inlineCode","value":"Quote approved","position":{"start":{"line":48,"column":28,"offset":1374},"end":{"line":48,"column":44,"offset":1390},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":48,"column":44,"offset":1390},"end":{"line":48,"column":46,"offset":1392},"indent":[]}},{"type":"inlineCode","value":"Client archived","position":{"start":{"line":48,"column":46,"offset":1392},"end":{"line":48,"column":63,"offset":1409},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":48,"column":63,"offset":1409},"end":{"line":48,"column":64,"offset":1410},"indent":[]}}],"position":{"start":{"line":48,"column":5,"offset":1351},"end":{"line":48,"column":64,"offset":1410},"indent":[]}}],"position":{"start":{"line":48,"column":3,"offset":1349},"end":{"line":48,"column":64,"offset":1410},"indent":[]}}],"position":{"start":{"line":48,"column":3,"offset":1349},"end":{"line":48,"column":64,"offset":1410},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1315},"end":{"line":48,"column":64,"offset":1410},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"No need to use \"Successfully\", should be implicit in the toast.","position":{"start":{"line":49,"column":3,"offset":1413},"end":{"line":49,"column":66,"offset":1476},"indent":[]}}],"position":{"start":{"line":49,"column":3,"offset":1413},"end":{"line":49,"column":66,"offset":1476},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1411},"end":{"line":49,"column":66,"offset":1476},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Don't use ","position":{"start":{"line":50,"column":3,"offset":1479},"end":{"line":50,"column":13,"offset":1489},"indent":[]}},{"type":"inlineCode","value":"Dismiss","position":{"start":{"line":50,"column":13,"offset":1489},"end":{"line":50,"column":22,"offset":1498},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":50,"column":22,"offset":1498},"end":{"line":50,"column":26,"offset":1502},"indent":[]}},{"type":"inlineCode","value":"Cancel","position":{"start":{"line":50,"column":26,"offset":1502},"end":{"line":50,"column":34,"offset":1510},"indent":[]}},{"type":"text","value":" as an action label.","position":{"start":{"line":50,"column":34,"offset":1510},"end":{"line":50,"column":54,"offset":1530},"indent":[]}}],"position":{"start":{"line":50,"column":3,"offset":1479},"end":{"line":50,"column":54,"offset":1530},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Examples of action labels: ","position":{"start":{"line":51,"column":5,"offset":1535},"end":{"line":51,"column":32,"offset":1562},"indent":[]}},{"type":"inlineCode","value":"Undo","position":{"start":{"line":51,"column":32,"offset":1562},"end":{"line":51,"column":38,"offset":1568},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":51,"column":38,"offset":1568},"end":{"line":51,"column":40,"offset":1570},"indent":[]}},{"type":"inlineCode","value":"View","position":{"start":{"line":51,"column":40,"offset":1570},"end":{"line":51,"column":46,"offset":1576},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":51,"column":46,"offset":1576},"end":{"line":51,"column":48,"offset":1578},"indent":[]}},{"type":"inlineCode","value":"Refresh","position":{"start":{"line":51,"column":48,"offset":1578},"end":{"line":51,"column":57,"offset":1587},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":51,"column":57,"offset":1587},"end":{"line":51,"column":58,"offset":1588},"indent":[]}}],"position":{"start":{"line":51,"column":5,"offset":1535},"end":{"line":51,"column":58,"offset":1588},"indent":[]}}],"position":{"start":{"line":51,"column":3,"offset":1533},"end":{"line":51,"column":58,"offset":1588},"indent":[]}}],"position":{"start":{"line":51,"column":3,"offset":1533},"end":{"line":51,"column":58,"offset":1588},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":1477},"end":{"line":51,"column":58,"offset":1588},"indent":[1]}}],"position":{"start":{"line":45,"column":1,"offset":1195},"end":{"line":51,"column":58,"offset":1588},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Related components","position":{"start":{"line":53,"column":4,"offset":1593},"end":{"line":53,"column":22,"offset":1611},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1590},"end":{"line":53,"column":22,"offset":1611},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For more persistent feedback (such as displaying errors), communicating a\nbackground process that is ongoing, or for feedback that has a longer reading\nlength or CTA, use ","position":{"start":{"line":55,"column":1,"offset":1613},"end":{"line":57,"column":20,"offset":1784},"indent":[1,1]}},{"type":"link","title":null,"url":"banner","children":[{"type":"text","value":"Banner.","position":{"start":{"line":57,"column":21,"offset":1785},"end":{"line":57,"column":28,"offset":1792},"indent":[]}}],"position":{"start":{"line":57,"column":20,"offset":1784},"end":{"line":57,"column":37,"offset":1801},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":1613},"end":{"line":57,"column":37,"offset":1801},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Errors","position":{"start":{"line":59,"column":5,"offset":1807},"end":{"line":59,"column":11,"offset":1813},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":1803},"end":{"line":59,"column":11,"offset":1813},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Do not use Toast for errors. This is currently an available variation, but\nshould be considered deprecated and not propagated.","position":{"start":{"line":61,"column":3,"offset":1817},"end":{"line":62,"column":54,"offset":1945},"indent":[3]}}],"position":{"start":{"line":61,"column":3,"offset":1817},"end":{"line":62,"column":54,"offset":1945},"indent":[3]}}],"position":{"start":{"line":61,"column":1,"offset":1815},"end":{"line":62,"column":54,"offset":1945},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Use ","position":{"start":{"line":64,"column":1,"offset":1947},"end":{"line":64,"column":5,"offset":1951},"indent":[]}},{"type":"link","title":null,"url":"banner","children":[{"type":"text","value":"Banner","position":{"start":{"line":64,"column":6,"offset":1952},"end":{"line":64,"column":12,"offset":1958},"indent":[]}}],"position":{"start":{"line":64,"column":5,"offset":1951},"end":{"line":64,"column":21,"offset":1967},"indent":[]}},{"type":"text","value":" and, where necessary, targeted error messaging (such as\n","position":{"start":{"line":64,"column":21,"offset":1967},"end":{"line":65,"column":1,"offset":2024},"indent":[1]}},{"type":"link","title":null,"url":"input-validation","children":[{"type":"text","value":"InputValidation","position":{"start":{"line":65,"column":2,"offset":2025},"end":{"line":65,"column":17,"offset":2040},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":2024},"end":{"line":65,"column":36,"offset":2059},"indent":[]}},{"type":"text","value":") so that the user can appropriately assess\nand recover from the error.","position":{"start":{"line":65,"column":36,"offset":2059},"end":{"line":66,"column":28,"offset":2130},"indent":[1]}}],"position":{"start":{"line":64,"column":1,"offset":1947},"end":{"line":66,"column":28,"offset":2130},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Variations","position":{"start":{"line":68,"column":4,"offset":2135},"end":{"line":68,"column":14,"offset":2145},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":2132},"end":{"line":68,"column":14,"offset":2145},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The primary use case for Toast is success messages.","position":{"start":{"line":70,"column":1,"offset":2147},"end":{"line":70,"column":52,"offset":2198},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":2147},"end":{"line":70,"column":52,"offset":2198},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In some cases, an informational Toast may be used to inform the user of some\nbackground system activity.","position":{"start":{"line":72,"column":1,"offset":2200},"end":{"line":73,"column":28,"offset":2304},"indent":[1]}}],"position":{"start":{"line":72,"column":1,"offset":2200},"end":{"line":73,"column":28,"offset":2304},"indent":[1]}},{"type":"jsx","value":"<Canvas>\n  <Button\n    label=\"Info Toast\"\n    variation=\"learning\"\n    onClick={() =>\n      showToast({\n        message: \"Toasting is underway\",\n        variation: \"info\",\n      })\n    }\n  />\n  <Button\n    label=\"Success Toast\"\n    onClick={() =>\n      showToast({\n        message: \"Toast is ready\",\n        variation: \"success\",\n      })\n    }\n  />\n</Canvas>","position":{"start":{"line":75,"column":1,"offset":2306},"end":{"line":95,"column":10,"offset":2665},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":98,"column":1,"offset":2668},"end":{"line":98,"column":31,"offset":2698},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":98,"column":31,"offset":2698}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { ArgsTable, Canvas, Meta, Story } from \"@storybook/addon-docs\";\nimport { useRef } from \"react\";\nimport { Button } from \"@jobber/components/Button\";\nimport { Toast, showToast } from \"@jobber/components/Toast\";\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Meta title=\"Components/Toast\" component={Toast} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"toast\"\n    }}>{`Toast`}</h1>\n    <p>{`Toasts are short, temporary messages used to inform users that a process was\nperformed. They provide visual feedback on the outcome of an action, and require\nminimal user interaction.`}</p>\n    <p>{`Toast, unlike common React components is not a component that will be added to\nyour view. Instead, Toast is used by importing and calling the `}<inlineCode parentName=\"p\">{`showToast()`}</inlineCode>{`\nfunction.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { showToast } from \"@jobber/components/Toast\";\n`}</code></pre>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Toast\" args={{\n        message: \"Toast has been toasted\"\n      }} mdxType=\"Story\">\n    {args => <Button label=\"Show toast\" onClick={() => showToast(args)} mdxType=\"Button\" />}\n  </Story>\n    </Canvas>\n    <ArgsTable of={showToast} story=\"Toast\" mdxType=\"ArgsTable\" />\n    <h2 {...{\n      \"id\": \"design--usage-guidelines\"\n    }}>{`Design & usage guidelines`}</h2>\n    <p>{`When contributing to or consuming the Toast component, consider the following:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Keep text labels as short as possible. They should be clear and concise, and\nshould not take up more than one line.`}</li>\n      <li parentName=\"ul\">{`Use the pattern: noun + verb.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Examples: `}<inlineCode parentName=\"li\">{`Job saved`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`Quote approved`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`Client archived`}</inlineCode>{`.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`No need to use \"Successfully\", should be implicit in the toast.`}</li>\n      <li parentName=\"ul\">{`Don't use `}<inlineCode parentName=\"li\">{`Dismiss`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`Cancel`}</inlineCode>{` as an action label.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Examples of action labels: `}<inlineCode parentName=\"li\">{`Undo`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`View`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`Refresh`}</inlineCode>{`.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"related-components\"\n    }}>{`Related components`}</h2>\n    <p>{`For more persistent feedback (such as displaying errors), communicating a\nbackground process that is ongoing, or for feedback that has a longer reading\nlength or CTA, use `}<a parentName=\"p\" {...{\n        \"href\": \"banner\"\n      }}>{`Banner.`}</a></p>\n    <h3 {...{\n      \"id\": \"errors\"\n    }}>{`Errors`}</h3>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Do not use Toast for errors. This is currently an available variation, but\nshould be considered deprecated and not propagated.`}</p>\n    </blockquote>\n    <p>{`Use `}<a parentName=\"p\" {...{\n        \"href\": \"banner\"\n      }}>{`Banner`}</a>{` and, where necessary, targeted error messaging (such as\n`}<a parentName=\"p\" {...{\n        \"href\": \"input-validation\"\n      }}>{`InputValidation`}</a>{`) so that the user can appropriately assess\nand recover from the error.`}</p>\n    <h2 {...{\n      \"id\": \"variations\"\n    }}>{`Variations`}</h2>\n    <p>{`The primary use case for Toast is success messages.`}</p>\n    <p>{`In some cases, an informational Toast may be used to inform the user of some\nbackground system activity.`}</p>\n    <Canvas mdxType=\"Canvas\">\n  <Button label=\"Info Toast\" variation=\"learning\" onClick={() => showToast({\n        message: \"Toasting is underway\",\n        variation: \"info\"\n      })} mdxType=\"Button\" />\n  <Button label=\"Success Toast\" onClick={() => showToast({\n        message: \"Toast is ready\",\n        variation: \"success\"\n      })} mdxType=\"Button\" />\n    </Canvas>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}