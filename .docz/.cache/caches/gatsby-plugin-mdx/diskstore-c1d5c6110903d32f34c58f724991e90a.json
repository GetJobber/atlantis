{"expireTime":9007200931831375000,"key":"gatsby-plugin-mdx-entire-payload-c4e1edeae3739448182826d8014ce9f8-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":114,"offset":115},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":117},"end":{"line":5,"column":29,"offset":145},"indent":[]}},{"type":"import","value":"import { ArgsTable, Canvas, Meta, Story } from \"@storybook/addon-docs\";\nimport { Button } from \"@jobber/components/Button\";","position":{"start":{"line":7,"column":1,"offset":147},"end":{"line":8,"column":52,"offset":270},"indent":[1]}},{"type":"jsx","value":"<Meta title=\"Design/Breakpoints\" />","position":{"start":{"line":10,"column":1,"offset":272},"end":{"line":10,"column":36,"offset":307},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Responsive Breakpoints","position":{"start":{"line":12,"column":3,"offset":311},"end":{"line":12,"column":25,"offset":333},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":309},"end":{"line":12,"column":25,"offset":333},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"To make most components responsive, you will want to use the\n","position":{"start":{"line":14,"column":3,"offset":337},"end":{"line":15,"column":1,"offset":398},"indent":[1]}},{"type":"link","title":null,"url":"/hooks/use-resize-observer","children":[{"type":"text","value":"useResizeObserver hook","position":{"start":{"line":15,"column":2,"offset":399},"end":{"line":15,"column":24,"offset":421},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":398},"end":{"line":15,"column":53,"offset":450},"indent":[]}},{"type":"text","value":" so that the component can\nbe responsive based on its container.","position":{"start":{"line":15,"column":53,"offset":450},"end":{"line":16,"column":38,"offset":514},"indent":[1]}}],"position":{"start":{"line":14,"column":1,"offset":335},"end":{"line":16,"column":40,"offset":516},"indent":[1,1]}}],"position":{"start":{"line":14,"column":1,"offset":335},"end":{"line":16,"column":40,"offset":516},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"However, there are times the component will not care about its container and\nwant to be responsive based on the browser size. For this you will want to use a\nbreakpoint in the CSS.","position":{"start":{"line":18,"column":1,"offset":518},"end":{"line":20,"column":23,"offset":698},"indent":[1,1]}}],"position":{"start":{"line":18,"column":1,"offset":518},"end":{"line":20,"column":23,"offset":698},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note","position":{"start":{"line":22,"column":3,"offset":702},"end":{"line":22,"column":7,"offset":706},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":700},"end":{"line":22,"column":9,"offset":708},"indent":[]}},{"type":"text","value":" Components should be styled mobile first, meaning that it should be\nstyled for small screens and then scaled up. This means that the ","position":{"start":{"line":22,"column":9,"offset":708},"end":{"line":23,"column":66,"offset":842},"indent":[1]}},{"type":"inlineCode","value":"--handhelds","position":{"start":{"line":23,"column":66,"offset":842},"end":{"line":23,"column":79,"offset":855},"indent":[]}},{"type":"text","value":"\nbreakpoint should be rarely considered.","position":{"start":{"line":23,"column":79,"offset":855},"end":{"line":24,"column":40,"offset":895},"indent":[1]}}],"position":{"start":{"line":22,"column":1,"offset":700},"end":{"line":24,"column":40,"offset":895},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note","position":{"start":{"line":26,"column":3,"offset":899},"end":{"line":26,"column":7,"offset":903},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":897},"end":{"line":26,"column":9,"offset":905},"indent":[]}},{"type":"text","value":" Media queries can be nested inside selectors. This will help with\nclarity when reading.","position":{"start":{"line":26,"column":9,"offset":905},"end":{"line":27,"column":22,"offset":993},"indent":[1]}}],"position":{"start":{"line":26,"column":1,"offset":897},"end":{"line":27,"column":22,"offset":993},"indent":[1]}},{"type":"table","align":["left","left"],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Breakpoint","position":{"start":{"line":29,"column":3,"offset":997},"end":{"line":29,"column":13,"offset":1007},"indent":[]}}],"position":{"start":{"line":29,"column":3,"offset":997},"end":{"line":29,"column":21,"offset":1015},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Width","position":{"start":{"line":29,"column":24,"offset":1018},"end":{"line":29,"column":29,"offset":1023},"indent":[]}}],"position":{"start":{"line":29,"column":24,"offset":1018},"end":{"line":29,"column":35,"offset":1029},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":995},"end":{"line":29,"column":37,"offset":1031},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"--handhelds","position":{"start":{"line":31,"column":3,"offset":1071},"end":{"line":31,"column":16,"offset":1084},"indent":[]}}],"position":{"start":{"line":31,"column":3,"offset":1071},"end":{"line":31,"column":21,"offset":1089},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"< 640px","position":{"start":{"line":31,"column":24,"offset":1092},"end":{"line":31,"column":33,"offset":1101},"indent":[]}}],"position":{"start":{"line":31,"column":24,"offset":1092},"end":{"line":31,"column":35,"offset":1103},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1069},"end":{"line":31,"column":37,"offset":1105},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"--medium-screens","position":{"start":{"line":32,"column":3,"offset":1108},"end":{"line":32,"column":21,"offset":1126},"indent":[]}}],"position":{"start":{"line":32,"column":3,"offset":1108},"end":{"line":32,"column":21,"offset":1126},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":">= 640px","position":{"start":{"line":32,"column":24,"offset":1129},"end":{"line":32,"column":34,"offset":1139},"indent":[]}}],"position":{"start":{"line":32,"column":24,"offset":1129},"end":{"line":32,"column":35,"offset":1140},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":1106},"end":{"line":32,"column":37,"offset":1142},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"--wide-screens","position":{"start":{"line":33,"column":3,"offset":1145},"end":{"line":33,"column":19,"offset":1161},"indent":[]}}],"position":{"start":{"line":33,"column":3,"offset":1145},"end":{"line":33,"column":21,"offset":1163},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":">= 1024px","position":{"start":{"line":33,"column":24,"offset":1166},"end":{"line":33,"column":35,"offset":1177},"indent":[]}}],"position":{"start":{"line":33,"column":24,"offset":1166},"end":{"line":33,"column":35,"offset":1177},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":1143},"end":{"line":33,"column":37,"offset":1179},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":995},"end":{"line":33,"column":37,"offset":1179},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Usage","position":{"start":{"line":35,"column":4,"offset":1184},"end":{"line":35,"column":9,"offset":1189},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1181},"end":{"line":35,"column":9,"offset":1189},"indent":[]}},{"type":"code","lang":"css","meta":null,"value":".foo {\n  ...;\n  /** small screens first **/\n  padding: var(--space-base);\n\n  @media (--medium-screens) {\n    padding: var(--space-large);\n  }\n\n  @media (--wide-screens) {\n    padding: var(--space-extravagant);\n  }\n}","position":{"start":{"line":37,"column":1,"offset":1191},"end":{"line":51,"column":4,"offset":1417},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":54,"column":1,"offset":1420},"end":{"line":54,"column":31,"offset":1450},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":54,"column":31,"offset":1450}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { ArgsTable, Canvas, Meta, Story } from \"@storybook/addon-docs\";\nimport { Button } from \"@jobber/components/Button\";\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Meta title=\"Design/Breakpoints\" mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"responsive-breakpoints\"\n    }}>{`Responsive Breakpoints`}</h1>\n    <p><strong parentName=\"p\">{`To make most components responsive, you will want to use the\n`}<a parentName=\"strong\" {...{\n          \"href\": \"/hooks/use-resize-observer\"\n        }}>{`useResizeObserver hook`}</a>{` so that the component can\nbe responsive based on its container.`}</strong></p>\n    <p>{`However, there are times the component will not care about its container and\nwant to be responsive based on the browser size. For this you will want to use a\nbreakpoint in the CSS.`}</p>\n    <p><strong parentName=\"p\">{`Note`}</strong>{` Components should be styled mobile first, meaning that it should be\nstyled for small screens and then scaled up. This means that the `}<inlineCode parentName=\"p\">{`--handhelds`}</inlineCode>{`\nbreakpoint should be rarely considered.`}</p>\n    <p><strong parentName=\"p\">{`Note`}</strong>{` Media queries can be nested inside selectors. This will help with\nclarity when reading.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Breakpoint`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Width`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`--handhelds`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`< 640px`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`--medium-screens`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`>= 640px`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`--wide-screens`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`>= 1024px`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.foo {\n  ...;\n  /** small screens first **/\n  padding: var(--space-base);\n\n  @media (--medium-screens) {\n    padding: var(--space-large);\n  }\n\n  @media (--wide-screens) {\n    padding: var(--space-extravagant);\n  }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}