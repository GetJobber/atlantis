{"expireTime":9007200931831382000,"key":"gatsby-plugin-mdx-entire-payload-266b5476274014cbf629408973f415af-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":114,"offset":115},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":117},"end":{"line":5,"column":29,"offset":145},"indent":[]}},{"type":"import","value":"import { Playground, Props } from \"docz\";\nimport { MultiSelect } from \".\";\nimport { useState } from \"react\";\nimport { Divider } from \"@jobber/components/Divider\";","position":{"start":{"line":8,"column":1,"offset":148},"end":{"line":11,"column":54,"offset":310},"indent":[1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Multi Select","position":{"start":{"line":13,"column":3,"offset":314},"end":{"line":13,"column":15,"offset":326},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":312},"end":{"line":13,"column":15,"offset":326},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":15,"column":1,"offset":328},"end":{"line":15,"column":5,"offset":332},"indent":[]}},{"type":"inlineCode","value":"MultiSelect","position":{"start":{"line":15,"column":5,"offset":332},"end":{"line":15,"column":18,"offset":345},"indent":[]}},{"type":"text","value":" component gives our users the possibility to select multiple\noptions from a menu.","position":{"start":{"line":15,"column":18,"offset":345},"end":{"line":16,"column":21,"offset":427},"indent":[1]}}],"position":{"start":{"line":15,"column":1,"offset":328},"end":{"line":16,"column":21,"offset":427},"indent":[1]}},{"type":"code","lang":"ts","meta":null,"value":"import { MultiSelect } from \"@jobber/components/MultiSelect\";","position":{"start":{"line":18,"column":1,"offset":429},"end":{"line":20,"column":4,"offset":500},"indent":[1,1]}},{"type":"jsx","value":"<Playground>\n  {() => {\n    const [options, setOptions] = useState([\n      { label: \"Synced\", checked: true },\n      { label: \"Errors\", checked: false },\n      { label: \"Warnings\", checked: true },\n      { label: \"Ignored\", checked: true },\n    ]);\n    return (\n      <MultiSelect\n        defaultLabel=\"Status\"\n        allSelectedLabel=\"All Statuses\"\n        options={options}\n        onOptionsChange={setOptions}\n      />\n    );\n  }}\n</Playground>","position":{"start":{"line":22,"column":1,"offset":502},"end":{"line":39,"column":14,"offset":950},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Props","position":{"start":{"line":41,"column":4,"offset":955},"end":{"line":41,"column":9,"offset":960},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":952},"end":{"line":41,"column":9,"offset":960},"indent":[]}},{"type":"jsx","value":"<Props of={MultiSelect} />","position":{"start":{"line":43,"column":1,"offset":962},"end":{"line":43,"column":27,"offset":988},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Usage guidelines","position":{"start":{"line":45,"column":4,"offset":993},"end":{"line":45,"column":20,"offset":1009},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":990},"end":{"line":45,"column":20,"offset":1009},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The goal of the ","position":{"start":{"line":47,"column":1,"offset":1011},"end":{"line":47,"column":17,"offset":1027},"indent":[]}},{"type":"inlineCode","value":"MultiSelect","position":{"start":{"line":47,"column":17,"offset":1027},"end":{"line":47,"column":30,"offset":1040},"indent":[]}},{"type":"text","value":" component is to allow a user to check multiple\noptions within a list of items.","position":{"start":{"line":47,"column":30,"offset":1040},"end":{"line":48,"column":32,"offset":1119},"indent":[1]}}],"position":{"start":{"line":47,"column":1,"offset":1011},"end":{"line":48,"column":32,"offset":1119},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"A user can click on the element to expand it and display the multiple options.\nThe element will display the selected options or the placeholder text if none\nare selected.","position":{"start":{"line":50,"column":1,"offset":1121},"end":{"line":52,"column":14,"offset":1291},"indent":[1,1]}}],"position":{"start":{"line":50,"column":1,"offset":1121},"end":{"line":52,"column":14,"offset":1291},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Every time an option is checked or unchecked a behavior can be triggered using\nthe onOptionsChange prop","position":{"start":{"line":54,"column":1,"offset":1293},"end":{"line":55,"column":25,"offset":1396},"indent":[1]}}],"position":{"start":{"line":54,"column":1,"offset":1293},"end":{"line":55,"column":25,"offset":1396},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Sizes","position":{"start":{"line":57,"column":5,"offset":1402},"end":{"line":57,"column":10,"offset":1407},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":1398},"end":{"line":57,"column":10,"offset":1407},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Adjusting the size of the ","position":{"start":{"line":59,"column":1,"offset":1409},"end":{"line":59,"column":27,"offset":1435},"indent":[]}},{"type":"inlineCode","value":"MultiSelect","position":{"start":{"line":59,"column":27,"offset":1435},"end":{"line":59,"column":40,"offset":1448},"indent":[]}},{"type":"text","value":" can be used to help align with common\nadjacent elements such as ","position":{"start":{"line":59,"column":40,"offset":1448},"end":{"line":60,"column":27,"offset":1513},"indent":[1]}},{"type":"inlineCode","value":"InputText","position":{"start":{"line":60,"column":27,"offset":1513},"end":{"line":60,"column":38,"offset":1524},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":60,"column":38,"offset":1524},"end":{"line":60,"column":42,"offset":1528},"indent":[]}},{"type":"inlineCode","value":"Select","position":{"start":{"line":60,"column":42,"offset":1528},"end":{"line":60,"column":50,"offset":1536},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":60,"column":50,"offset":1536},"end":{"line":60,"column":51,"offset":1537},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":1409},"end":{"line":60,"column":51,"offset":1537},"indent":[1]}},{"type":"jsx","value":"<Playground>\n  {() => {\n    const [options, setOptions] = useState([\n      { label: \"Small\", checked: false },\n      { label: \"Large\", checked: false },\n    ]);\n    return (\n      <>\n        <MultiSelect\n          defaultLabel=\"Small\"\n          allSelectedLabel=\"All Selected\"\n          options={options}\n          onOptionsChange={setOptions}\n          size=\"small\"\n        />\n        <Divider size=\"largest\" />\n        <MultiSelect\n          defaultLabel=\"Large\"\n          allSelectedLabel=\"All selected\"\n          options={options}\n          onOptionsChange={setOptions}\n          size=\"large\"\n        />\n      </>\n    );\n  }}\n</Playground>","position":{"start":{"line":62,"column":1,"offset":1539},"end":{"line":88,"column":14,"offset":2182},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Accessibility","position":{"start":{"line":90,"column":4,"offset":2187},"end":{"line":90,"column":17,"offset":2200},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":2184},"end":{"line":90,"column":17,"offset":2200},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The MultiSelect trigger element contains a downward-pointing-arrow to hint\nthat it can be expanded;","position":{"start":{"line":92,"column":3,"offset":2204},"end":{"line":93,"column":27,"offset":2305},"indent":[3]}}],"position":{"start":{"line":92,"column":3,"offset":2204},"end":{"line":93,"column":27,"offset":2305},"indent":[3]}}],"position":{"start":{"line":92,"column":1,"offset":2202},"end":{"line":93,"column":27,"offset":2305},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Users are able to focus the MultiSelect trigger element by using the Tab key;","position":{"start":{"line":94,"column":3,"offset":2308},"end":{"line":94,"column":80,"offset":2385},"indent":[]}}],"position":{"start":{"line":94,"column":3,"offset":2308},"end":{"line":94,"column":80,"offset":2385},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":2306},"end":{"line":94,"column":80,"offset":2385},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Users should be able to display the options by using the Space or Enter/Return\nkeys;","position":{"start":{"line":95,"column":3,"offset":2388},"end":{"line":96,"column":8,"offset":2474},"indent":[3]}}],"position":{"start":{"line":95,"column":3,"offset":2388},"end":{"line":96,"column":8,"offset":2474},"indent":[3]}}],"position":{"start":{"line":95,"column":1,"offset":2386},"end":{"line":96,"column":8,"offset":2474},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Users should be able to navigate through the options by using Tab or\nArrowDown/ArrowUp keys and check/uncheck them by using Space or Enter/Return\nkeys;","position":{"start":{"line":97,"column":3,"offset":2477},"end":{"line":99,"column":8,"offset":2632},"indent":[3,3]}}],"position":{"start":{"line":97,"column":3,"offset":2477},"end":{"line":99,"column":8,"offset":2632},"indent":[3,3]}}],"position":{"start":{"line":97,"column":1,"offset":2475},"end":{"line":99,"column":8,"offset":2632},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Users can press the Escape key, click out of the component or click the\ntrigger again to close the menu;","position":{"start":{"line":100,"column":3,"offset":2635},"end":{"line":101,"column":35,"offset":2741},"indent":[3]}}],"position":{"start":{"line":100,"column":3,"offset":2635},"end":{"line":101,"column":35,"offset":2741},"indent":[3]}}],"position":{"start":{"line":100,"column":1,"offset":2633},"end":{"line":101,"column":35,"offset":2741},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Features and behavior are announced to the user when using a screen reader;","position":{"start":{"line":102,"column":3,"offset":2744},"end":{"line":102,"column":78,"offset":2819},"indent":[]}}],"position":{"start":{"line":102,"column":3,"offset":2744},"end":{"line":102,"column":78,"offset":2819},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":2742},"end":{"line":102,"column":78,"offset":2819},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":2202},"end":{"line":102,"column":78,"offset":2819},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Responsiveness","position":{"start":{"line":104,"column":4,"offset":2824},"end":{"line":104,"column":18,"offset":2838},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":2821},"end":{"line":104,"column":18,"offset":2838},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"On mobile devices the interaction behaviour would be the same as a mouse with\ntouch/click. The component should adapt to different screen sizes the same as an\nhtml select would.","position":{"start":{"line":106,"column":1,"offset":2840},"end":{"line":108,"column":19,"offset":3017},"indent":[1,1]}}],"position":{"start":{"line":106,"column":1,"offset":2840},"end":{"line":108,"column":19,"offset":3017},"indent":[1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":111,"column":1,"offset":3020},"end":{"line":111,"column":31,"offset":3050},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":111,"column":31,"offset":3050}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { Playground, Props } from \"docz\";\nimport { MultiSelect } from \".\";\nimport { useState } from \"react\";\nimport { Divider } from \"@jobber/components/Divider\";\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"multi-select\"\n    }}>{`Multi Select`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`MultiSelect`}</inlineCode>{` component gives our users the possibility to select multiple\noptions from a menu.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { MultiSelect } from \"@jobber/components/MultiSelect\";\n`}</code></pre>\n    <Playground __position={0} __code={'() => {\\n  const [options, setOptions] = useState([\\n    { label: \\'Synced\\', checked: true },\\n    { label: \\'Errors\\', checked: false },\\n    { label: \\'Warnings\\', checked: true },\\n    { label: \\'Ignored\\', checked: true },\\n  ])\\n  return (\\n    <MultiSelect\\n      defaultLabel=\\\"Status\\\"\\n      allSelectedLabel=\\\"All Statuses\\\"\\n      options={options}\\n      onOptionsChange={setOptions}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      MultiSelect,\n      useState,\n      Divider,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [options, setOptions] = useState([{\n          label: \"Synced\",\n          checked: true\n        }, {\n          label: \"Errors\",\n          checked: false\n        }, {\n          label: \"Warnings\",\n          checked: true\n        }, {\n          label: \"Ignored\",\n          checked: true\n        }]);\n        return <MultiSelect defaultLabel=\"Status\" allSelectedLabel=\"All Statuses\" options={options} onOptionsChange={setOptions} mdxType=\"MultiSelect\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={MultiSelect} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"usage-guidelines\"\n    }}>{`Usage guidelines`}</h2>\n    <p>{`The goal of the `}<inlineCode parentName=\"p\">{`MultiSelect`}</inlineCode>{` component is to allow a user to check multiple\noptions within a list of items.`}</p>\n    <p>{`A user can click on the element to expand it and display the multiple options.\nThe element will display the selected options or the placeholder text if none\nare selected.`}</p>\n    <p>{`Every time an option is checked or unchecked a behavior can be triggered using\nthe onOptionsChange prop`}</p>\n    <h3 {...{\n      \"id\": \"sizes\"\n    }}>{`Sizes`}</h3>\n    <p>{`Adjusting the size of the `}<inlineCode parentName=\"p\">{`MultiSelect`}</inlineCode>{` can be used to help align with common\nadjacent elements such as `}<inlineCode parentName=\"p\">{`InputText`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`Select`}</inlineCode>{`.`}</p>\n    <Playground __position={2} __code={'() => {\\n  const [options, setOptions] = useState([\\n    { label: \\'Small\\', checked: false },\\n    { label: \\'Large\\', checked: false },\\n  ])\\n  return (\\n    <>\\n      <MultiSelect\\n        defaultLabel=\\\"Small\\\"\\n        allSelectedLabel=\\\"All Selected\\\"\\n        options={options}\\n        onOptionsChange={setOptions}\\n        size=\\\"small\\\"\\n      />\\n      <Divider size=\\\"largest\\\" />\\n      <MultiSelect\\n        defaultLabel=\\\"Large\\\"\\n        allSelectedLabel=\\\"All selected\\\"\\n        options={options}\\n        onOptionsChange={setOptions}\\n        size=\\\"large\\\"\\n      />\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      MultiSelect,\n      useState,\n      Divider,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [options, setOptions] = useState([{\n          label: \"Small\",\n          checked: false\n        }, {\n          label: \"Large\",\n          checked: false\n        }]);\n        return <>\n        <MultiSelect defaultLabel=\"Small\" allSelectedLabel=\"All Selected\" options={options} onOptionsChange={setOptions} size=\"small\" mdxType=\"MultiSelect\" />\n        <Divider size=\"largest\" mdxType=\"Divider\" />\n        <MultiSelect defaultLabel=\"Large\" allSelectedLabel=\"All selected\" options={options} onOptionsChange={setOptions} size=\"large\" mdxType=\"MultiSelect\" />\n      </>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"accessibility\"\n    }}>{`Accessibility`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`The MultiSelect trigger element contains a downward-pointing-arrow to hint\nthat it can be expanded;`}</li>\n      <li parentName=\"ul\">{`Users are able to focus the MultiSelect trigger element by using the Tab key;`}</li>\n      <li parentName=\"ul\">{`Users should be able to display the options by using the Space or Enter/Return\nkeys;`}</li>\n      <li parentName=\"ul\">{`Users should be able to navigate through the options by using Tab or\nArrowDown/ArrowUp keys and check/uncheck them by using Space or Enter/Return\nkeys;`}</li>\n      <li parentName=\"ul\">{`Users can press the Escape key, click out of the component or click the\ntrigger again to close the menu;`}</li>\n      <li parentName=\"ul\">{`Features and behavior are announced to the user when using a screen reader;`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"responsiveness\"\n    }}>{`Responsiveness`}</h2>\n    <p>{`On mobile devices the interaction behaviour would be the same as a mouse with\ntouch/click. The component should adapt to different screen sizes the same as an\nhtml select would.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}