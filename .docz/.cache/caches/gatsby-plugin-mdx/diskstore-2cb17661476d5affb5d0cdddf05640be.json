{"expireTime":9007200931831330000,"key":"gatsby-plugin-mdx-entire-payload-e6602c7e586300b1dd27340b7fa570c5-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":114,"offset":115},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":117},"end":{"line":5,"column":29,"offset":145},"indent":[]}},{"type":"import","value":"import { Playground, Props } from \"docz\";\nimport { ComponentStatus } from \"@jobber/docx\";\nimport { CivilDateTime } from \"@std-proposal/temporal\";\nimport { FormatRelativeDateTime } from \".\";","position":{"start":{"line":8,"column":1,"offset":148},"end":{"line":11,"column":44,"offset":337},"indent":[1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"FormatRelativeDateTime","position":{"start":{"line":13,"column":3,"offset":341},"end":{"line":13,"column":25,"offset":363},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":339},"end":{"line":13,"column":25,"offset":363},"indent":[]}},{"type":"jsx","value":"<ComponentStatus stage=\"pre\" responsive=\"yes\" accessible=\"yes\" />","position":{"start":{"line":15,"column":1,"offset":365},"end":{"line":15,"column":66,"offset":430},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A FormatRelateDateTime displays the date and time using relative wording or\napproximate values. Note. This component only represents current date and dates\nin the past. No future dating.","position":{"start":{"line":17,"column":1,"offset":432},"end":{"line":19,"column":31,"offset":618},"indent":[1,1]}}],"position":{"start":{"line":17,"column":1,"offset":432},"end":{"line":19,"column":31,"offset":618},"indent":[1,1]}},{"type":"code","lang":"ts","meta":null,"value":"import { FormatRelativeDateTime } from \"@jobber/components/FormatRelativeDateTime\";","position":{"start":{"line":21,"column":1,"offset":620},"end":{"line":23,"column":4,"offset":713},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Props","position":{"start":{"line":25,"column":4,"offset":718},"end":{"line":25,"column":9,"offset":723},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":715},"end":{"line":25,"column":9,"offset":723},"indent":[]}},{"type":"jsx","value":"<Props of={FormatRelativeDateTime} />","position":{"start":{"line":27,"column":1,"offset":725},"end":{"line":27,"column":38,"offset":762},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":29,"column":1,"offset":764},"end":{"line":29,"column":4,"offset":767},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Rules","position":{"start":{"line":31,"column":4,"offset":772},"end":{"line":31,"column":9,"offset":777},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":769},"end":{"line":31,"column":9,"offset":777},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If the message was received less than an hour ago the format is x minutes ago","position":{"start":{"line":33,"column":1,"offset":779},"end":{"line":33,"column":78,"offset":856},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":779},"end":{"line":33,"column":78,"offset":856},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If the message was received today, but more than an hour ago, the format becomes\nthe hours and minutes it was received at","position":{"start":{"line":35,"column":1,"offset":858},"end":{"line":36,"column":41,"offset":979},"indent":[1]}}],"position":{"start":{"line":35,"column":1,"offset":858},"end":{"line":36,"column":41,"offset":979},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"If the message was received this within the last six days, the format is Sun,\nMon, Tue, Wed, Thu, Fri, Sat","position":{"start":{"line":38,"column":1,"offset":981},"end":{"line":39,"column":29,"offset":1087},"indent":[1]}}],"position":{"start":{"line":38,"column":1,"offset":981},"end":{"line":39,"column":29,"offset":1087},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"If the message was received between six days ago and yesterday’s date one year\nprevious, the format is Month Date","position":{"start":{"line":41,"column":1,"offset":1089},"end":{"line":42,"column":35,"offset":1202},"indent":[1]}}],"position":{"start":{"line":41,"column":1,"offset":1089},"end":{"line":42,"column":35,"offset":1202},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"If the message was received exactly one year ago or more than one year ago, the\nformat is Month Day, Year","position":{"start":{"line":44,"column":1,"offset":1204},"end":{"line":45,"column":26,"offset":1309},"indent":[1]}}],"position":{"start":{"line":44,"column":1,"offset":1204},"end":{"line":45,"column":26,"offset":1309},"indent":[1]}},{"type":"jsx","value":"<Playground>\n  <FormatRelativeDateTime date={new CivilDateTime(2020, 2, 26, 14, 29, 39)} />\n</Playground>","position":{"start":{"line":47,"column":1,"offset":1311},"end":{"line":49,"column":14,"offset":1416},"indent":[1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":52,"column":1,"offset":1419},"end":{"line":52,"column":31,"offset":1449},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":52,"column":31,"offset":1449}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { Playground, Props } from \"docz\";\nimport { ComponentStatus } from \"@jobber/docx\";\nimport { CivilDateTime } from \"@std-proposal/temporal\";\nimport { FormatRelativeDateTime } from \".\";\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"formatrelativedatetime\"\n    }}>{`FormatRelativeDateTime`}</h1>\n    <ComponentStatus stage=\"pre\" responsive=\"yes\" accessible=\"yes\" mdxType=\"ComponentStatus\" />\n    <p>{`A FormatRelateDateTime displays the date and time using relative wording or\napproximate values. Note. This component only represents current date and dates\nin the past. No future dating.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { FormatRelativeDateTime } from \"@jobber/components/FormatRelativeDateTime\";\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={FormatRelativeDateTime} mdxType=\"Props\" />\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"rules\"\n    }}>{`Rules`}</h2>\n    <p>{`If the message was received less than an hour ago the format is x minutes ago`}</p>\n    <p>{`If the message was received today, but more than an hour ago, the format becomes\nthe hours and minutes it was received at`}</p>\n    <p>{`If the message was received this within the last six days, the format is Sun,\nMon, Tue, Wed, Thu, Fri, Sat`}</p>\n    <p>{`If the message was received between six days ago and yesterday’s date one year\nprevious, the format is Month Date`}</p>\n    <p>{`If the message was received exactly one year ago or more than one year ago, the\nformat is Month Day, Year`}</p>\n    <Playground __position={2} __code={'<FormatRelativeDateTime date={new CivilDateTime(2020, 2, 26, 14, 29, 39)} />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ComponentStatus,\n      CivilDateTime,\n      FormatRelativeDateTime,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <FormatRelativeDateTime date={new CivilDateTime(2020, 2, 26, 14, 29, 39)} mdxType=\"FormatRelativeDateTime\" />\n    </Playground>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}