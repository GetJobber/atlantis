{"expireTime":9007200931831381000,"key":"gatsby-plugin-mdx-entire-payload-f2e9eaaae0733c03d073760f24106e2f-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":114,"offset":115},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":117},"end":{"line":5,"column":29,"offset":145},"indent":[]}},{"type":"import","value":"import { Playground, Props } from \"docz\";\nimport { ComponentStatus } from \"@jobber/docx\";\nimport { useRef } from \"react\";\nimport { Button } from \"@jobber/components/Button\";\nimport { showToast } from \".\";\nimport { Toast } from \"./Toast\";","position":{"start":{"line":8,"column":1,"offset":148},"end":{"line":13,"column":33,"offset":385},"indent":[1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Toast","position":{"start":{"line":15,"column":3,"offset":389},"end":{"line":15,"column":8,"offset":394},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":387},"end":{"line":15,"column":8,"offset":394},"indent":[]}},{"type":"jsx","value":"<ComponentStatus stage=\"ready\" responsive=\"no\" accessible=\"no\" />","position":{"start":{"line":17,"column":1,"offset":396},"end":{"line":17,"column":66,"offset":461},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Toasts are short, temporary messages used to inform users that a process was\nperformed. They provide visual feedback on the outcome of an action, and require\nminimal user interacction.","position":{"start":{"line":19,"column":1,"offset":463},"end":{"line":21,"column":27,"offset":647},"indent":[1,1]}}],"position":{"start":{"line":19,"column":1,"offset":463},"end":{"line":21,"column":27,"offset":647},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Toast, unlike common React components is not a component that will be added to\nyour view. Instead, Toast is used by importing and calling the ","position":{"start":{"line":23,"column":1,"offset":649},"end":{"line":24,"column":64,"offset":791},"indent":[1]}},{"type":"inlineCode","value":"showToast()","position":{"start":{"line":24,"column":64,"offset":791},"end":{"line":24,"column":77,"offset":804},"indent":[]}},{"type":"text","value":"\nfunction.","position":{"start":{"line":24,"column":77,"offset":804},"end":{"line":25,"column":10,"offset":814},"indent":[1]}}],"position":{"start":{"line":23,"column":1,"offset":649},"end":{"line":25,"column":10,"offset":814},"indent":[1,1]}},{"type":"code","lang":"ts","meta":null,"value":"import { showToast } from \"@jobber/components/Toast\";","position":{"start":{"line":27,"column":1,"offset":816},"end":{"line":29,"column":4,"offset":879},"indent":[1,1]}},{"type":"jsx","value":"<Playground>\n  <Button\n    label=\"show toast\"\n    onClick={() =>\n      showToast({\n        message: \"Toast has been toasted\",\n      })\n    }\n  />\n</Playground>","position":{"start":{"line":31,"column":1,"offset":881},"end":{"line":40,"column":14,"offset":1040},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Design & usage guidelines","position":{"start":{"line":42,"column":4,"offset":1045},"end":{"line":42,"column":29,"offset":1070},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":1042},"end":{"line":42,"column":29,"offset":1070},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When contributing to or consuming the Toast component, consider the following:","position":{"start":{"line":44,"column":1,"offset":1072},"end":{"line":44,"column":79,"offset":1150},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":1072},"end":{"line":44,"column":79,"offset":1150},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Keep text labels as short as possible. They should be clear and concise, and\nshould not take up more than one line.","position":{"start":{"line":46,"column":3,"offset":1154},"end":{"line":47,"column":41,"offset":1271},"indent":[3]}}],"position":{"start":{"line":46,"column":3,"offset":1154},"end":{"line":47,"column":41,"offset":1271},"indent":[3]}}],"position":{"start":{"line":46,"column":1,"offset":1152},"end":{"line":47,"column":41,"offset":1271},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Use the pattern: noun + verb.","position":{"start":{"line":48,"column":3,"offset":1274},"end":{"line":48,"column":32,"offset":1303},"indent":[]}}],"position":{"start":{"line":48,"column":3,"offset":1274},"end":{"line":48,"column":32,"offset":1303},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Examples: ","position":{"start":{"line":49,"column":5,"offset":1308},"end":{"line":49,"column":15,"offset":1318},"indent":[]}},{"type":"inlineCode","value":"Job saved","position":{"start":{"line":49,"column":15,"offset":1318},"end":{"line":49,"column":26,"offset":1329},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":49,"column":26,"offset":1329},"end":{"line":49,"column":28,"offset":1331},"indent":[]}},{"type":"inlineCode","value":"Quote approved","position":{"start":{"line":49,"column":28,"offset":1331},"end":{"line":49,"column":44,"offset":1347},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":49,"column":44,"offset":1347},"end":{"line":49,"column":46,"offset":1349},"indent":[]}},{"type":"inlineCode","value":"Client archived","position":{"start":{"line":49,"column":46,"offset":1349},"end":{"line":49,"column":63,"offset":1366},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":49,"column":63,"offset":1366},"end":{"line":49,"column":64,"offset":1367},"indent":[]}}],"position":{"start":{"line":49,"column":5,"offset":1308},"end":{"line":49,"column":64,"offset":1367},"indent":[]}}],"position":{"start":{"line":49,"column":3,"offset":1306},"end":{"line":49,"column":64,"offset":1367},"indent":[]}}],"position":{"start":{"line":49,"column":3,"offset":1306},"end":{"line":49,"column":64,"offset":1367},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":1272},"end":{"line":49,"column":64,"offset":1367},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"No need to use \"Successfully\", should be implicit in the toast.","position":{"start":{"line":50,"column":3,"offset":1370},"end":{"line":50,"column":66,"offset":1433},"indent":[]}}],"position":{"start":{"line":50,"column":3,"offset":1370},"end":{"line":50,"column":66,"offset":1433},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":1368},"end":{"line":50,"column":66,"offset":1433},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Don't use ","position":{"start":{"line":51,"column":3,"offset":1436},"end":{"line":51,"column":13,"offset":1446},"indent":[]}},{"type":"inlineCode","value":"Dismiss","position":{"start":{"line":51,"column":13,"offset":1446},"end":{"line":51,"column":22,"offset":1455},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":51,"column":22,"offset":1455},"end":{"line":51,"column":26,"offset":1459},"indent":[]}},{"type":"inlineCode","value":"Cancel","position":{"start":{"line":51,"column":26,"offset":1459},"end":{"line":51,"column":34,"offset":1467},"indent":[]}},{"type":"text","value":" as an action label.","position":{"start":{"line":51,"column":34,"offset":1467},"end":{"line":51,"column":54,"offset":1487},"indent":[]}}],"position":{"start":{"line":51,"column":3,"offset":1436},"end":{"line":51,"column":54,"offset":1487},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Examples of action labels: ","position":{"start":{"line":52,"column":5,"offset":1492},"end":{"line":52,"column":32,"offset":1519},"indent":[]}},{"type":"inlineCode","value":"Undo","position":{"start":{"line":52,"column":32,"offset":1519},"end":{"line":52,"column":38,"offset":1525},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":52,"column":38,"offset":1525},"end":{"line":52,"column":40,"offset":1527},"indent":[]}},{"type":"inlineCode","value":"View","position":{"start":{"line":52,"column":40,"offset":1527},"end":{"line":52,"column":46,"offset":1533},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":52,"column":46,"offset":1533},"end":{"line":52,"column":48,"offset":1535},"indent":[]}},{"type":"inlineCode","value":"Refresh","position":{"start":{"line":52,"column":48,"offset":1535},"end":{"line":52,"column":57,"offset":1544},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":52,"column":57,"offset":1544},"end":{"line":52,"column":58,"offset":1545},"indent":[]}}],"position":{"start":{"line":52,"column":5,"offset":1492},"end":{"line":52,"column":58,"offset":1545},"indent":[]}}],"position":{"start":{"line":52,"column":3,"offset":1490},"end":{"line":52,"column":58,"offset":1545},"indent":[]}}],"position":{"start":{"line":52,"column":3,"offset":1490},"end":{"line":52,"column":58,"offset":1545},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1434},"end":{"line":52,"column":58,"offset":1545},"indent":[1]}}],"position":{"start":{"line":46,"column":1,"offset":1152},"end":{"line":52,"column":58,"offset":1545},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Related components","position":{"start":{"line":54,"column":4,"offset":1550},"end":{"line":54,"column":22,"offset":1568},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1547},"end":{"line":54,"column":22,"offset":1568},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For more persistent feedback (such as displaying errors), communicating a\nbackground process that is ongoing, or for feedback that has a longer reading\nlength or CTA, use ","position":{"start":{"line":56,"column":1,"offset":1570},"end":{"line":58,"column":20,"offset":1741},"indent":[1,1]}},{"type":"link","title":null,"url":"banner","children":[{"type":"text","value":"Banner.","position":{"start":{"line":58,"column":21,"offset":1742},"end":{"line":58,"column":28,"offset":1749},"indent":[]}}],"position":{"start":{"line":58,"column":20,"offset":1741},"end":{"line":58,"column":37,"offset":1758},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1570},"end":{"line":58,"column":37,"offset":1758},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Errors","position":{"start":{"line":60,"column":5,"offset":1764},"end":{"line":60,"column":11,"offset":1770},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":1760},"end":{"line":60,"column":11,"offset":1770},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Do not use Toast for errors. This is currently an available variation, but\nshould be considered deprecated and not propagated.","position":{"start":{"line":62,"column":3,"offset":1774},"end":{"line":63,"column":54,"offset":1902},"indent":[3]}}],"position":{"start":{"line":62,"column":3,"offset":1774},"end":{"line":63,"column":54,"offset":1902},"indent":[3]}}],"position":{"start":{"line":62,"column":1,"offset":1772},"end":{"line":63,"column":54,"offset":1902},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Use ","position":{"start":{"line":65,"column":1,"offset":1904},"end":{"line":65,"column":5,"offset":1908},"indent":[]}},{"type":"link","title":null,"url":"banner","children":[{"type":"text","value":"Banner","position":{"start":{"line":65,"column":6,"offset":1909},"end":{"line":65,"column":12,"offset":1915},"indent":[]}}],"position":{"start":{"line":65,"column":5,"offset":1908},"end":{"line":65,"column":21,"offset":1924},"indent":[]}},{"type":"text","value":" and, where necessary, targeted error messaging (such as\n","position":{"start":{"line":65,"column":21,"offset":1924},"end":{"line":66,"column":1,"offset":1981},"indent":[1]}},{"type":"link","title":null,"url":"input-validation","children":[{"type":"text","value":"InputValidation","position":{"start":{"line":66,"column":2,"offset":1982},"end":{"line":66,"column":17,"offset":1997},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1981},"end":{"line":66,"column":36,"offset":2016},"indent":[]}},{"type":"text","value":") so that the user can appropriately assess\nand recover from the error.","position":{"start":{"line":66,"column":36,"offset":2016},"end":{"line":67,"column":28,"offset":2087},"indent":[1]}}],"position":{"start":{"line":65,"column":1,"offset":1904},"end":{"line":67,"column":28,"offset":2087},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Props","position":{"start":{"line":69,"column":4,"offset":2092},"end":{"line":69,"column":9,"offset":2097},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":2089},"end":{"line":69,"column":9,"offset":2097},"indent":[]}},{"type":"jsx","value":"<Props of={Toast} />","position":{"start":{"line":71,"column":1,"offset":2099},"end":{"line":71,"column":21,"offset":2119},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Variations","position":{"start":{"line":73,"column":4,"offset":2124},"end":{"line":73,"column":14,"offset":2134},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":2121},"end":{"line":73,"column":14,"offset":2134},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The primary use case for Toast is success messages.","position":{"start":{"line":75,"column":1,"offset":2136},"end":{"line":75,"column":52,"offset":2187},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":2136},"end":{"line":75,"column":52,"offset":2187},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In some cases, an informational Toast may be used to inform the user of some\nbackground system activity.","position":{"start":{"line":77,"column":1,"offset":2189},"end":{"line":78,"column":28,"offset":2293},"indent":[1]}}],"position":{"start":{"line":77,"column":1,"offset":2189},"end":{"line":78,"column":28,"offset":2293},"indent":[1]}},{"type":"jsx","value":"<Playground>\n  {() => {\n    return (\n      <>\n        <Button\n          label=\"Info Toast\"\n          variation=\"learning\"\n          onClick={() =>\n            showToast({\n              message: \"Toasting is underway\",\n              variation: \"info\",\n            })\n          }\n        />\n        <Button\n          label=\"Success Toast\"\n          onClick={() =>\n            showToast({\n              message: \"Toast is ready\",\n              variation: \"success\",\n            })\n          }\n        />\n      </>\n    );\n  }}\n</Playground>","position":{"start":{"line":80,"column":1,"offset":2295},"end":{"line":106,"column":14,"offset":2831},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":109,"column":1,"offset":2834},"end":{"line":109,"column":31,"offset":2864},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":109,"column":31,"offset":2864}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { Playground, Props } from \"docz\";\nimport { ComponentStatus } from \"@jobber/docx\";\nimport { useRef } from \"react\";\nimport { Button } from \"@jobber/components/Button\";\nimport { showToast } from \".\";\nimport { Toast } from \"./Toast\";\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"toast\"\n    }}>{`Toast`}</h1>\n    <ComponentStatus stage=\"ready\" responsive=\"no\" accessible=\"no\" mdxType=\"ComponentStatus\" />\n    <p>{`Toasts are short, temporary messages used to inform users that a process was\nperformed. They provide visual feedback on the outcome of an action, and require\nminimal user interacction.`}</p>\n    <p>{`Toast, unlike common React components is not a component that will be added to\nyour view. Instead, Toast is used by importing and calling the `}<inlineCode parentName=\"p\">{`showToast()`}</inlineCode>{`\nfunction.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { showToast } from \"@jobber/components/Toast\";\n`}</code></pre>\n    <Playground __position={1} __code={'<Button\\n  label=\\\"show toast\\\"\\n  onClick={() =>\\n    showToast({\\n      message: \\'Toast has been toasted\\',\\n    })\\n  }\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ComponentStatus,\n      useRef,\n      Button,\n      showToast,\n      Toast,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Button label=\"show toast\" onClick={() => showToast({\n        message: \"Toast has been toasted\"\n      })} mdxType=\"Button\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"design--usage-guidelines\"\n    }}>{`Design & usage guidelines`}</h2>\n    <p>{`When contributing to or consuming the Toast component, consider the following:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Keep text labels as short as possible. They should be clear and concise, and\nshould not take up more than one line.`}</li>\n      <li parentName=\"ul\">{`Use the pattern: noun + verb.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Examples: `}<inlineCode parentName=\"li\">{`Job saved`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`Quote approved`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`Client archived`}</inlineCode>{`.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`No need to use \"Successfully\", should be implicit in the toast.`}</li>\n      <li parentName=\"ul\">{`Don't use `}<inlineCode parentName=\"li\">{`Dismiss`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`Cancel`}</inlineCode>{` as an action label.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Examples of action labels: `}<inlineCode parentName=\"li\">{`Undo`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`View`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`Refresh`}</inlineCode>{`.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"related-components\"\n    }}>{`Related components`}</h2>\n    <p>{`For more persistent feedback (such as displaying errors), communicating a\nbackground process that is ongoing, or for feedback that has a longer reading\nlength or CTA, use `}<a parentName=\"p\" {...{\n        \"href\": \"banner\"\n      }}>{`Banner.`}</a></p>\n    <h3 {...{\n      \"id\": \"errors\"\n    }}>{`Errors`}</h3>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Do not use Toast for errors. This is currently an available variation, but\nshould be considered deprecated and not propagated.`}</p>\n    </blockquote>\n    <p>{`Use `}<a parentName=\"p\" {...{\n        \"href\": \"banner\"\n      }}>{`Banner`}</a>{` and, where necessary, targeted error messaging (such as\n`}<a parentName=\"p\" {...{\n        \"href\": \"input-validation\"\n      }}>{`InputValidation`}</a>{`) so that the user can appropriately assess\nand recover from the error.`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Toast} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"variations\"\n    }}>{`Variations`}</h2>\n    <p>{`The primary use case for Toast is success messages.`}</p>\n    <p>{`In some cases, an informational Toast may be used to inform the user of some\nbackground system activity.`}</p>\n    <Playground __position={3} __code={'() => {\\n  return (\\n    <>\\n      <Button\\n        label=\\\"Info Toast\\\"\\n        variation=\\\"learning\\\"\\n        onClick={() =>\\n          showToast({\\n            message: \\'Toasting is underway\\',\\n            variation: \\'info\\',\\n          })\\n        }\\n      />\\n      <Button\\n        label=\\\"Success Toast\\\"\\n        onClick={() =>\\n          showToast({\\n            message: \\'Toast is ready\\',\\n            variation: \\'success\\',\\n          })\\n        }\\n      />\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ComponentStatus,\n      useRef,\n      Button,\n      showToast,\n      Toast,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        return <>\n        <Button label=\"Info Toast\" variation=\"learning\" onClick={() => showToast({\n            message: \"Toasting is underway\",\n            variation: \"info\"\n          })} mdxType=\"Button\" />\n        <Button label=\"Success Toast\" onClick={() => showToast({\n            message: \"Toast is ready\",\n            variation: \"success\"\n          })} mdxType=\"Button\" />\n      </>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}