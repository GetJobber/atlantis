{"expireTime":9007200931831328000,"key":"gatsby-plugin-mdx-entire-payload-3d4c2731cceffef7cb1f2a27747d2165-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":114,"offset":115},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":117},"end":{"line":5,"column":29,"offset":145},"indent":[]}},{"type":"import","value":"import { useState } from \"react\";\nimport { Playground } from \"docz\";","position":{"start":{"line":8,"column":1,"offset":148},"end":{"line":9,"column":35,"offset":216},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Getting Started with React","position":{"start":{"line":11,"column":3,"offset":220},"end":{"line":11,"column":29,"offset":246},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":218},"end":{"line":11,"column":29,"offset":246},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Things to know.","position":{"start":{"line":13,"column":4,"offset":251},"end":{"line":13,"column":19,"offset":266},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":248},"end":{"line":13,"column":19,"offset":266},"indent":[]}},{"type":"jsx","value":"<!--\n- We will reference Typescript in this guide.\n  - https://www.typescriptlang.org/docs/handbook/typescript-in-5-minutes.html\n  - https://create-react-app.dev/docs/getting-started#creating-a-typescript-app\n  - Why Typescript?\n- We will reference functional components. Older class components are still\n  around and you will see them in some guides but we should prefer functional\n  components.\n-->","position":{"start":{"line":15,"column":1,"offset":268},"end":{"line":23,"column":4,"offset":668},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"What is React","position":{"start":{"line":25,"column":4,"offset":673},"end":{"line":25,"column":17,"offset":686},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":670},"end":{"line":25,"column":17,"offset":686},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"At its core React is simply a JavaScript view library layer. It provides us with\na way to define and render view components. It also aids with tracking and\nre-rendering changes to data that the components are representing.","position":{"start":{"line":27,"column":1,"offset":688},"end":{"line":29,"column":67,"offset":910},"indent":[1,1]}}],"position":{"start":{"line":27,"column":1,"offset":688},"end":{"line":29,"column":67,"offset":910},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"What is a Component","position":{"start":{"line":31,"column":4,"offset":915},"end":{"line":31,"column":23,"offset":934},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":912},"end":{"line":31,"column":23,"offset":934},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Much as a function in programing allows you to encapsulate, test and reuse logic\na React Component allows you to encapsulate, test and reuse pieces of your UI.\nIn this way you can think of a React Component as a view function. This even\ncarries into how components are themselves written.","position":{"start":{"line":33,"column":1,"offset":936},"end":{"line":36,"column":52,"offset":1224},"indent":[1,1,1]}}],"position":{"start":{"line":33,"column":1,"offset":936},"end":{"line":36,"column":52,"offset":1224},"indent":[1,1,1]}},{"type":"code","lang":"tsx","meta":null,"value":"interface MessageProps {\n  readonly text: string;\n  readonly yell: boolean;\n}\n\nexport function Message({ text, yell }: MessageProps) {\n  if (yell) {\n    text = text.toLocaleUpperCase();\n  }\n\n  return <p>{text}</p>;\n}","position":{"start":{"line":38,"column":1,"offset":1226},"end":{"line":51,"column":4,"offset":1453},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"tsx","meta":null,"value":"<Message text=\"foo\" yell={false} /> // → <p>foo</p>\n<Message text=\"bar\" yell={true} /> // → <p>BAR</p>","position":{"start":{"line":53,"column":1,"offset":1455},"end":{"line":56,"column":4,"offset":1568},"indent":[1,1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":58,"column":5,"offset":1574},"end":{"line":58,"column":10,"offset":1579},"indent":[]}}],"position":{"start":{"line":58,"column":3,"offset":1572},"end":{"line":58,"column":12,"offset":1581},"indent":[]}}],"position":{"start":{"line":58,"column":3,"offset":1572},"end":{"line":58,"column":12,"offset":1581},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In this example you may have noticed some HTML like code embedded in the\nJavaScript. This is called\n","position":{"start":{"line":60,"column":3,"offset":1586},"end":{"line":62,"column":3,"offset":1690},"indent":[3,3]}},{"type":"link","title":null,"url":"https://reactjs.org/docs/introducing-jsx.html","children":[{"type":"text","value":"JSX ↗︎","position":{"start":{"line":62,"column":4,"offset":1691},"end":{"line":62,"column":10,"offset":1697},"indent":[]}}],"position":{"start":{"line":62,"column":3,"offset":1690},"end":{"line":62,"column":58,"offset":1745},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":62,"column":58,"offset":1745},"end":{"line":62,"column":59,"offset":1746},"indent":[]}}],"position":{"start":{"line":60,"column":3,"offset":1586},"end":{"line":62,"column":59,"offset":1746},"indent":[3,3]}},{"type":"paragraph","children":[{"type":"text","value":"This example also uses a\n","position":{"start":{"line":64,"column":3,"offset":1751},"end":{"line":65,"column":3,"offset":1778},"indent":[3]}},{"type":"link","title":null,"url":"https://www.typescriptlang.org/docs/handbook/interfaces.html","children":[{"type":"text","value":"Typescript interface","position":{"start":{"line":65,"column":4,"offset":1779},"end":{"line":65,"column":24,"offset":1799},"indent":[]}}],"position":{"start":{"line":65,"column":3,"offset":1778},"end":{"line":65,"column":87,"offset":1862},"indent":[]}},{"type":"text","value":"\nto enforce the shape of the component's props.","position":{"start":{"line":65,"column":87,"offset":1862},"end":{"line":66,"column":49,"offset":1911},"indent":[3]}}],"position":{"start":{"line":64,"column":3,"offset":1751},"end":{"line":66,"column":49,"offset":1911},"indent":[3,3]}}],"position":{"start":{"line":58,"column":1,"offset":1570},"end":{"line":66,"column":49,"offset":1911},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"There are a few things going on in the example above. Lets break them down:","position":{"start":{"line":68,"column":1,"offset":1913},"end":{"line":68,"column":76,"offset":1988},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":1913},"end":{"line":68,"column":76,"offset":1988},"indent":[]}},{"type":"table","align":["left","left"],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Artifact","position":{"start":{"line":70,"column":3,"offset":1992},"end":{"line":70,"column":11,"offset":2000},"indent":[]}}],"position":{"start":{"line":70,"column":3,"offset":1992},"end":{"line":70,"column":33,"offset":2022},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Description","position":{"start":{"line":70,"column":36,"offset":2025},"end":{"line":70,"column":47,"offset":2036},"indent":[]}}],"position":{"start":{"line":70,"column":36,"offset":2025},"end":{"line":70,"column":283,"offset":2272},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":1990},"end":{"line":70,"column":285,"offset":2274},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"interface MessageProps","position":{"start":{"line":72,"column":3,"offset":2562},"end":{"line":72,"column":27,"offset":2586},"indent":[]}}],"position":{"start":{"line":72,"column":3,"offset":2562},"end":{"line":72,"column":33,"offset":2592},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"The ","position":{"start":{"line":72,"column":36,"offset":2595},"end":{"line":72,"column":40,"offset":2599},"indent":[]}},{"type":"inlineCode","value":"props","position":{"start":{"line":72,"column":40,"offset":2599},"end":{"line":72,"column":47,"offset":2606},"indent":[]}},{"type":"text","value":" define options that a component will accept. In the examples above you ca see how calling the component with different props results in different output.","position":{"start":{"line":72,"column":47,"offset":2606},"end":{"line":72,"column":201,"offset":2760},"indent":[]}}],"position":{"start":{"line":72,"column":36,"offset":2595},"end":{"line":72,"column":283,"offset":2842},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":2560},"end":{"line":72,"column":285,"offset":2844},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"export function Message","position":{"start":{"line":73,"column":3,"offset":2847},"end":{"line":73,"column":28,"offset":2872},"indent":[]}}],"position":{"start":{"line":73,"column":3,"offset":2847},"end":{"line":73,"column":33,"offset":2877},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"This function is the Message component. The ","position":{"start":{"line":73,"column":36,"offset":2880},"end":{"line":73,"column":80,"offset":2924},"indent":[]}},{"type":"inlineCode","value":"export","position":{"start":{"line":73,"column":80,"offset":2924},"end":{"line":73,"column":88,"offset":2932},"indent":[]}},{"type":"text","value":" here means that we can import the component into another file. If you are writing a local component you don't need the ","position":{"start":{"line":73,"column":88,"offset":2932},"end":{"line":73,"column":208,"offset":3052},"indent":[]}},{"type":"inlineCode","value":"export","position":{"start":{"line":73,"column":208,"offset":3052},"end":{"line":73,"column":216,"offset":3060},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":73,"column":216,"offset":3060},"end":{"line":73,"column":217,"offset":3061},"indent":[]}}],"position":{"start":{"line":73,"column":36,"offset":2880},"end":{"line":73,"column":283,"offset":3127},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":2845},"end":{"line":73,"column":285,"offset":3129},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"{ text, yell }: MessageProps","position":{"start":{"line":74,"column":3,"offset":3132},"end":{"line":74,"column":33,"offset":3162},"indent":[]}}],"position":{"start":{"line":74,"column":3,"offset":3132},"end":{"line":74,"column":33,"offset":3162},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"There are two parts to this. Starting on the right ","position":{"start":{"line":74,"column":36,"offset":3165},"end":{"line":74,"column":87,"offset":3216},"indent":[]}},{"type":"inlineCode","value":"MessageProps","position":{"start":{"line":74,"column":87,"offset":3216},"end":{"line":74,"column":101,"offset":3230},"indent":[]}},{"type":"text","value":" indicates that this funciton takes a parameter of type ","position":{"start":{"line":74,"column":101,"offset":3230},"end":{"line":74,"column":157,"offset":3286},"indent":[]}},{"type":"inlineCode","value":"MessageProps","position":{"start":{"line":74,"column":157,"offset":3286},"end":{"line":74,"column":171,"offset":3300},"indent":[]}},{"type":"text","value":". On the left the ","position":{"start":{"line":74,"column":171,"offset":3300},"end":{"line":74,"column":189,"offset":3318},"indent":[]}},{"type":"inlineCode","value":"{ text, yell }","position":{"start":{"line":74,"column":189,"offset":3318},"end":{"line":74,"column":205,"offset":3334},"indent":[]}},{"type":"text","value":" unpacks the parameter into local variables.","position":{"start":{"line":74,"column":205,"offset":3334},"end":{"line":74,"column":249,"offset":3378},"indent":[]}}],"position":{"start":{"line":74,"column":36,"offset":3165},"end":{"line":74,"column":283,"offset":3412},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":3130},"end":{"line":74,"column":285,"offset":3414},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"return <p>{text}</p>","position":{"start":{"line":75,"column":3,"offset":3417},"end":{"line":75,"column":25,"offset":3439},"indent":[]}}],"position":{"start":{"line":75,"column":3,"offset":3417},"end":{"line":75,"column":33,"offset":3447},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Every React component will return an ","position":{"start":{"line":75,"column":36,"offset":3450},"end":{"line":75,"column":73,"offset":3487},"indent":[]}},{"type":"link","title":null,"url":"https://reactjs.org/docs/rendering-elements.html","children":[{"type":"text","value":"element","position":{"start":{"line":75,"column":74,"offset":3488},"end":{"line":75,"column":81,"offset":3495},"indent":[]}}],"position":{"start":{"line":75,"column":73,"offset":3487},"end":{"line":75,"column":132,"offset":3546},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":75,"column":132,"offset":3546},"end":{"line":75,"column":136,"offset":3550},"indent":[]}},{"type":"link","title":null,"url":"https://reactjs.org/docs/fragments.html","children":[{"type":"text","value":"fragment","position":{"start":{"line":75,"column":137,"offset":3551},"end":{"line":75,"column":145,"offset":3559},"indent":[]}}],"position":{"start":{"line":75,"column":136,"offset":3550},"end":{"line":75,"column":187,"offset":3601},"indent":[]}},{"type":"text","value":". (Note the ","position":{"start":{"line":75,"column":187,"offset":3601},"end":{"line":75,"column":199,"offset":3613},"indent":[]}},{"type":"link","title":null,"url":"https://reactjs.org/docs/fragments.html#short-syntax","children":[{"type":"text","value":"fragment short hand syntax","position":{"start":{"line":75,"column":200,"offset":3614},"end":{"line":75,"column":226,"offset":3640},"indent":[]}}],"position":{"start":{"line":75,"column":199,"offset":3613},"end":{"line":75,"column":281,"offset":3695},"indent":[]}},{"type":"text","value":".)","position":{"start":{"line":75,"column":281,"offset":3695},"end":{"line":75,"column":283,"offset":3697},"indent":[]}}],"position":{"start":{"line":75,"column":36,"offset":3450},"end":{"line":75,"column":283,"offset":3697},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":3415},"end":{"line":75,"column":285,"offset":3699},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":1990},"end":{"line":75,"column":285,"offset":3699},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"It's Components All the Way Down","position":{"start":{"line":77,"column":4,"offset":3704},"end":{"line":77,"column":36,"offset":3736},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":3701},"end":{"line":77,"column":36,"offset":3736},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In React everything is a component. A typical page will consist of one top level\ncomponent representing the main view. Then within that page you will break down\nsmaller components. Brad Frost covers this break down very well with\n","position":{"start":{"line":79,"column":1,"offset":3738},"end":{"line":82,"column":1,"offset":3968},"indent":[1,1,1]}},{"type":"link","title":null,"url":"http://bradfrost.com/blog/post/atomic-web-design/","children":[{"type":"text","value":"Atomic Design ↗","position":{"start":{"line":82,"column":2,"offset":3969},"end":{"line":82,"column":17,"offset":3984},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":3968},"end":{"line":82,"column":69,"offset":4036},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":82,"column":69,"offset":4036},"end":{"line":82,"column":70,"offset":4037},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":3738},"end":{"line":82,"column":70,"offset":4037},"indent":[1,1,1]}},{"type":"jsx","value":"<img\n  src=\"http://bradfrost.com/wp-content/uploads/2013/06/atomic-design.png\"\n  width=\"100%\"\n/>","position":{"start":{"line":84,"column":1,"offset":4039},"end":{"line":87,"column":3,"offset":4135},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"When you are writing a front end using React each of the levels he talks about\nare represented by components functions.","position":{"start":{"line":89,"column":1,"offset":4137},"end":{"line":90,"column":41,"offset":4256},"indent":[1]}}],"position":{"start":{"line":89,"column":1,"offset":4137},"end":{"line":90,"column":41,"offset":4256},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Composing Components","position":{"start":{"line":92,"column":4,"offset":4261},"end":{"line":92,"column":24,"offset":4281},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":4258},"end":{"line":92,"column":24,"offset":4281},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As mentioned above a lot of the power of React comes from being able to build\ncomponents out of other components. Lets take a look at an example on how to do\nthat.","position":{"start":{"line":94,"column":1,"offset":4283},"end":{"line":96,"column":6,"offset":4446},"indent":[1,1]}}],"position":{"start":{"line":94,"column":1,"offset":4283},"end":{"line":96,"column":6,"offset":4446},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For this example we are going to build a card that allows you to enter a topic\nand then search for a related gif.","position":{"start":{"line":98,"column":1,"offset":4448},"end":{"line":99,"column":35,"offset":4561},"indent":[1]}}],"position":{"start":{"line":98,"column":1,"offset":4448},"end":{"line":99,"column":35,"offset":4561},"indent":[1]}},{"type":"import","value":"import { Card } from \"@jobber/components/Card\";\nimport { Content } from \"@jobber/components/Content\";\nimport { Button } from \"@jobber/components/Button\";\nimport { InputText } from \"@jobber/components/InputText\";\nimport { loadingGIF, getGIF } from \"./getGIF\";","position":{"start":{"line":101,"column":1,"offset":4563},"end":{"line":105,"column":47,"offset":4821},"indent":[1,1,1,1]}},{"type":"jsx","value":"<Playground>\n  {() => {\n    const [topic, setTopic] = useState();\n    const [url, setURL] = useState();\n    return (\n      <Card title=\"Gif Gift\">\n        <Content>\n          <InputText value={topic} onChange={setTopic} placeholder=\"Topic\" />\n          <Button label=\"Search\" fullWidth={true} onClick={gifSearch} />\n          <center>{url && <img src={url} />}</center>\n        </Content>\n      </Card>\n    );\n    async function gifSearch() {\n      setURL(loadingGIF);\n      setURL(await getGIF(topic));\n    }\n  }}\n</Playground>","position":{"start":{"line":107,"column":1,"offset":4823},"end":{"line":125,"column":14,"offset":5351},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":127,"column":5,"offset":5357},"end":{"line":127,"column":10,"offset":5362},"indent":[]}}],"position":{"start":{"line":127,"column":3,"offset":5355},"end":{"line":127,"column":12,"offset":5364},"indent":[]}}],"position":{"start":{"line":127,"column":3,"offset":5355},"end":{"line":127,"column":12,"offset":5364},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This example assumes the presence of a constant ","position":{"start":{"line":129,"column":3,"offset":5369},"end":{"line":129,"column":51,"offset":5417},"indent":[]}},{"type":"inlineCode","value":"const loadingGIF: string;","position":{"start":{"line":129,"column":51,"offset":5417},"end":{"line":129,"column":78,"offset":5444},"indent":[]}},{"type":"text","value":"\nwhich will contain the URL to a loading gif as well as a function\n","position":{"start":{"line":129,"column":78,"offset":5444},"end":{"line":131,"column":3,"offset":5515},"indent":[3,3]}},{"type":"inlineCode","value":"function getGIF(topic: string): Promise<string>;","position":{"start":{"line":131,"column":3,"offset":5515},"end":{"line":131,"column":53,"offset":5565},"indent":[]}},{"type":"text","value":" that will return a promise\nresolving to a url.","position":{"start":{"line":131,"column":53,"offset":5565},"end":{"line":132,"column":22,"offset":5614},"indent":[3]}}],"position":{"start":{"line":129,"column":3,"offset":5369},"end":{"line":132,"column":22,"offset":5614},"indent":[3,3,3]}}],"position":{"start":{"line":127,"column":1,"offset":5353},"end":{"line":132,"column":22,"offset":5614},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Breaking it Down","position":{"start":{"line":134,"column":5,"offset":5620},"end":{"line":134,"column":21,"offset":5636},"indent":[]}}],"position":{"start":{"line":134,"column":1,"offset":5616},"end":{"line":134,"column":21,"offset":5636},"indent":[]}},{"type":"code","lang":"tsx","meta":null,"value":"const [topic, setTopic] = useState();\nconst [url, setURL] = useState();","position":{"start":{"line":136,"column":1,"offset":5638},"end":{"line":139,"column":4,"offset":5720},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The example starts with\n","position":{"start":{"line":141,"column":1,"offset":5722},"end":{"line":142,"column":1,"offset":5746},"indent":[1]}},{"type":"link","title":null,"url":"https://reactjs.org/docs/hooks-overview.html#state-hook","children":[{"type":"text","value":"defining two stateful variables using the ","position":{"start":{"line":142,"column":2,"offset":5747},"end":{"line":142,"column":44,"offset":5789},"indent":[]}},{"type":"inlineCode","value":"useState","position":{"start":{"line":142,"column":44,"offset":5789},"end":{"line":142,"column":54,"offset":5799},"indent":[]}},{"type":"text","value":" hook ↗","position":{"start":{"line":142,"column":54,"offset":5799},"end":{"line":142,"column":61,"offset":5806},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":5746},"end":{"line":142,"column":119,"offset":5864},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":142,"column":119,"offset":5864},"end":{"line":143,"column":1,"offset":5866},"indent":[1]}},{"type":"inlineCode","value":"useState","position":{"start":{"line":143,"column":1,"offset":5866},"end":{"line":143,"column":11,"offset":5876},"indent":[]}},{"type":"text","value":" returns a pair. The first of which is the current value and the\nsecond is a setter that allows you to update the value. For this component we\nneed one stateful value to represent the content of the input and another to\nstore the result of the ","position":{"start":{"line":143,"column":11,"offset":5876},"end":{"line":146,"column":25,"offset":6120},"indent":[1,1,1]}},{"type":"inlineCode","value":"gifSearch","position":{"start":{"line":146,"column":25,"offset":6120},"end":{"line":146,"column":36,"offset":6131},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":146,"column":36,"offset":6131},"end":{"line":146,"column":37,"offset":6132},"indent":[]}}],"position":{"start":{"line":141,"column":1,"offset":5722},"end":{"line":146,"column":37,"offset":6132},"indent":[1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":148,"column":1,"offset":6134},"end":{"line":148,"column":4,"offset":6137},"indent":[]}},{"type":"code","lang":"tsx","meta":null,"value":"return (\n  <Card title=\"Gif Gift\">\n...","position":{"start":{"line":150,"column":1,"offset":6139},"end":{"line":154,"column":4,"offset":6188},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The next section is the return value which will return the TSX defining our\ncomponent. In here you can see that our ","position":{"start":{"line":156,"column":1,"offset":6190},"end":{"line":157,"column":41,"offset":6306},"indent":[1]}},{"type":"inlineCode","value":"GifGift","position":{"start":{"line":157,"column":41,"offset":6306},"end":{"line":157,"column":50,"offset":6315},"indent":[]}},{"type":"text","value":" component is composed of the\nfollowing other react components:","position":{"start":{"line":157,"column":50,"offset":6315},"end":{"line":158,"column":34,"offset":6378},"indent":[1]}}],"position":{"start":{"line":156,"column":1,"offset":6190},"end":{"line":158,"column":34,"offset":6378},"indent":[1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Card","position":{"start":{"line":160,"column":3,"offset":6382},"end":{"line":160,"column":9,"offset":6388},"indent":[]}},{"type":"text","value":" — ","position":{"start":{"line":160,"column":9,"offset":6388},"end":{"line":160,"column":12,"offset":6391},"indent":[]}},{"type":"link","title":null,"url":"/components/card","children":[{"type":"text","value":"Docs","position":{"start":{"line":160,"column":13,"offset":6392},"end":{"line":160,"column":17,"offset":6396},"indent":[]}}],"position":{"start":{"line":160,"column":12,"offset":6391},"end":{"line":160,"column":36,"offset":6415},"indent":[]}}],"position":{"start":{"line":160,"column":3,"offset":6382},"end":{"line":160,"column":36,"offset":6415},"indent":[]}}],"position":{"start":{"line":160,"column":1,"offset":6380},"end":{"line":160,"column":36,"offset":6415},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Content","position":{"start":{"line":161,"column":3,"offset":6418},"end":{"line":161,"column":12,"offset":6427},"indent":[]}},{"type":"text","value":" — ","position":{"start":{"line":161,"column":12,"offset":6427},"end":{"line":161,"column":15,"offset":6430},"indent":[]}},{"type":"link","title":null,"url":"/components/content","children":[{"type":"text","value":"Docs","position":{"start":{"line":161,"column":16,"offset":6431},"end":{"line":161,"column":20,"offset":6435},"indent":[]}}],"position":{"start":{"line":161,"column":15,"offset":6430},"end":{"line":161,"column":42,"offset":6457},"indent":[]}}],"position":{"start":{"line":161,"column":3,"offset":6418},"end":{"line":161,"column":42,"offset":6457},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":6416},"end":{"line":161,"column":42,"offset":6457},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Button","position":{"start":{"line":162,"column":3,"offset":6460},"end":{"line":162,"column":11,"offset":6468},"indent":[]}},{"type":"text","value":" — ","position":{"start":{"line":162,"column":11,"offset":6468},"end":{"line":162,"column":14,"offset":6471},"indent":[]}},{"type":"link","title":null,"url":"/components/button","children":[{"type":"text","value":"Docs","position":{"start":{"line":162,"column":15,"offset":6472},"end":{"line":162,"column":19,"offset":6476},"indent":[]}}],"position":{"start":{"line":162,"column":14,"offset":6471},"end":{"line":162,"column":40,"offset":6497},"indent":[]}}],"position":{"start":{"line":162,"column":3,"offset":6460},"end":{"line":162,"column":40,"offset":6497},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":6458},"end":{"line":162,"column":40,"offset":6497},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"InputText","position":{"start":{"line":163,"column":3,"offset":6500},"end":{"line":163,"column":14,"offset":6511},"indent":[]}},{"type":"text","value":" — ","position":{"start":{"line":163,"column":14,"offset":6511},"end":{"line":163,"column":17,"offset":6514},"indent":[]}},{"type":"link","title":null,"url":"/components/input-text","children":[{"type":"text","value":"Docs","position":{"start":{"line":163,"column":18,"offset":6515},"end":{"line":163,"column":22,"offset":6519},"indent":[]}}],"position":{"start":{"line":163,"column":17,"offset":6514},"end":{"line":163,"column":47,"offset":6544},"indent":[]}}],"position":{"start":{"line":163,"column":3,"offset":6500},"end":{"line":163,"column":47,"offset":6544},"indent":[]}}],"position":{"start":{"line":163,"column":1,"offset":6498},"end":{"line":163,"column":47,"offset":6544},"indent":[]}}],"position":{"start":{"line":160,"column":1,"offset":6380},"end":{"line":163,"column":47,"offset":6544},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you look at the docs for the above components you can see how the different\nprops they expose allow us to customize their behaviour given the needs of our\n","position":{"start":{"line":165,"column":1,"offset":6546},"end":{"line":167,"column":1,"offset":6704},"indent":[1,1]}},{"type":"inlineCode","value":"GifGift","position":{"start":{"line":167,"column":1,"offset":6704},"end":{"line":167,"column":10,"offset":6713},"indent":[]}},{"type":"text","value":" component.","position":{"start":{"line":167,"column":10,"offset":6713},"end":{"line":167,"column":21,"offset":6724},"indent":[]}}],"position":{"start":{"line":165,"column":1,"offset":6546},"end":{"line":167,"column":21,"offset":6724},"indent":[1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":169,"column":5,"offset":6730},"end":{"line":169,"column":10,"offset":6735},"indent":[]}}],"position":{"start":{"line":169,"column":3,"offset":6728},"end":{"line":169,"column":12,"offset":6737},"indent":[]}}],"position":{"start":{"line":169,"column":3,"offset":6728},"end":{"line":169,"column":12,"offset":6737},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Normally when you use a component you would need to import it. The docs for\neach component start with the import path for that component.","position":{"start":{"line":171,"column":3,"offset":6742},"end":{"line":172,"column":64,"offset":6881},"indent":[3]}}],"position":{"start":{"line":171,"column":3,"offset":6742},"end":{"line":172,"column":64,"offset":6881},"indent":[3]}},{"type":"code","lang":"ts","meta":null,"value":"import { Button } from \"@jobber/components/Button\";","position":{"start":{"line":174,"column":3,"offset":6886},"end":{"line":176,"column":6,"offset":6951},"indent":[3,3]}},{"type":"paragraph","children":[{"type":"text","value":"This means for the above example we would need to import the following","position":{"start":{"line":178,"column":3,"offset":6956},"end":{"line":178,"column":73,"offset":7026},"indent":[]}}],"position":{"start":{"line":178,"column":3,"offset":6956},"end":{"line":178,"column":73,"offset":7026},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"import { Card } from \"@jobber/components/Card\";\nimport { Content } from \"@jobber/components/Content\";\nimport { Button } from \"@jobber/components/Button\";\nimport { InputText } from \"@jobber/components/InputText\";","position":{"start":{"line":180,"column":3,"offset":7031},"end":{"line":185,"column":6,"offset":7262},"indent":[3,3,3,3,3]}}],"position":{"start":{"line":169,"column":1,"offset":6726},"end":{"line":185,"column":6,"offset":7262},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":187,"column":1,"offset":7264},"end":{"line":187,"column":4,"offset":7267},"indent":[]}},{"type":"code","lang":"tsx","meta":null,"value":"async function gifSearch() {\n  setURL(loadingGIF);\n  setURL(await getGIF(topic));\n}","position":{"start":{"line":189,"column":1,"offset":7269},"end":{"line":194,"column":4,"offset":7363},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The final part of our example defines the custom actions needed to power our\ncomponent. In this case the action when the user clicks on the ","position":{"start":{"line":196,"column":1,"offset":7365},"end":{"line":197,"column":64,"offset":7505},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Search","position":{"start":{"line":197,"column":66,"offset":7507},"end":{"line":197,"column":72,"offset":7513},"indent":[]}}],"position":{"start":{"line":197,"column":64,"offset":7505},"end":{"line":197,"column":74,"offset":7515},"indent":[]}},{"type":"text","value":"\nbutton. Here we call the ","position":{"start":{"line":197,"column":74,"offset":7515},"end":{"line":198,"column":26,"offset":7541},"indent":[1]}},{"type":"inlineCode","value":"setURL","position":{"start":{"line":198,"column":26,"offset":7541},"end":{"line":198,"column":34,"offset":7549},"indent":[]}},{"type":"text","value":" setter to show the ","position":{"start":{"line":198,"column":34,"offset":7549},"end":{"line":198,"column":54,"offset":7569},"indent":[]}},{"type":"inlineCode","value":"loadingGIF","position":{"start":{"line":198,"column":54,"offset":7569},"end":{"line":198,"column":66,"offset":7581},"indent":[]}},{"type":"text","value":". Then, we call\n","position":{"start":{"line":198,"column":66,"offset":7581},"end":{"line":199,"column":1,"offset":7597},"indent":[1]}},{"type":"inlineCode","value":"setURL","position":{"start":{"line":199,"column":1,"offset":7597},"end":{"line":199,"column":9,"offset":7605},"indent":[]}},{"type":"text","value":" awaiting the async response of ","position":{"start":{"line":199,"column":9,"offset":7605},"end":{"line":199,"column":41,"offset":7637},"indent":[]}},{"type":"inlineCode","value":"getGIF","position":{"start":{"line":199,"column":41,"offset":7637},"end":{"line":199,"column":49,"offset":7645},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":199,"column":49,"offset":7645},"end":{"line":199,"column":50,"offset":7646},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":7365},"end":{"line":199,"column":50,"offset":7646},"indent":[1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":202,"column":1,"offset":7649},"end":{"line":202,"column":31,"offset":7679},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":202,"column":31,"offset":7679}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { useState } from \"react\";\nimport { Playground } from \"docz\";\nimport { Card } from \"@jobber/components/Card\";\nimport { Content } from \"@jobber/components/Content\";\nimport { Button } from \"@jobber/components/Button\";\nimport { InputText } from \"@jobber/components/InputText\";\nimport { loadingGIF, getGIF } from \"./getGIF\";\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"getting-started-with-react\"\n    }}>{`Getting Started with React`}</h1>\n    <h2 {...{\n      \"id\": \"things-to-know\"\n    }}>{`Things to know.`}</h2>\n    {\n      /*\n      - We will reference Typescript in this guide.\n       - https://www.typescriptlang.org/docs/handbook/typescript-in-5-minutes.html\n       - https://create-react-app.dev/docs/getting-started#creating-a-typescript-app\n       - Why Typescript?\n      - We will reference functional components. Older class components are still\n       around and you will see them in some guides but we should prefer functional\n       components.\n      */\n    }\n    <h2 {...{\n      \"id\": \"what-is-react\"\n    }}>{`What is React`}</h2>\n    <p>{`At its core React is simply a JavaScript view library layer. It provides us with\na way to define and render view components. It also aids with tracking and\nre-rendering changes to data that the components are representing.`}</p>\n    <h2 {...{\n      \"id\": \"what-is-a-component\"\n    }}>{`What is a Component`}</h2>\n    <p>{`Much as a function in programing allows you to encapsulate, test and reuse logic\na React Component allows you to encapsulate, test and reuse pieces of your UI.\nIn this way you can think of a React Component as a view function. This even\ncarries into how components are themselves written.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`interface MessageProps {\n  readonly text: string;\n  readonly yell: boolean;\n}\n\nexport function Message({ text, yell }: MessageProps) {\n  if (yell) {\n    text = text.toLocaleUpperCase();\n  }\n\n  return <p>{text}</p>;\n}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<Message text=\"foo\" yell={false} /> // → <p>foo</p>\n<Message text=\"bar\" yell={true} /> // → <p>BAR</p>\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Note:`}</strong></p>\n      <p parentName=\"blockquote\">{`In this example you may have noticed some HTML like code embedded in the\nJavaScript. This is called\n`}<a parentName=\"p\" {...{\n          \"href\": \"https://reactjs.org/docs/introducing-jsx.html\"\n        }}>{`JSX ↗︎`}</a>{`.`}</p>\n      <p parentName=\"blockquote\">{`This example also uses a\n`}<a parentName=\"p\" {...{\n          \"href\": \"https://www.typescriptlang.org/docs/handbook/interfaces.html\"\n        }}>{`Typescript interface`}</a>{`\nto enforce the shape of the component's props.`}</p>\n    </blockquote>\n    <p>{`There are a few things going on in the example above. Lets break them down:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Artifact`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`interface MessageProps`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`The `}<inlineCode parentName=\"td\">{`props`}</inlineCode>{` define options that a component will accept. In the examples above you ca see how calling the component with different props results in different output.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`export function Message`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`This function is the Message component. The `}<inlineCode parentName=\"td\">{`export`}</inlineCode>{` here means that we can import the component into another file. If you are writing a local component you don't need the `}<inlineCode parentName=\"td\">{`export`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`{ text, yell }: MessageProps`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`There are two parts to this. Starting on the right `}<inlineCode parentName=\"td\">{`MessageProps`}</inlineCode>{` indicates that this funciton takes a parameter of type `}<inlineCode parentName=\"td\">{`MessageProps`}</inlineCode>{`. On the left the `}<inlineCode parentName=\"td\">{`{ text, yell }`}</inlineCode>{` unpacks the parameter into local variables.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`return <p>{text}</p>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Every React component will return an `}<a parentName=\"td\" {...{\n              \"href\": \"https://reactjs.org/docs/rendering-elements.html\"\n            }}>{`element`}</a>{` or `}<a parentName=\"td\" {...{\n              \"href\": \"https://reactjs.org/docs/fragments.html\"\n            }}>{`fragment`}</a>{`. (Note the `}<a parentName=\"td\" {...{\n              \"href\": \"https://reactjs.org/docs/fragments.html#short-syntax\"\n            }}>{`fragment short hand syntax`}</a>{`.)`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"its-components-all-the-way-down\"\n    }}>{`It's Components All the Way Down`}</h2>\n    <p>{`In React everything is a component. A typical page will consist of one top level\ncomponent representing the main view. Then within that page you will break down\nsmaller components. Brad Frost covers this break down very well with\n`}<a parentName=\"p\" {...{\n        \"href\": \"http://bradfrost.com/blog/post/atomic-web-design/\"\n      }}>{`Atomic Design ↗`}</a>{`.`}</p>\n    <img src=\"http://bradfrost.com/wp-content/uploads/2013/06/atomic-design.png\" width=\"100%\" />\n    <p>{`When you are writing a front end using React each of the levels he talks about\nare represented by components functions.`}</p>\n    <h2 {...{\n      \"id\": \"composing-components\"\n    }}>{`Composing Components`}</h2>\n    <p>{`As mentioned above a lot of the power of React comes from being able to build\ncomponents out of other components. Lets take a look at an example on how to do\nthat.`}</p>\n    <p>{`For this example we are going to build a card that allows you to enter a topic\nand then search for a related gif.`}</p>\n\n    <Playground __position={1} __code={'() => {\\n  const [topic, setTopic] = useState()\\n  const [url, setURL] = useState()\\n  return (\\n    <Card title=\\\"Gif Gift\\\">\\n      <Content>\\n        <InputText value={topic} onChange={setTopic} placeholder=\\\"Topic\\\" />\\n        <Button label=\\\"Search\\\" fullWidth={true} onClick={gifSearch} />\\n        <center>{url && <img src={url} />}</center>\\n      </Content>\\n    </Card>\\n  )\\n  async function gifSearch() {\\n    setURL(loadingGIF)\\n    setURL(await getGIF(topic))\\n  }\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Playground,\n      Card,\n      Content,\n      Button,\n      InputText,\n      loadingGIF,\n      getGIF,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [topic, setTopic] = useState();\n        const [url, setURL] = useState();\n        return <Card title=\"Gif Gift\" mdxType=\"Card\">\n        <Content mdxType=\"Content\">\n          <InputText value={topic} onChange={setTopic} placeholder=\"Topic\" mdxType=\"InputText\" />\n          <Button label=\"Search\" fullWidth={true} onClick={gifSearch} mdxType=\"Button\" />\n          <center>{url && <img src={url} />}</center>\n        </Content>\n      </Card>;\n\n        async function gifSearch() {\n          setURL(loadingGIF);\n          setURL(await getGIF(topic));\n        }\n      }}\n    </Playground>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Note:`}</strong></p>\n      <p parentName=\"blockquote\">{`This example assumes the presence of a constant `}<inlineCode parentName=\"p\">{`const loadingGIF: string;`}</inlineCode>{`\nwhich will contain the URL to a loading gif as well as a function\n`}<inlineCode parentName=\"p\">{`function getGIF(topic: string): Promise<string>;`}</inlineCode>{` that will return a promise\nresolving to a url.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"breaking-it-down\"\n    }}>{`Breaking it Down`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const [topic, setTopic] = useState();\nconst [url, setURL] = useState();\n`}</code></pre>\n    <p>{`The example starts with\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://reactjs.org/docs/hooks-overview.html#state-hook\"\n      }}>{`defining two stateful variables using the `}<inlineCode parentName=\"a\">{`useState`}</inlineCode>{` hook ↗`}</a>{`.\n`}<inlineCode parentName=\"p\">{`useState`}</inlineCode>{` returns a pair. The first of which is the current value and the\nsecond is a setter that allows you to update the value. For this component we\nneed one stateful value to represent the content of the input and another to\nstore the result of the `}<inlineCode parentName=\"p\">{`gifSearch`}</inlineCode>{`.`}</p>\n    <hr></hr>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`return (\n  <Card title=\"Gif Gift\">\n...\n`}</code></pre>\n    <p>{`The next section is the return value which will return the TSX defining our\ncomponent. In here you can see that our `}<inlineCode parentName=\"p\">{`GifGift`}</inlineCode>{` component is composed of the\nfollowing other react components:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Card`}</inlineCode>{` — `}<a parentName=\"li\" {...{\n          \"href\": \"/components/card\"\n        }}>{`Docs`}</a></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Content`}</inlineCode>{` — `}<a parentName=\"li\" {...{\n          \"href\": \"/components/content\"\n        }}>{`Docs`}</a></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Button`}</inlineCode>{` — `}<a parentName=\"li\" {...{\n          \"href\": \"/components/button\"\n        }}>{`Docs`}</a></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`InputText`}</inlineCode>{` — `}<a parentName=\"li\" {...{\n          \"href\": \"/components/input-text\"\n        }}>{`Docs`}</a></li>\n    </ul>\n    <p>{`If you look at the docs for the above components you can see how the different\nprops they expose allow us to customize their behaviour given the needs of our\n`}<inlineCode parentName=\"p\">{`GifGift`}</inlineCode>{` component.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Note:`}</strong></p>\n      <p parentName=\"blockquote\">{`Normally when you use a component you would need to import it. The docs for\neach component start with the import path for that component.`}</p>\n      <pre parentName=\"blockquote\"><code parentName=\"pre\" {...{\n          \"className\": \"language-ts\"\n        }}>{`import { Button } from \"@jobber/components/Button\";\n`}</code></pre>\n      <p parentName=\"blockquote\">{`This means for the above example we would need to import the following`}</p>\n      <pre parentName=\"blockquote\"><code parentName=\"pre\" {...{\n          \"className\": \"language-ts\"\n        }}>{`import { Card } from \"@jobber/components/Card\";\nimport { Content } from \"@jobber/components/Content\";\nimport { Button } from \"@jobber/components/Button\";\nimport { InputText } from \"@jobber/components/InputText\";\n`}</code></pre>\n    </blockquote>\n    <hr></hr>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`async function gifSearch() {\n  setURL(loadingGIF);\n  setURL(await getGIF(topic));\n}\n`}</code></pre>\n    <p>{`The final part of our example defines the custom actions needed to power our\ncomponent. In this case the action when the user clicks on the `}<strong parentName=\"p\">{`Search`}</strong>{`\nbutton. Here we call the `}<inlineCode parentName=\"p\">{`setURL`}</inlineCode>{` setter to show the `}<inlineCode parentName=\"p\">{`loadingGIF`}</inlineCode>{`. Then, we call\n`}<inlineCode parentName=\"p\">{`setURL`}</inlineCode>{` awaiting the async response of `}<inlineCode parentName=\"p\">{`getGIF`}</inlineCode>{`.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}