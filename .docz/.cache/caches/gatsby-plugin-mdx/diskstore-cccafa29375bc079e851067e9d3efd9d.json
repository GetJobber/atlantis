{"expireTime":9007200931831330000,"key":"gatsby-plugin-mdx-entire-payload-d987179db86ee73c07e8720f0cfea53d-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":114,"offset":115},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":117},"end":{"line":5,"column":29,"offset":145},"indent":[]}},{"type":"import","value":"import { ArgsTable, Canvas, Meta, Story } from \"@storybook/addon-docs\";\nimport { useState } from \"react\";\nimport { Banner } from \"@jobber/components/Banner\";\nimport { Text } from \"@jobber/components/Text\";\nimport { InputText } from \"@jobber/components/InputText\";\nimport { InputValidation } from \"@jobber/components/InputValidation\";","position":{"start":{"line":7,"column":1,"offset":147},"end":{"line":12,"column":70,"offset":480},"indent":[1,1,1,1,1]}},{"type":"jsx","value":"<Meta title=\"Components/InputValidation\" component={InputValidation} />","position":{"start":{"line":14,"column":1,"offset":482},"end":{"line":14,"column":72,"offset":553},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Input Validation","position":{"start":{"line":16,"column":3,"offset":557},"end":{"line":16,"column":19,"offset":573},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":555},"end":{"line":16,"column":19,"offset":573},"indent":[]}},{"type":"jsx","value":"<Banner type=\"warning\" dismissible={false}>\n  90% of validation for inputs will be handled out-of-the-box by the{\" \"}\n  <a href=\"/components/input-text/#validation-message\">\n    input component's validation\n  </a>\n  . Check that you cannot use the built-in validation before using this component.\n</Banner>","position":{"start":{"line":18,"column":1,"offset":575},"end":{"line":24,"column":10,"offset":881},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"InputValidation","position":{"start":{"line":26,"column":1,"offset":883},"end":{"line":26,"column":18,"offset":900},"indent":[]}},{"type":"text","value":" allows you to show the validation messages in cases where an\n","position":{"start":{"line":26,"column":18,"offset":900},"end":{"line":27,"column":1,"offset":962},"indent":[1]}},{"type":"link","title":null,"url":"/components/input-text/#validation-message","children":[{"type":"text","value":"input's built-in validation","position":{"start":{"line":27,"column":2,"offset":963},"end":{"line":27,"column":29,"offset":990},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":962},"end":{"line":27,"column":74,"offset":1035},"indent":[]}},{"type":"text","value":" is not\navailable, such as in ","position":{"start":{"line":27,"column":74,"offset":1035},"end":{"line":28,"column":23,"offset":1065},"indent":[1]}},{"type":"inlineCode","value":"inline","position":{"start":{"line":28,"column":23,"offset":1065},"end":{"line":28,"column":31,"offset":1073},"indent":[]}},{"type":"text","value":" usage.","position":{"start":{"line":28,"column":31,"offset":1073},"end":{"line":28,"column":38,"offset":1080},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":883},"end":{"line":28,"column":38,"offset":1080},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For more information about ","position":{"start":{"line":30,"column":1,"offset":1082},"end":{"line":30,"column":28,"offset":1109},"indent":[]}},{"type":"inlineCode","value":"validations","position":{"start":{"line":30,"column":28,"offset":1109},"end":{"line":30,"column":41,"offset":1122},"indent":[]}},{"type":"text","value":" using any of the ","position":{"start":{"line":30,"column":41,"offset":1122},"end":{"line":30,"column":59,"offset":1140},"indent":[]}},{"type":"inlineCode","value":"Input","position":{"start":{"line":30,"column":59,"offset":1140},"end":{"line":30,"column":66,"offset":1147},"indent":[]}},{"type":"text","value":" components,\nsee the ","position":{"start":{"line":30,"column":66,"offset":1147},"end":{"line":31,"column":9,"offset":1168},"indent":[1]}},{"type":"link","title":null,"url":"/components/input-text/#validation-message","children":[{"type":"text","value":"InputText","position":{"start":{"line":31,"column":10,"offset":1169},"end":{"line":31,"column":19,"offset":1178},"indent":[]}}],"position":{"start":{"line":31,"column":9,"offset":1168},"end":{"line":31,"column":64,"offset":1223},"indent":[]}},{"type":"text","value":" documentation.","position":{"start":{"line":31,"column":64,"offset":1223},"end":{"line":31,"column":79,"offset":1238},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":1082},"end":{"line":31,"column":79,"offset":1238},"indent":[1]}},{"type":"code","lang":"ts","meta":null,"value":"import { InputValidation } from \"@jobber/components/InputValidation\";","position":{"start":{"line":33,"column":1,"offset":1240},"end":{"line":35,"column":4,"offset":1319},"indent":[1,1]}},{"type":"jsx","value":"<Canvas>\n  <Story name=\"InputValidation\">\n    {() => {\n      const [validationMessages, setValidationMessages] = useState();\n      return (\n        <>\n          <Text>\n            My name is\n            <InputText\n              validations={{\n                required: {\n                  value: true,\n                  message: \"Please tell me your name\",\n                },\n                pattern: {\n                  value: /Jeff/,\n                  message: \"Have you considered a better name, like Jeff?\",\n                },\n              }}\n              onValidation={setValidationMessages}\n              name=\"myName\"\n              size=\"small\"\n              inline={true}\n              maxLength={4}\n            />\n          </Text>\n          {validationMessages && (\n            <InputValidation message={validationMessages} />\n          )}\n        </>\n      );\n    }}\n  </Story>\n</Canvas>","position":{"start":{"line":37,"column":1,"offset":1321},"end":{"line":70,"column":10,"offset":2221},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Props","position":{"start":{"line":72,"column":4,"offset":2226},"end":{"line":72,"column":9,"offset":2231},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":2223},"end":{"line":72,"column":9,"offset":2231},"indent":[]}},{"type":"jsx","value":"<ArgsTable of={InputValidation} story=\"InputValidation\" />","position":{"start":{"line":74,"column":1,"offset":2233},"end":{"line":74,"column":59,"offset":2291},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":77,"column":1,"offset":2294},"end":{"line":77,"column":31,"offset":2324},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":77,"column":31,"offset":2324}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { ArgsTable, Canvas, Meta, Story } from \"@storybook/addon-docs\";\nimport { useState } from \"react\";\nimport { Banner } from \"@jobber/components/Banner\";\nimport { Text } from \"@jobber/components/Text\";\nimport { InputText } from \"@jobber/components/InputText\";\nimport { InputValidation } from \"@jobber/components/InputValidation\";\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Meta title=\"Components/InputValidation\" component={InputValidation} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"input-validation\"\n    }}>{`Input Validation`}</h1>\n    <Banner type=\"warning\" dismissible={false} mdxType=\"Banner\">\n  90% of validation for inputs will be handled out-of-the-box by the{\" \"}\n  <a href=\"/components/input-text/#validation-message\">\n    input component's validation\n  </a>\n  . Check that you cannot use the built-in validation before using this component.\n    </Banner>\n    <p><inlineCode parentName=\"p\">{`InputValidation`}</inlineCode>{` allows you to show the validation messages in cases where an\n`}<a parentName=\"p\" {...{\n        \"href\": \"/components/input-text/#validation-message\"\n      }}>{`input's built-in validation`}</a>{` is not\navailable, such as in `}<inlineCode parentName=\"p\">{`inline`}</inlineCode>{` usage.`}</p>\n    <p>{`For more information about `}<inlineCode parentName=\"p\">{`validations`}</inlineCode>{` using any of the `}<inlineCode parentName=\"p\">{`Input`}</inlineCode>{` components,\nsee the `}<a parentName=\"p\" {...{\n        \"href\": \"/components/input-text/#validation-message\"\n      }}>{`InputText`}</a>{` documentation.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { InputValidation } from \"@jobber/components/InputValidation\";\n`}</code></pre>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"InputValidation\" mdxType=\"Story\">\n    {() => {\n          const [validationMessages, setValidationMessages] = useState();\n          return <>\n          <Text mdxType=\"Text\">\n            My name is\n            <InputText validations={{\n                required: {\n                  value: true,\n                  message: \"Please tell me your name\"\n                },\n                pattern: {\n                  value: /Jeff/,\n                  message: \"Have you considered a better name, like Jeff?\"\n                }\n              }} onValidation={setValidationMessages} name=\"myName\" size=\"small\" inline={true} maxLength={4} mdxType=\"InputText\" />\n          </Text>\n          {validationMessages && <InputValidation message={validationMessages} mdxType=\"InputValidation\" />}\n        </>;\n        }}\n  </Story>\n    </Canvas>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <ArgsTable of={InputValidation} story=\"InputValidation\" mdxType=\"ArgsTable\" />\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}