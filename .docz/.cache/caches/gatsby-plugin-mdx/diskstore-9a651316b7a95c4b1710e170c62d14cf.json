{"expireTime":9007200931831372000,"key":"gatsby-plugin-mdx-entire-payload-5e35c4fe38a3d8b95d41915748443c51-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":114,"offset":115},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":117},"end":{"line":5,"column":29,"offset":145},"indent":[]}},{"type":"import","value":"import { Playground } from \"docz\";\nimport { useState } from \"react\";\nimport { Button } from \"@jobber/components/Button\";\nimport { Content } from \"@jobber/components/Content\";\nimport { Card } from \"@jobber/components/Card\";\nimport { useRefocusOnActivator } from \"@jobber/hooks\";","position":{"start":{"line":8,"column":1,"offset":148},"end":{"line":13,"column":55,"offset":425},"indent":[1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"useRefocusOnActivator","position":{"start":{"line":15,"column":3,"offset":429},"end":{"line":15,"column":24,"offset":450},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":427},"end":{"line":15,"column":24,"offset":450},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Improves the keyboard accessibility on modals and/or popovers since the HTML\nelement focus returns to the one that opens it.","position":{"start":{"line":17,"column":1,"offset":452},"end":{"line":18,"column":48,"offset":576},"indent":[1]}}],"position":{"start":{"line":17,"column":1,"offset":452},"end":{"line":18,"column":48,"offset":576},"indent":[1]}},{"type":"code","lang":"tsx","meta":null,"value":"import { useRefocusOnActivator } from \"@jobber/hooks\";","position":{"start":{"line":20,"column":1,"offset":578},"end":{"line":22,"column":4,"offset":643},"indent":[1,1]}},{"type":"jsx","value":"<Playground>\n  {() => {\n    const [open, setOpen] = useState(false);\n    useRefocusOnActivator(open);\n    return (\n      <Content>\n        <Button label=\"Click me\" onClick={() => setOpen(true)} />\n        {open && (\n          <Card onClick={() => setOpen(false)}>\n            <Content>\n              Huzzah! Click me to hide me and watch me return the focus on the\n              button\n            </Content>\n          </Card>\n        )}\n      </Content>\n    );\n  }}\n</Playground>","position":{"start":{"line":24,"column":1,"offset":645},"end":{"line":42,"column":14,"offset":1125},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":44,"column":1,"offset":1127},"end":{"line":44,"column":4,"offset":1130},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":47,"column":1,"offset":1133},"end":{"line":47,"column":31,"offset":1163},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":47,"column":31,"offset":1163}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { Playground } from \"docz\";\nimport { useState } from \"react\";\nimport { Button } from \"@jobber/components/Button\";\nimport { Content } from \"@jobber/components/Content\";\nimport { Card } from \"@jobber/components/Card\";\nimport { useRefocusOnActivator } from \"@jobber/hooks\";\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"userefocusonactivator\"\n    }}>{`useRefocusOnActivator`}</h1>\n    <p>{`Improves the keyboard accessibility on modals and/or popovers since the HTML\nelement focus returns to the one that opens it.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { useRefocusOnActivator } from \"@jobber/hooks\";\n`}</code></pre>\n    <Playground __position={0} __code={'() => {\\n  const [open, setOpen] = useState(false)\\n  useRefocusOnActivator(open)\\n  return (\\n    <Content>\\n      <Button label=\\\"Click me\\\" onClick={() => setOpen(true)} />\\n      {open && (\\n        <Card onClick={() => setOpen(false)}>\\n          <Content>\\n            Huzzah! Click me to hide me and watch me return the focus on the\\n            button\\n          </Content>\\n        </Card>\\n      )}\\n    </Content>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      useState,\n      Button,\n      Content,\n      Card,\n      useRefocusOnActivator,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [open, setOpen] = useState(false);\n        useRefocusOnActivator(open);\n        return <Content mdxType=\"Content\">\n        <Button label=\"Click me\" onClick={() => setOpen(true)} mdxType=\"Button\" />\n        {open && <Card onClick={() => setOpen(false)} mdxType=\"Card\">\n            <Content mdxType=\"Content\">\n              Huzzah! Click me to hide me and watch me return the focus on the\n              button\n            </Content>\n          </Card>}\n      </Content>;\n      }}\n    </Playground>\n    <hr></hr>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}