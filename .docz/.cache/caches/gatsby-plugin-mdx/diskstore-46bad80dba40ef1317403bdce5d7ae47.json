{"expireTime":9007200931831329000,"key":"gatsby-plugin-mdx-entire-payload-d31c6d48a05bb640bc66cd122b3bd484-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":114,"offset":115},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":117},"end":{"line":5,"column":29,"offset":145},"indent":[]}},{"type":"import","value":"import { useState } from \"react\";\nimport { Playground, Props } from \"docz\";\nimport { ComponentStatus } from \"@jobber/docx\";\nimport { Tooltip } from \"@jobber/components/Tooltip\";\nimport { Avatar } from \".\";","position":{"start":{"line":8,"column":1,"offset":148},"end":{"line":12,"column":28,"offset":353},"indent":[1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Avatar","position":{"start":{"line":14,"column":3,"offset":357},"end":{"line":14,"column":9,"offset":363},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":355},"end":{"line":14,"column":9,"offset":363},"indent":[]}},{"type":"jsx","value":"<ComponentStatus stage=\"pre\" responsive=\"no\" accessible=\"yes\" />","position":{"start":{"line":16,"column":1,"offset":365},"end":{"line":16,"column":65,"offset":429},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"An avatar will be used to display an visual identifier for an individual user.","position":{"start":{"line":18,"column":1,"offset":431},"end":{"line":18,"column":79,"offset":509},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":431},"end":{"line":18,"column":79,"offset":509},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"import { Avatar } from \"@jobber/components/Avatar\";","position":{"start":{"line":20,"column":1,"offset":511},"end":{"line":22,"column":4,"offset":572},"indent":[1,1]}},{"type":"jsx","value":"<Playground>\n  <Avatar\n    imageUrl=\"https://images.unsplash.com/photo-1533858539156-90ea20bafd17?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80\"\n    name=\"The Jobbler\"\n    size=\"large\"\n    initials=\"JBLR\"\n    color=\"var(--color-indigo)\"\n  />\n</Playground>","position":{"start":{"line":24,"column":1,"offset":574},"end":{"line":32,"column":14,"offset":883},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Design & usage guidelines","position":{"start":{"line":34,"column":4,"offset":888},"end":{"line":34,"column":29,"offset":913},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":885},"end":{"line":34,"column":29,"offset":913},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Avatars are available in 3 sizes:","position":{"start":{"line":36,"column":3,"offset":917},"end":{"line":36,"column":36,"offset":950},"indent":[]}}],"position":{"start":{"line":36,"column":3,"offset":917},"end":{"line":36,"column":36,"offset":950},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"base","position":{"start":{"line":37,"column":5,"offset":955},"end":{"line":37,"column":11,"offset":961},"indent":[]}},{"type":"text","value":": Used by default.","position":{"start":{"line":37,"column":11,"offset":961},"end":{"line":37,"column":29,"offset":979},"indent":[]}}],"position":{"start":{"line":37,"column":5,"offset":955},"end":{"line":37,"column":29,"offset":979},"indent":[]}}],"position":{"start":{"line":37,"column":3,"offset":953},"end":{"line":37,"column":29,"offset":979},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"large","position":{"start":{"line":38,"column":5,"offset":984},"end":{"line":38,"column":12,"offset":991},"indent":[]}},{"type":"text","value":": Use when the avatar is the focal point.","position":{"start":{"line":38,"column":12,"offset":991},"end":{"line":38,"column":53,"offset":1032},"indent":[]}}],"position":{"start":{"line":38,"column":5,"offset":984},"end":{"line":38,"column":53,"offset":1032},"indent":[]}}],"position":{"start":{"line":38,"column":3,"offset":982},"end":{"line":38,"column":53,"offset":1032},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"small","position":{"start":{"line":39,"column":5,"offset":1037},"end":{"line":39,"column":12,"offset":1044},"indent":[]}},{"type":"text","value":": Use on higher-density/compact pages or components.","position":{"start":{"line":39,"column":12,"offset":1044},"end":{"line":39,"column":64,"offset":1096},"indent":[]}}],"position":{"start":{"line":39,"column":5,"offset":1037},"end":{"line":39,"column":64,"offset":1096},"indent":[]}}],"position":{"start":{"line":39,"column":3,"offset":1035},"end":{"line":39,"column":64,"offset":1096},"indent":[]}}],"position":{"start":{"line":37,"column":3,"offset":953},"end":{"line":39,"column":64,"offset":1096},"indent":[3,3]}}],"position":{"start":{"line":36,"column":1,"offset":915},"end":{"line":39,"column":64,"offset":1096},"indent":[1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"If an avatar is displayed without a name label, display a tooltip.","position":{"start":{"line":40,"column":3,"offset":1099},"end":{"line":40,"column":69,"offset":1165},"indent":[]}}],"position":{"start":{"line":40,"column":3,"offset":1099},"end":{"line":40,"column":69,"offset":1165},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1097},"end":{"line":40,"column":69,"offset":1165},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Initials and background color should have sufficient color contrast to meet\nAA.","position":{"start":{"line":41,"column":3,"offset":1168},"end":{"line":42,"column":6,"offset":1249},"indent":[3]}}],"position":{"start":{"line":41,"column":3,"offset":1168},"end":{"line":42,"column":6,"offset":1249},"indent":[3]}}],"position":{"start":{"line":41,"column":1,"offset":1166},"end":{"line":42,"column":6,"offset":1249},"indent":[1]}}],"position":{"start":{"line":36,"column":1,"offset":915},"end":{"line":42,"column":6,"offset":1249},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Props","position":{"start":{"line":44,"column":4,"offset":1254},"end":{"line":44,"column":9,"offset":1259},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":1251},"end":{"line":44,"column":9,"offset":1259},"indent":[]}},{"type":"jsx","value":"<Props of={Avatar} />","position":{"start":{"line":46,"column":1,"offset":1261},"end":{"line":46,"column":22,"offset":1282},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Color","position":{"start":{"line":48,"column":4,"offset":1287},"end":{"line":48,"column":9,"offset":1292},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":1284},"end":{"line":48,"column":9,"offset":1292},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The concept of ","position":{"start":{"line":50,"column":1,"offset":1294},"end":{"line":50,"column":16,"offset":1309},"indent":[]}},{"type":"inlineCode","value":"color","position":{"start":{"line":50,"column":16,"offset":1309},"end":{"line":50,"column":23,"offset":1316},"indent":[]}},{"type":"text","value":" with an Avatar is currently not used in Jobber.","position":{"start":{"line":50,"column":23,"offset":1316},"end":{"line":50,"column":71,"offset":1364},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":1294},"end":{"line":50,"column":71,"offset":1364},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use ","position":{"start":{"line":52,"column":1,"offset":1366},"end":{"line":52,"column":5,"offset":1370},"indent":[]}},{"type":"inlineCode","value":"color","position":{"start":{"line":52,"column":5,"offset":1370},"end":{"line":52,"column":12,"offset":1377},"indent":[]}},{"type":"text","value":" to indicate the background and the border color of an avatar\ncomponent.","position":{"start":{"line":52,"column":12,"offset":1377},"end":{"line":53,"column":11,"offset":1449},"indent":[1]}}],"position":{"start":{"line":52,"column":1,"offset":1366},"end":{"line":53,"column":11,"offset":1449},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"When using ","position":{"start":{"line":55,"column":1,"offset":1451},"end":{"line":55,"column":12,"offset":1462},"indent":[]}},{"type":"inlineCode","value":"color","position":{"start":{"line":55,"column":12,"offset":1462},"end":{"line":55,"column":19,"offset":1469},"indent":[]}},{"type":"text","value":", make sure that the color is consistent for a user throughout\nthe application. The color that is represented for an avatar should be the same\ncolor that represents a user in other parts of the application, such as the\ncalendar.","position":{"start":{"line":55,"column":19,"offset":1469},"end":{"line":58,"column":10,"offset":1697},"indent":[1,1,1]}}],"position":{"start":{"line":55,"column":1,"offset":1451},"end":{"line":58,"column":10,"offset":1697},"indent":[1,1,1]}},{"type":"jsx","value":"<Playground>\n  {() => {\n    const [color, setColor] = useState(\"#7db00e\");\n    const style = {\n      display: \"inline-block\",\n      marginRight: \"5px\",\n      verticalAlign: \"middle\",\n    };\n    return (\n      <>\n        <label htmlFor=\"color-picker\">Select A Color</label>\n        <br />\n        <input\n          type=\"color\"\n          id=\"color-picker\"\n          value={color}\n          onChange={e => setColor(e.target.value)}\n        />\n        <hr />\n        <div style={style}>\n          <Avatar initials=\"JBLR\" color={color} />\n        </div>\n        <div style={style}>\n          <Avatar\n            imageUrl=\"https://images.unsplash.com/photo-1533858539156-90ea20bafd17?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80\"\n            color={color}\n          />\n        </div>\n        <div style={style}>\n          <Avatar size=\"large\" color={color} />\n        </div>\n        <div style={style}>\n          <Avatar\n            imageUrl=\"https://images.unsplash.com/photo-1533858539156-90ea20bafd17?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80\"\n            size=\"large\"\n            color={color}\n          />\n        </div>\n      </>\n    );\n  }}\n</Playground>","position":{"start":{"line":60,"column":1,"offset":1699},"end":{"line":101,"column":14,"offset":2967},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Usage with Tooltip","position":{"start":{"line":103,"column":4,"offset":2972},"end":{"line":103,"column":22,"offset":2990},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":2969},"end":{"line":103,"column":22,"offset":2990},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If an avatar is displayed without a name label, display a tooltip.","position":{"start":{"line":105,"column":1,"offset":2992},"end":{"line":105,"column":67,"offset":3058},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":2992},"end":{"line":105,"column":67,"offset":3058},"indent":[]}},{"type":"jsx","value":"<Playground>\n  {() => {\n    const [name] = useState(\"The Jobbler\");\n    return (\n      <Tooltip message={name}>\n        <Avatar size=\"large\" initials=\"JBLR\" />\n      </Tooltip>\n    );\n  }}\n</Playground>","position":{"start":{"line":107,"column":1,"offset":3060},"end":{"line":116,"column":14,"offset":3262},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Avatar image credit","position":{"start":{"line":118,"column":7,"offset":3270},"end":{"line":118,"column":26,"offset":3289},"indent":[]}}],"position":{"start":{"line":118,"column":1,"offset":3264},"end":{"line":118,"column":26,"offset":3289},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://unsplash.com/photos/noSpEJztSMc","children":[{"type":"text","value":"Gabrielle Henderson on Unplash","position":{"start":{"line":120,"column":2,"offset":3292},"end":{"line":120,"column":32,"offset":3322},"indent":[]}}],"position":{"start":{"line":120,"column":1,"offset":3291},"end":{"line":120,"column":74,"offset":3364},"indent":[]}}],"position":{"start":{"line":120,"column":1,"offset":3291},"end":{"line":120,"column":74,"offset":3364},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":123,"column":1,"offset":3367},"end":{"line":123,"column":31,"offset":3397},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":123,"column":31,"offset":3397}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { useState } from \"react\";\nimport { Playground, Props } from \"docz\";\nimport { ComponentStatus } from \"@jobber/docx\";\nimport { Tooltip } from \"@jobber/components/Tooltip\";\nimport { Avatar } from \".\";\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"avatar\"\n    }}>{`Avatar`}</h1>\n    <ComponentStatus stage=\"pre\" responsive=\"no\" accessible=\"yes\" mdxType=\"ComponentStatus\" />\n    <p>{`An avatar will be used to display an visual identifier for an individual user.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { Avatar } from \"@jobber/components/Avatar\";\n`}</code></pre>\n    <Playground __position={1} __code={'<Avatar\\n  imageUrl=\\\"https://images.unsplash.com/photo-1533858539156-90ea20bafd17?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80\\\"\\n  name=\\\"The Jobbler\\\"\\n  size=\\\"large\\\"\\n  initials=\\\"JBLR\\\"\\n  color=\\\"var(--color-indigo)\\\"\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Playground,\n      Props,\n      ComponentStatus,\n      Tooltip,\n      Avatar,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Avatar imageUrl=\"https://images.unsplash.com/photo-1533858539156-90ea20bafd17?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80\" name=\"The Jobbler\" size=\"large\" initials=\"JBLR\" color=\"var(--color-indigo)\" mdxType=\"Avatar\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"design--usage-guidelines\"\n    }}>{`Design & usage guidelines`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Avatars are available in 3 sizes:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`base`}</inlineCode>{`: Used by default.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`large`}</inlineCode>{`: Use when the avatar is the focal point.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`small`}</inlineCode>{`: Use on higher-density/compact pages or components.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`If an avatar is displayed without a name label, display a tooltip.`}</li>\n      <li parentName=\"ul\">{`Initials and background color should have sufficient color contrast to meet\nAA.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Avatar} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"color\"\n    }}>{`Color`}</h2>\n    <p>{`The concept of `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` with an Avatar is currently not used in Jobber.`}</p>\n    <p>{`Use `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` to indicate the background and the border color of an avatar\ncomponent.`}</p>\n    <p>{`When using `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{`, make sure that the color is consistent for a user throughout\nthe application. The color that is represented for an avatar should be the same\ncolor that represents a user in other parts of the application, such as the\ncalendar.`}</p>\n    <Playground __position={3} __code={'() => {\\n  const [color, setColor] = useState(\\'#7db00e\\')\\n  const style = {\\n    display: \\'inline-block\\',\\n    marginRight: \\'5px\\',\\n    verticalAlign: \\'middle\\',\\n  }\\n  return (\\n    <>\\n      <label htmlFor=\\\"color-picker\\\">Select A Color</label>\\n      <br />\\n      <input\\n        type=\\\"color\\\"\\n        id=\\\"color-picker\\\"\\n        value={color}\\n        onChange={e => setColor(e.target.value)}\\n      />\\n      <hr />\\n      <div style={style}>\\n        <Avatar initials=\\\"JBLR\\\" color={color} />\\n      </div>\\n      <div style={style}>\\n        <Avatar\\n          imageUrl=\\\"https://images.unsplash.com/photo-1533858539156-90ea20bafd17?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80\\\"\\n          color={color}\\n        />\\n      </div>\\n      <div style={style}>\\n        <Avatar size=\\\"large\\\" color={color} />\\n      </div>\\n      <div style={style}>\\n        <Avatar\\n          imageUrl=\\\"https://images.unsplash.com/photo-1533858539156-90ea20bafd17?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80\\\"\\n          size=\\\"large\\\"\\n          color={color}\\n        />\\n      </div>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Playground,\n      Props,\n      ComponentStatus,\n      Tooltip,\n      Avatar,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [color, setColor] = useState(\"#7db00e\");\n        const style = {\n          display: \"inline-block\",\n          marginRight: \"5px\",\n          verticalAlign: \"middle\"\n        };\n        return <>\n        <label htmlFor=\"color-picker\">Select A Color</label>\n        <br />\n        <input type=\"color\" id=\"color-picker\" value={color} onChange={e => setColor(e.target.value)} />\n        <hr />\n        <div style={style}>\n          <Avatar initials=\"JBLR\" color={color} mdxType=\"Avatar\" />\n        </div>\n        <div style={style}>\n          <Avatar imageUrl=\"https://images.unsplash.com/photo-1533858539156-90ea20bafd17?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80\" color={color} mdxType=\"Avatar\" />\n        </div>\n        <div style={style}>\n          <Avatar size=\"large\" color={color} mdxType=\"Avatar\" />\n        </div>\n        <div style={style}>\n          <Avatar imageUrl=\"https://images.unsplash.com/photo-1533858539156-90ea20bafd17?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80\" size=\"large\" color={color} mdxType=\"Avatar\" />\n        </div>\n      </>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"usage-with-tooltip\"\n    }}>{`Usage with Tooltip`}</h2>\n    <p>{`If an avatar is displayed without a name label, display a tooltip.`}</p>\n    <Playground __position={4} __code={'() => {\\n  const [name] = useState(\\'The Jobbler\\')\\n  return (\\n    <Tooltip message={name}>\\n      <Avatar size=\\\"large\\\" initials=\\\"JBLR\\\" />\\n    </Tooltip>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Playground,\n      Props,\n      ComponentStatus,\n      Tooltip,\n      Avatar,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [name] = useState(\"The Jobbler\");\n        return <Tooltip message={name} mdxType=\"Tooltip\">\n        <Avatar size=\"large\" initials=\"JBLR\" mdxType=\"Avatar\" />\n      </Tooltip>;\n      }}\n    </Playground>\n    <h5 {...{\n      \"id\": \"avatar-image-credit\"\n    }}>{`Avatar image credit`}</h5>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://unsplash.com/photos/noSpEJztSMc\"\n      }}>{`Gabrielle Henderson on Unplash`}</a></p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}