{"expireTime":9007200931831373000,"key":"gatsby-plugin-mdx-entire-payload-69f834c32bc191644751e42525359223-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":114,"offset":115},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":117},"end":{"line":5,"column":29,"offset":145},"indent":[]}},{"type":"import","value":"import { Playground } from \"docz\";\nimport { useFormState } from \"@jobber/hooks\";\nimport { Form } from \"@jobber/components/Form\";\nimport { InputText } from \"@jobber/components/InputText\";\nimport { Content } from \"@jobber/components/Content\";\nimport { Button } from \"@jobber/components/Button\";","position":{"start":{"line":8,"column":1,"offset":148},"end":{"line":13,"column":52,"offset":440},"indent":[1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"UseFormState","position":{"start":{"line":15,"column":3,"offset":444},"end":{"line":15,"column":15,"offset":456},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":442},"end":{"line":15,"column":15,"offset":456},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"useFormState","position":{"start":{"line":17,"column":1,"offset":458},"end":{"line":17,"column":15,"offset":472},"indent":[]}},{"type":"text","value":" is an extremly simple hook that wraps the\n","position":{"start":{"line":17,"column":15,"offset":472},"end":{"line":18,"column":1,"offset":515},"indent":[1]}},{"type":"link","title":null,"url":"https://reactjs.org/docs/hooks-state.html","children":[{"type":"text","value":"useState()","position":{"start":{"line":18,"column":2,"offset":516},"end":{"line":18,"column":12,"offset":526},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":515},"end":{"line":18,"column":56,"offset":570},"indent":[]}},{"type":"text","value":" hook and suplies some\ndefault values.","position":{"start":{"line":18,"column":56,"offset":570},"end":{"line":19,"column":16,"offset":608},"indent":[1]}}],"position":{"start":{"line":17,"column":1,"offset":458},"end":{"line":19,"column":16,"offset":608},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"useFormState","position":{"start":{"line":21,"column":1,"offset":610},"end":{"line":21,"column":15,"offset":624},"indent":[]}},{"type":"text","value":" should ","position":{"start":{"line":21,"column":15,"offset":624},"end":{"line":21,"column":23,"offset":632},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"only","position":{"start":{"line":21,"column":25,"offset":634},"end":{"line":21,"column":29,"offset":638},"indent":[]}}],"position":{"start":{"line":21,"column":23,"offset":632},"end":{"line":21,"column":31,"offset":640},"indent":[]}},{"type":"text","value":" only by used when using a\n","position":{"start":{"line":21,"column":31,"offset":640},"end":{"line":22,"column":1,"offset":667},"indent":[1]}},{"type":"link","title":null,"url":"/components/form","children":[{"type":"inlineCode","value":"<Form />","position":{"start":{"line":22,"column":2,"offset":668},"end":{"line":22,"column":12,"offset":678},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":667},"end":{"line":22,"column":31,"offset":697},"indent":[]}},{"type":"text","value":" component.","position":{"start":{"line":22,"column":31,"offset":697},"end":{"line":22,"column":42,"offset":708},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":610},"end":{"line":22,"column":42,"offset":708},"indent":[1]}},{"type":"code","lang":"tsx","meta":null,"value":"import { useFormState } from \"@jobber/hooks\";","position":{"start":{"line":24,"column":1,"offset":710},"end":{"line":26,"column":4,"offset":766},"indent":[1,1]}},{"type":"jsx","value":"<Playground>\n  {() => {\n    const [formState, setFormState] = useFormState();\n    return (\n      <>\n        <Form onSubmit={() => alert(\"submitted\")} onStateChange={setFormState}>\n          <Content>\n            <InputText\n              placeholder=\"First Name\"\n              name=\"firstName\"\n              validations={{\n                required: {\n                  value: true,\n                  message: \"Tell us your name\",\n                },\n                minLength: {\n                  value: 3,\n                  message: \"Your name is to short.\",\n                },\n              }}\n            />\n            <InputText\n              placeholder=\"Last Name\"\n              name=\"lastName\"\n              validations={{\n                required: {\n                  value: true,\n                  message: \"Tell us your last name.\",\n                },\n              }}\n            />\n            <Button\n              label=\"Submit Form\"\n              submit={true}\n              disabled={!formState.isDirty || !formState.isValid}\n            />\n          </Content>\n        </Form>\n        <pre>{JSON.stringify(formState, null, 2)}</pre>\n      </>\n    );\n  }}\n</Playground>","position":{"start":{"line":28,"column":1,"offset":768},"end":{"line":70,"column":14,"offset":1952},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":73,"column":1,"offset":1955},"end":{"line":73,"column":31,"offset":1985},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":73,"column":31,"offset":1985}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { Playground } from \"docz\";\nimport { useFormState } from \"@jobber/hooks\";\nimport { Form } from \"@jobber/components/Form\";\nimport { InputText } from \"@jobber/components/InputText\";\nimport { Content } from \"@jobber/components/Content\";\nimport { Button } from \"@jobber/components/Button\";\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"useformstate\"\n    }}>{`UseFormState`}</h1>\n    <p><inlineCode parentName=\"p\">{`useFormState`}</inlineCode>{` is an extremly simple hook that wraps the\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://reactjs.org/docs/hooks-state.html\"\n      }}>{`useState()`}</a>{` hook and suplies some\ndefault values.`}</p>\n    <p><inlineCode parentName=\"p\">{`useFormState`}</inlineCode>{` should `}<strong parentName=\"p\">{`only`}</strong>{` only by used when using a\n`}<a parentName=\"p\" {...{\n        \"href\": \"/components/form\"\n      }}><inlineCode parentName=\"a\">{`<Form />`}</inlineCode></a>{` component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { useFormState } from \"@jobber/hooks\";\n`}</code></pre>\n    <Playground __position={0} __code={'() => {\\n  const [formState, setFormState] = useFormState()\\n  return (\\n    <>\\n      <Form onSubmit={() => alert(\\'submitted\\')} onStateChange={setFormState}>\\n        <Content>\\n          <InputText\\n            placeholder=\\\"First Name\\\"\\n            name=\\\"firstName\\\"\\n            validations={{\\n              required: {\\n                value: true,\\n                message: \\'Tell us your name\\',\\n              },\\n              minLength: {\\n                value: 3,\\n                message: \\'Your name is to short.\\',\\n              },\\n            }}\\n          />\\n          <InputText\\n            placeholder=\\\"Last Name\\\"\\n            name=\\\"lastName\\\"\\n            validations={{\\n              required: {\\n                value: true,\\n                message: \\'Tell us your last name.\\',\\n              },\\n            }}\\n          />\\n          <Button\\n            label=\\\"Submit Form\\\"\\n            submit={true}\\n            disabled={!formState.isDirty || !formState.isValid}\\n          />\\n        </Content>\\n      </Form>\\n      <pre>{JSON.stringify(formState, null, 2)}</pre>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      useFormState,\n      Form,\n      InputText,\n      Content,\n      Button,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [formState, setFormState] = useFormState();\n        return <>\n        <Form onSubmit={() => alert(\"submitted\")} onStateChange={setFormState} mdxType=\"Form\">\n          <Content mdxType=\"Content\">\n            <InputText placeholder=\"First Name\" name=\"firstName\" validations={{\n                required: {\n                  value: true,\n                  message: \"Tell us your name\"\n                },\n                minLength: {\n                  value: 3,\n                  message: \"Your name is to short.\"\n                }\n              }} mdxType=\"InputText\" />\n            <InputText placeholder=\"Last Name\" name=\"lastName\" validations={{\n                required: {\n                  value: true,\n                  message: \"Tell us your last name.\"\n                }\n              }} mdxType=\"InputText\" />\n            <Button label=\"Submit Form\" submit={true} disabled={!formState.isDirty || !formState.isValid} mdxType=\"Button\" />\n          </Content>\n        </Form>\n        <pre>{JSON.stringify(formState, null, 2)}</pre>\n      </>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}