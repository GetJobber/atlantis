{"expireTime":9007200931831382000,"key":"gatsby-plugin-mdx-entire-payload-084b7b527bb212c3a74d15d5708faf2b-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":114,"offset":115},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":117},"end":{"line":5,"column":29,"offset":145},"indent":[]}},{"type":"import","value":"import { Playground, Props } from \"docz\";\nimport { ComponentStatus } from \"@jobber/docx\";\nimport { createRef, useState } from \"react\";\nimport { Button } from \"../Button\";\nimport { Menu } from \".\";","position":{"start":{"line":8,"column":1,"offset":148},"end":{"line":12,"column":26,"offset":344},"indent":[1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Menu","position":{"start":{"line":14,"column":3,"offset":348},"end":{"line":14,"column":7,"offset":352},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":346},"end":{"line":14,"column":7,"offset":352},"indent":[]}},{"type":"jsx","value":"<ComponentStatus stage=\"pre\" responsive=\"no\" accessible=\"yes\" />","position":{"start":{"line":16,"column":1,"offset":354},"end":{"line":16,"column":65,"offset":418},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A toggleable menu that holds a list of actions. Where ","position":{"start":{"line":18,"column":1,"offset":420},"end":{"line":18,"column":55,"offset":474},"indent":[]}},{"type":"inlineCode","value":"InputSelect","position":{"start":{"line":18,"column":55,"offset":474},"end":{"line":18,"column":68,"offset":487},"indent":[]}},{"type":"text","value":" is used to\nselect an item from a list ","position":{"start":{"line":18,"column":68,"offset":487},"end":{"line":19,"column":28,"offset":526},"indent":[1]}},{"type":"inlineCode","value":"Menu","position":{"start":{"line":19,"column":28,"offset":526},"end":{"line":19,"column":34,"offset":532},"indent":[]}},{"type":"text","value":" is used to display a dismissible menu of\nactions the user can perform.","position":{"start":{"line":19,"column":34,"offset":532},"end":{"line":20,"column":30,"offset":603},"indent":[1]}}],"position":{"start":{"line":18,"column":1,"offset":420},"end":{"line":20,"column":30,"offset":603},"indent":[1,1]}},{"type":"code","lang":"ts","meta":null,"value":"import { Menu } from \"@jobber/components/Menu\";","position":{"start":{"line":22,"column":1,"offset":605},"end":{"line":24,"column":4,"offset":662},"indent":[1,1]}},{"type":"jsx","value":"<Playground>\n  <Menu\n    items={[\n      {\n        actions: [\n          {\n            label: \"Edit\",\n            icon: \"edit\",\n            onClick: () => {\n              alert(\"‚úèÔ∏è\");\n            }\n          }\n        ]\n      },\n      {\n        header: \"Send as...\",\n        actions: [\n          {\n            label: \"Text message\",\n            icon: \"sms\",\n            onClick: () => {\n              alert(\"üì±\");\n            }\n          },\n          {\n            label: \"Email\",\n            icon: \"email\",\n            onClick: () => {\n              alert(\"üì®\");\n            }\n          }\n        ]\n      },\n    ]}\n  />","position":{"start":{"line":26,"column":1,"offset":664},"end":{"line":60,"column":5,"offset":1282},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"</Playground>","position":{"start":{"line":62,"column":1,"offset":1284},"end":{"line":62,"column":14,"offset":1297},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Props","position":{"start":{"line":64,"column":4,"offset":1302},"end":{"line":64,"column":9,"offset":1307},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":1299},"end":{"line":64,"column":9,"offset":1307},"indent":[]}},{"type":"jsx","value":"<Props of={Menu} />","position":{"start":{"line":66,"column":1,"offset":1309},"end":{"line":66,"column":20,"offset":1328},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Content guidelines","position":{"start":{"line":68,"column":4,"offset":1333},"end":{"line":68,"column":22,"offset":1351},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":1330},"end":{"line":68,"column":22,"offset":1351},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Menu action labels should be sentence-cased. This means in general, capitalize\nonly the first letter of the label unless there is a proper noun (such as a\nperson's name) in the label.","position":{"start":{"line":70,"column":1,"offset":1353},"end":{"line":72,"column":29,"offset":1536},"indent":[1,1]}}],"position":{"start":{"line":70,"column":1,"offset":1353},"end":{"line":72,"column":29,"offset":1536},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Jobber features, such as jobs, quotes, and invoices, are not proper nouns and\n","position":{"start":{"line":74,"column":1,"offset":1538},"end":{"line":75,"column":1,"offset":1616},"indent":[1]}},{"type":"link","title":null,"url":"/content/product-vocabulary#concepts-and-items","children":[{"type":"text","value":"should not be capitalized.","position":{"start":{"line":75,"column":2,"offset":1617},"end":{"line":75,"column":28,"offset":1643},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":1616},"end":{"line":75,"column":77,"offset":1692},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":1538},"end":{"line":75,"column":77,"offset":1692},"indent":[1]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"‚úÖ Do","position":{"start":{"line":77,"column":3,"offset":1696},"end":{"line":77,"column":7,"offset":1700},"indent":[]}}],"position":{"start":{"line":77,"column":3,"offset":1696},"end":{"line":77,"column":34,"offset":1727},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"‚ùå Don't","position":{"start":{"line":77,"column":37,"offset":1730},"end":{"line":77,"column":44,"offset":1737},"indent":[]}}],"position":{"start":{"line":77,"column":37,"offset":1730},"end":{"line":77,"column":68,"offset":1761},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":1694},"end":{"line":77,"column":70,"offset":1763},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Send as text message","position":{"start":{"line":79,"column":3,"offset":1838},"end":{"line":79,"column":23,"offset":1858},"indent":[]}}],"position":{"start":{"line":79,"column":3,"offset":1838},"end":{"line":79,"column":35,"offset":1870},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Send As Text Message","position":{"start":{"line":79,"column":38,"offset":1873},"end":{"line":79,"column":58,"offset":1893},"indent":[]}}],"position":{"start":{"line":79,"column":38,"offset":1873},"end":{"line":79,"column":70,"offset":1905},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":1836},"end":{"line":79,"column":72,"offset":1907},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Collect signature","position":{"start":{"line":80,"column":3,"offset":1910},"end":{"line":80,"column":20,"offset":1927},"indent":[]}}],"position":{"start":{"line":80,"column":3,"offset":1910},"end":{"line":80,"column":35,"offset":1942},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"COLLECT SIGNATURE","position":{"start":{"line":80,"column":38,"offset":1945},"end":{"line":80,"column":55,"offset":1962},"indent":[]}}],"position":{"start":{"line":80,"column":38,"offset":1945},"end":{"line":80,"column":70,"offset":1977},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":1908},"end":{"line":80,"column":72,"offset":1979},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Assign Jasmine Williams to visit","position":{"start":{"line":81,"column":3,"offset":1982},"end":{"line":81,"column":35,"offset":2014},"indent":[]}}],"position":{"start":{"line":81,"column":3,"offset":1982},"end":{"line":81,"column":35,"offset":2014},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Assign jasmine williams to visit","position":{"start":{"line":81,"column":38,"offset":2017},"end":{"line":81,"column":70,"offset":2049},"indent":[]}}],"position":{"start":{"line":81,"column":38,"offset":2017},"end":{"line":81,"column":70,"offset":2049},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":1980},"end":{"line":81,"column":72,"offset":2051},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":1694},"end":{"line":81,"column":72,"offset":2051},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Custom activator","position":{"start":{"line":83,"column":4,"offset":2056},"end":{"line":83,"column":20,"offset":2072},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":2053},"end":{"line":83,"column":20,"offset":2072},"indent":[]}},{"type":"jsx","value":"<Playground>\n  <Menu\n    activator={<Button label=\"My Fancy Menu\" />}\n    items={[\n      {\n        actions: [\n          {\n            label: \"Edit\",\n            icon: \"edit\",\n            onClick: () => {\n              alert(\"‚úèÔ∏è\");\n            }\n          }\n        ]\n      },\n      {\n        header: \"Send as...\",\n        actions: [\n          {\n            label: \"Text Message\",\n            icon: \"sms\",\n            onClick: () => {\n              alert(\"üì±\");\n            }\n          },\n          {\n            label: \"Email\",\n            icon: \"email\",\n            onClick: () => {\n              alert(\"üì®\");\n            }\n          }\n        ]\n      },\n    ]}\n  />","position":{"start":{"line":85,"column":1,"offset":2074},"end":{"line":120,"column":5,"offset":2741},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"</Playground>","position":{"start":{"line":122,"column":1,"offset":2743},"end":{"line":122,"column":14,"offset":2756},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":125,"column":1,"offset":2759},"end":{"line":125,"column":31,"offset":2789},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":125,"column":31,"offset":2789}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { Playground, Props } from \"docz\";\nimport { ComponentStatus } from \"@jobber/docx\";\nimport { createRef, useState } from \"react\";\nimport { Button } from \"../Button\";\nimport { Menu } from \".\";\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"menu\"\n    }}>{`Menu`}</h1>\n    <ComponentStatus stage=\"pre\" responsive=\"no\" accessible=\"yes\" mdxType=\"ComponentStatus\" />\n    <p>{`A toggleable menu that holds a list of actions. Where `}<inlineCode parentName=\"p\">{`InputSelect`}</inlineCode>{` is used to\nselect an item from a list `}<inlineCode parentName=\"p\">{`Menu`}</inlineCode>{` is used to display a dismissible menu of\nactions the user can perform.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { Menu } from \"@jobber/components/Menu\";\n`}</code></pre>\n    <Playground __position={1} __code={'<Menu\\n  items={[\\n    {\\n      actions: [\\n        {\\n          label: \\'Edit\\',\\n          icon: \\'edit\\',\\n          onClick: () => {\\n            alert(\\'‚úèÔ∏è\\')\\n          },\\n        },\\n      ],\\n    },\\n    {\\n      header: \\'Send as...\\',\\n      actions: [\\n        {\\n          label: \\'Text message\\',\\n          icon: \\'sms\\',\\n          onClick: () => {\\n            alert(\\'üì±\\')\\n          },\\n        },\\n        {\\n          label: \\'Email\\',\\n          icon: \\'email\\',\\n          onClick: () => {\\n            alert(\\'üì®\\')\\n          },\\n        },\\n      ],\\n    },\\n  ]}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ComponentStatus,\n      createRef,\n      useState,\n      Button,\n      Menu,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Menu items={[{\n        actions: [{\n          label: \"Edit\",\n          icon: \"edit\",\n          onClick: () => {\n            alert(\"‚úèÔ∏è\");\n          }\n        }]\n      }, {\n        header: \"Send as...\",\n        actions: [{\n          label: \"Text message\",\n          icon: \"sms\",\n          onClick: () => {\n            alert(\"üì±\");\n          }\n        }, {\n          label: \"Email\",\n          icon: \"email\",\n          onClick: () => {\n            alert(\"üì®\");\n          }\n        }]\n      }]} mdxType=\"Menu\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Menu} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"content-guidelines\"\n    }}>{`Content guidelines`}</h2>\n    <p>{`Menu action labels should be sentence-cased. This means in general, capitalize\nonly the first letter of the label unless there is a proper noun (such as a\nperson's name) in the label.`}</p>\n    <p>{`Jobber features, such as jobs, quotes, and invoices, are not proper nouns and\n`}<a parentName=\"p\" {...{\n        \"href\": \"/content/product-vocabulary#concepts-and-items\"\n      }}>{`should not be capitalized.`}</a></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`‚úÖ Do`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`‚ùå Don't`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Send as text message`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Send As Text Message`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Collect signature`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`COLLECT SIGNATURE`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Assign Jasmine Williams to visit`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Assign jasmine williams to visit`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"custom-activator\"\n    }}>{`Custom activator`}</h2>\n    <Playground __position={3} __code={'<Menu\\n  activator={<Button label=\\\"My Fancy Menu\\\" />}\\n  items={[\\n    {\\n      actions: [\\n        {\\n          label: \\'Edit\\',\\n          icon: \\'edit\\',\\n          onClick: () => {\\n            alert(\\'‚úèÔ∏è\\')\\n          },\\n        },\\n      ],\\n    },\\n    {\\n      header: \\'Send as...\\',\\n      actions: [\\n        {\\n          label: \\'Text Message\\',\\n          icon: \\'sms\\',\\n          onClick: () => {\\n            alert(\\'üì±\\')\\n          },\\n        },\\n        {\\n          label: \\'Email\\',\\n          icon: \\'email\\',\\n          onClick: () => {\\n            alert(\\'üì®\\')\\n          },\\n        },\\n      ],\\n    },\\n  ]}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ComponentStatus,\n      createRef,\n      useState,\n      Button,\n      Menu,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Menu activator={<Button label=\"My Fancy Menu\" mdxType=\"Button\" />} items={[{\n        actions: [{\n          label: \"Edit\",\n          icon: \"edit\",\n          onClick: () => {\n            alert(\"‚úèÔ∏è\");\n          }\n        }]\n      }, {\n        header: \"Send as...\",\n        actions: [{\n          label: \"Text Message\",\n          icon: \"sms\",\n          onClick: () => {\n            alert(\"üì±\");\n          }\n        }, {\n          label: \"Email\",\n          icon: \"email\",\n          onClick: () => {\n            alert(\"üì®\");\n          }\n        }]\n      }]} mdxType=\"Menu\" />\n    </Playground>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}