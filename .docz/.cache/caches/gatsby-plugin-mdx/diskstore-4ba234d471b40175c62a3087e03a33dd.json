{"expireTime":9007200931831330000,"key":"gatsby-plugin-mdx-entire-payload-ff3cec2076c8ee4b286510f052e5ab58-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":114,"offset":115},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":117},"end":{"line":5,"column":29,"offset":145},"indent":[]}},{"type":"import","value":"import { Playground, Props } from \"docz\";\nimport { ComponentStatus } from \"@jobber/docx\";\nimport { InputNumber } from \".\";\nimport { Text } from \"../Text\";\nimport { useState } from \"react\";\nimport { Button } from \"../Button\";\nimport { Content } from \"../Content\";","position":{"start":{"line":8,"column":1,"offset":148},"end":{"line":14,"column":38,"offset":410},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"InputNumber","position":{"start":{"line":16,"column":3,"offset":414},"end":{"line":16,"column":14,"offset":425},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":412},"end":{"line":16,"column":14,"offset":425},"indent":[]}},{"type":"jsx","value":"<ComponentStatus stage=\"ready\" responsive=\"yes\" accessible=\"yes\" />","position":{"start":{"line":18,"column":1,"offset":427},"end":{"line":18,"column":68,"offset":494},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Input number is used in forms that accept numbers as an answer.","position":{"start":{"line":20,"column":1,"offset":496},"end":{"line":20,"column":64,"offset":559},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":496},"end":{"line":20,"column":64,"offset":559},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"import { InputNumber } from \"@jobber/components/InputNumber\";","position":{"start":{"line":22,"column":1,"offset":561},"end":{"line":24,"column":4,"offset":632},"indent":[1,1]}},{"type":"jsx","value":"<Playground>\n  <InputNumber defaultValue={7} max={11} min={0} placeholder=\"Number\" />\n</Playground>","position":{"start":{"line":26,"column":1,"offset":634},"end":{"line":28,"column":14,"offset":733},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Design & usage guidelines","position":{"start":{"line":30,"column":4,"offset":738},"end":{"line":30,"column":29,"offset":763},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":735},"end":{"line":30,"column":29,"offset":763},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This is best suited for input data that benefits from being modified in\nincrements, such as quantity, price, or days (ie 2 days -> 3 days).","position":{"start":{"line":32,"column":1,"offset":765},"end":{"line":33,"column":68,"offset":904},"indent":[1]}}],"position":{"start":{"line":32,"column":1,"offset":765},"end":{"line":33,"column":68,"offset":904},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"While some types of data may technically be numbers, they can be ill-suited for\nusing a number input. For example, phone numbers and credit card numbers provide\nno value to the user by offering an incrementer.","position":{"start":{"line":35,"column":1,"offset":906},"end":{"line":37,"column":49,"offset":1115},"indent":[1,1]}}],"position":{"start":{"line":35,"column":1,"offset":906},"end":{"line":37,"column":49,"offset":1115},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Props","position":{"start":{"line":39,"column":4,"offset":1120},"end":{"line":39,"column":9,"offset":1125},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1117},"end":{"line":39,"column":9,"offset":1125},"indent":[]}},{"type":"jsx","value":"<Props of={InputNumber} />","position":{"start":{"line":41,"column":1,"offset":1127},"end":{"line":41,"column":27,"offset":1153},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":43,"column":1,"offset":1155},"end":{"line":43,"column":4,"offset":1158},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Controlled","position":{"start":{"line":45,"column":4,"offset":1163},"end":{"line":45,"column":14,"offset":1173},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1160},"end":{"line":45,"column":14,"offset":1173},"indent":[]}},{"type":"jsx","value":"<Playground>\n  {() => {\n    const [value, setValue] = useState(30);\n    return (\n      <InputNumber\n        value={value}\n        max={32}\n        min={0}\n        onChange={setValue}\n        placeholder=\"Age\"\n      />\n    );\n  }}\n</Playground>","position":{"start":{"line":47,"column":1,"offset":1175},"end":{"line":60,"column":14,"offset":1418},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"States","position":{"start":{"line":62,"column":4,"offset":1423},"end":{"line":62,"column":10,"offset":1429},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":1420},"end":{"line":62,"column":10,"offset":1429},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Disabled","position":{"start":{"line":64,"column":5,"offset":1435},"end":{"line":64,"column":13,"offset":1443},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":1431},"end":{"line":64,"column":13,"offset":1443},"indent":[]}},{"type":"jsx","value":"<Playground>\n  <InputNumber\n    placeholder=\"SIN Number\"\n    value={1234}\n    disabled={true}\n    name=\"sin\"\n  />\n</Playground>","position":{"start":{"line":66,"column":1,"offset":1445},"end":{"line":73,"column":14,"offset":1572},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Read-only","position":{"start":{"line":75,"column":5,"offset":1578},"end":{"line":75,"column":14,"offset":1587},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":1574},"end":{"line":75,"column":14,"offset":1587},"indent":[]}},{"type":"jsx","value":"<Playground>\n  <InputNumber\n    placeholder=\"Your pin number\"\n    value={12345}\n    readonly={true}\n    name=\"pinNumber\"\n  />\n</Playground>","position":{"start":{"line":77,"column":1,"offset":1589},"end":{"line":84,"column":14,"offset":1728},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Invalid","position":{"start":{"line":86,"column":5,"offset":1734},"end":{"line":86,"column":12,"offset":1741},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":1730},"end":{"line":86,"column":12,"offset":1741},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For more information about available ","position":{"start":{"line":88,"column":1,"offset":1743},"end":{"line":88,"column":38,"offset":1780},"indent":[]}},{"type":"inlineCode","value":"validations","position":{"start":{"line":88,"column":38,"offset":1780},"end":{"line":88,"column":51,"offset":1793},"indent":[]}},{"type":"text","value":", see the\n","position":{"start":{"line":88,"column":51,"offset":1793},"end":{"line":89,"column":1,"offset":1803},"indent":[1]}},{"type":"link","title":null,"url":"/components/input-text/#validation-message","children":[{"type":"text","value":"InputText","position":{"start":{"line":89,"column":2,"offset":1804},"end":{"line":89,"column":11,"offset":1813},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":1803},"end":{"line":89,"column":56,"offset":1858},"indent":[]}},{"type":"text","value":" docs.","position":{"start":{"line":89,"column":56,"offset":1858},"end":{"line":89,"column":62,"offset":1864},"indent":[]}}],"position":{"start":{"line":88,"column":1,"offset":1743},"end":{"line":89,"column":62,"offset":1864},"indent":[1]}},{"type":"jsx","value":"<Playground>\n  <InputNumber\n    placeholder=\"Give a whole number\"\n    defaultValue={1.1}\n    invalid={true}\n    name=\"wholeNumber\"\n  />\n</Playground>","position":{"start":{"line":91,"column":1,"offset":1866},"end":{"line":98,"column":14,"offset":2015},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Sizes","position":{"start":{"line":100,"column":4,"offset":2020},"end":{"line":100,"column":9,"offset":2025},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":2017},"end":{"line":100,"column":9,"offset":2025},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Small","position":{"start":{"line":102,"column":5,"offset":2031},"end":{"line":102,"column":10,"offset":2036},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":2027},"end":{"line":102,"column":10,"offset":2036},"indent":[]}},{"type":"jsx","value":"<Playground>\n  <InputNumber name=\"smallField\" size=\"small\" placeholder=\"Duration\" />\n</Playground>","position":{"start":{"line":104,"column":1,"offset":2038},"end":{"line":106,"column":14,"offset":2136},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Large","position":{"start":{"line":108,"column":5,"offset":2142},"end":{"line":108,"column":10,"offset":2147},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":2138},"end":{"line":108,"column":10,"offset":2147},"indent":[]}},{"type":"jsx","value":"<Playground>\n  <InputNumber\n    name=\"largeField\"\n    size=\"large\"\n    placeholder=\"Duration but bigger\"\n  />\n</Playground>","position":{"start":{"line":110,"column":1,"offset":2149},"end":{"line":116,"column":14,"offset":2272},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Inline","position":{"start":{"line":118,"column":4,"offset":2277},"end":{"line":118,"column":10,"offset":2283},"indent":[]}}],"position":{"start":{"line":118,"column":1,"offset":2274},"end":{"line":118,"column":10,"offset":2283},"indent":[]}},{"type":"jsx","value":"<Playground>\n  <Text>\n    Follow-up after\n    <InputNumber\n      name=\"durationInDays\"\n      defaultValue={2}\n      size=\"small\"\n      inline={true}\n      maxLength={2}\n      align=\"center\"\n    />\n    days\n  </Text>\n</Playground>","position":{"start":{"line":120,"column":1,"offset":2285},"end":{"line":133,"column":14,"offset":2514},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Focus & blur","position":{"start":{"line":135,"column":4,"offset":2519},"end":{"line":135,"column":16,"offset":2531},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":2516},"end":{"line":135,"column":16,"offset":2531},"indent":[]}},{"type":"jsx","value":"<Playground>\n  {() => {\n    const inputNumberRef = React.createRef();\n    const focusInput = () => {\n      inputNumberRef.current.focus();\n    };\n    const blurInput = () => {\n      inputNumberRef.current.blur();\n    };\n    return (\n      <Content>\n        <InputNumber value={5} ref={inputNumberRef} />\n        <Button label=\"Focus input\" onClick={focusInput} />\n        <br />\n        <Button label=\"Blur input\" onClick={blurInput} />\n      </Content>\n    );\n  }}\n</Playground>","position":{"start":{"line":137,"column":1,"offset":2533},"end":{"line":155,"column":14,"offset":3012},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Using onValidation","position":{"start":{"line":157,"column":4,"offset":3017},"end":{"line":157,"column":22,"offset":3035},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":3014},"end":{"line":157,"column":22,"offset":3035},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you need to capture the error message and render it outside of the component.\nRead the ","position":{"start":{"line":159,"column":1,"offset":3037},"end":{"line":160,"column":10,"offset":3127},"indent":[1]}},{"type":"link","title":null,"url":"/components/input-validation","children":[{"type":"text","value":"InputValidation","position":{"start":{"line":160,"column":11,"offset":3128},"end":{"line":160,"column":26,"offset":3143},"indent":[]}}],"position":{"start":{"line":160,"column":10,"offset":3127},"end":{"line":160,"column":57,"offset":3174},"indent":[]}},{"type":"text","value":" documentation.","position":{"start":{"line":160,"column":57,"offset":3174},"end":{"line":160,"column":72,"offset":3189},"indent":[]}}],"position":{"start":{"line":159,"column":1,"offset":3037},"end":{"line":160,"column":72,"offset":3189},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"For more details about ","position":{"start":{"line":162,"column":1,"offset":3191},"end":{"line":162,"column":24,"offset":3214},"indent":[]}},{"type":"inlineCode","value":"validation","position":{"start":{"line":162,"column":24,"offset":3214},"end":{"line":162,"column":36,"offset":3226},"indent":[]}},{"type":"text","value":" using ","position":{"start":{"line":162,"column":36,"offset":3226},"end":{"line":162,"column":43,"offset":3233},"indent":[]}},{"type":"inlineCode","value":"Input","position":{"start":{"line":162,"column":43,"offset":3233},"end":{"line":162,"column":50,"offset":3240},"indent":[]}},{"type":"text","value":" components, see the\n","position":{"start":{"line":162,"column":50,"offset":3240},"end":{"line":163,"column":1,"offset":3261},"indent":[1]}},{"type":"link","title":null,"url":"/components/input-text/#validation-message","children":[{"type":"text","value":"InputText","position":{"start":{"line":163,"column":2,"offset":3262},"end":{"line":163,"column":11,"offset":3271},"indent":[]}}],"position":{"start":{"line":163,"column":1,"offset":3261},"end":{"line":163,"column":56,"offset":3316},"indent":[]}},{"type":"text","value":" documentation.","position":{"start":{"line":163,"column":56,"offset":3316},"end":{"line":163,"column":71,"offset":3331},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":3191},"end":{"line":163,"column":71,"offset":3331},"indent":[1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":166,"column":1,"offset":3334},"end":{"line":166,"column":31,"offset":3364},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":166,"column":31,"offset":3364}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { Playground, Props } from \"docz\";\nimport { ComponentStatus } from \"@jobber/docx\";\nimport { InputNumber } from \".\";\nimport { Text } from \"../Text\";\nimport { useState } from \"react\";\nimport { Button } from \"../Button\";\nimport { Content } from \"../Content\";\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"inputnumber\"\n    }}>{`InputNumber`}</h1>\n    <ComponentStatus stage=\"ready\" responsive=\"yes\" accessible=\"yes\" mdxType=\"ComponentStatus\" />\n    <p>{`Input number is used in forms that accept numbers as an answer.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { InputNumber } from \"@jobber/components/InputNumber\";\n`}</code></pre>\n    <Playground __position={1} __code={'<InputNumber defaultValue={7} max={11} min={0} placeholder=\\\"Number\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ComponentStatus,\n      InputNumber,\n      Text,\n      useState,\n      Button,\n      Content,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <InputNumber defaultValue={7} max={11} min={0} placeholder=\"Number\" mdxType=\"InputNumber\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"design--usage-guidelines\"\n    }}>{`Design & usage guidelines`}</h2>\n    <p>{`This is best suited for input data that benefits from being modified in\nincrements, such as quantity, price, or days (ie 2 days -> 3 days).`}</p>\n    <p>{`While some types of data may technically be numbers, they can be ill-suited for\nusing a number input. For example, phone numbers and credit card numbers provide\nno value to the user by offering an incrementer.`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={InputNumber} mdxType=\"Props\" />\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"controlled\"\n    }}>{`Controlled`}</h2>\n    <Playground __position={3} __code={'() => {\\n  const [value, setValue] = useState(30)\\n  return (\\n    <InputNumber\\n      value={value}\\n      max={32}\\n      min={0}\\n      onChange={setValue}\\n      placeholder=\\\"Age\\\"\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ComponentStatus,\n      InputNumber,\n      Text,\n      useState,\n      Button,\n      Content,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [value, setValue] = useState(30);\n        return <InputNumber value={value} max={32} min={0} onChange={setValue} placeholder=\"Age\" mdxType=\"InputNumber\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"states\"\n    }}>{`States`}</h2>\n    <h3 {...{\n      \"id\": \"disabled\"\n    }}>{`Disabled`}</h3>\n    <Playground __position={4} __code={'<InputNumber\\n  placeholder=\\\"SIN Number\\\"\\n  value={1234}\\n  disabled={true}\\n  name=\\\"sin\\\"\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ComponentStatus,\n      InputNumber,\n      Text,\n      useState,\n      Button,\n      Content,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <InputNumber placeholder=\"SIN Number\" value={1234} disabled={true} name=\"sin\" mdxType=\"InputNumber\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"read-only\"\n    }}>{`Read-only`}</h3>\n    <Playground __position={5} __code={'<InputNumber\\n  placeholder=\\\"Your pin number\\\"\\n  value={12345}\\n  readonly={true}\\n  name=\\\"pinNumber\\\"\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ComponentStatus,\n      InputNumber,\n      Text,\n      useState,\n      Button,\n      Content,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <InputNumber placeholder=\"Your pin number\" value={12345} readonly={true} name=\"pinNumber\" mdxType=\"InputNumber\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"invalid\"\n    }}>{`Invalid`}</h3>\n    <p>{`For more information about available `}<inlineCode parentName=\"p\">{`validations`}</inlineCode>{`, see the\n`}<a parentName=\"p\" {...{\n        \"href\": \"/components/input-text/#validation-message\"\n      }}>{`InputText`}</a>{` docs.`}</p>\n    <Playground __position={6} __code={'<InputNumber\\n  placeholder=\\\"Give a whole number\\\"\\n  defaultValue={1.1}\\n  invalid={true}\\n  name=\\\"wholeNumber\\\"\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ComponentStatus,\n      InputNumber,\n      Text,\n      useState,\n      Button,\n      Content,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <InputNumber placeholder=\"Give a whole number\" defaultValue={1.1} invalid={true} name=\"wholeNumber\" mdxType=\"InputNumber\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"sizes\"\n    }}>{`Sizes`}</h2>\n    <h3 {...{\n      \"id\": \"small\"\n    }}>{`Small`}</h3>\n    <Playground __position={7} __code={'<InputNumber name=\\\"smallField\\\" size=\\\"small\\\" placeholder=\\\"Duration\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ComponentStatus,\n      InputNumber,\n      Text,\n      useState,\n      Button,\n      Content,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <InputNumber name=\"smallField\" size=\"small\" placeholder=\"Duration\" mdxType=\"InputNumber\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"large\"\n    }}>{`Large`}</h3>\n    <Playground __position={8} __code={'<InputNumber\\n  name=\\\"largeField\\\"\\n  size=\\\"large\\\"\\n  placeholder=\\\"Duration but bigger\\\"\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ComponentStatus,\n      InputNumber,\n      Text,\n      useState,\n      Button,\n      Content,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <InputNumber name=\"largeField\" size=\"large\" placeholder=\"Duration but bigger\" mdxType=\"InputNumber\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"inline\"\n    }}>{`Inline`}</h2>\n    <Playground __position={9} __code={'<Text>\\n  Follow-up after\\n  <InputNumber\\n    name=\\\"durationInDays\\\"\\n    defaultValue={2}\\n    size=\\\"small\\\"\\n    inline={true}\\n    maxLength={2}\\n    align=\\\"center\\\"\\n  />\\n  days\\n</Text>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ComponentStatus,\n      InputNumber,\n      Text,\n      useState,\n      Button,\n      Content,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Text mdxType=\"Text\">\n    Follow-up after\n    <InputNumber name=\"durationInDays\" defaultValue={2} size=\"small\" inline={true} maxLength={2} align=\"center\" mdxType=\"InputNumber\" />\n    days\n  </Text>\n    </Playground>\n    <h2 {...{\n      \"id\": \"focus--blur\"\n    }}>{`Focus & blur`}</h2>\n    <Playground __position={10} __code={'() => {\\n  const inputNumberRef = React.createRef()\\n  const focusInput = () => {\\n    inputNumberRef.current.focus()\\n  }\\n  const blurInput = () => {\\n    inputNumberRef.current.blur()\\n  }\\n  return (\\n    <Content>\\n      <InputNumber value={5} ref={inputNumberRef} />\\n      <Button label=\\\"Focus input\\\" onClick={focusInput} />\\n      <br />\\n      <Button label=\\\"Blur input\\\" onClick={blurInput} />\\n    </Content>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ComponentStatus,\n      InputNumber,\n      Text,\n      useState,\n      Button,\n      Content,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const inputNumberRef = React.createRef();\n\n        const focusInput = () => {\n          inputNumberRef.current.focus();\n        };\n\n        const blurInput = () => {\n          inputNumberRef.current.blur();\n        };\n\n        return <Content mdxType=\"Content\">\n        <InputNumber value={5} ref={inputNumberRef} mdxType=\"InputNumber\" />\n        <Button label=\"Focus input\" onClick={focusInput} mdxType=\"Button\" />\n        <br />\n        <Button label=\"Blur input\" onClick={blurInput} mdxType=\"Button\" />\n      </Content>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"using-onvalidation\"\n    }}>{`Using onValidation`}</h2>\n    <p>{`If you need to capture the error message and render it outside of the component.\nRead the `}<a parentName=\"p\" {...{\n        \"href\": \"/components/input-validation\"\n      }}>{`InputValidation`}</a>{` documentation.`}</p>\n    <p>{`For more details about `}<inlineCode parentName=\"p\">{`validation`}</inlineCode>{` using `}<inlineCode parentName=\"p\">{`Input`}</inlineCode>{` components, see the\n`}<a parentName=\"p\" {...{\n        \"href\": \"/components/input-text/#validation-message\"\n      }}>{`InputText`}</a>{` documentation.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}