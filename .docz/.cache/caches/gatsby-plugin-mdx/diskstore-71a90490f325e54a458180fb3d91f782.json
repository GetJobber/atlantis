{"expireTime":9007200931831330000,"key":"gatsby-plugin-mdx-entire-payload-bfd09e38fde9afd515929306d335ba1a-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":114,"offset":115},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":117},"end":{"line":5,"column":29,"offset":145},"indent":[]}},{"type":"import","value":"import { Playground, Props } from \"docz\";\nimport { ComponentStatus } from \"@jobber/docx\";\nimport { CivilDate } from \"@std-proposal/temporal\";\nimport { FormatDate, strFormatDate } from \".\";\nimport { Text } from \"../Text\";","position":{"start":{"line":8,"column":1,"offset":148},"end":{"line":12,"column":32,"offset":368},"indent":[1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"FormatDate","position":{"start":{"line":14,"column":3,"offset":372},"end":{"line":14,"column":13,"offset":382},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":370},"end":{"line":14,"column":13,"offset":382},"indent":[]}},{"type":"jsx","value":"<ComponentStatus stage=\"pre\" responsive=\"yes\" accessible=\"yes\" />","position":{"start":{"line":16,"column":1,"offset":384},"end":{"line":16,"column":66,"offset":449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In Jobber a FormatDate is used to ensure that the date is displayed in the\nexpected format. No text styling is applied, this simply formats the date.","position":{"start":{"line":18,"column":1,"offset":451},"end":{"line":19,"column":75,"offset":600},"indent":[1]}}],"position":{"start":{"line":18,"column":1,"offset":451},"end":{"line":19,"column":75,"offset":600},"indent":[1]}},{"type":"code","lang":"ts","meta":null,"value":"import { FormatDate } from \"@jobber/components/FormatDate\";","position":{"start":{"line":21,"column":1,"offset":602},"end":{"line":23,"column":4,"offset":671},"indent":[1,1]}},{"type":"jsx","value":"<Playground>\n  <FormatDate date={new CivilDate(2020, 2, 26)} />\n</Playground>","position":{"start":{"line":25,"column":1,"offset":673},"end":{"line":27,"column":14,"offset":750},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Props","position":{"start":{"line":29,"column":4,"offset":755},"end":{"line":29,"column":9,"offset":760},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":752},"end":{"line":29,"column":9,"offset":760},"indent":[]}},{"type":"jsx","value":"<Props of={FormatDate} />","position":{"start":{"line":31,"column":1,"offset":762},"end":{"line":31,"column":26,"offset":787},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":33,"column":1,"offset":789},"end":{"line":33,"column":4,"offset":792},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Getting a string version","position":{"start":{"line":35,"column":4,"offset":797},"end":{"line":35,"column":28,"offset":821},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":794},"end":{"line":35,"column":28,"offset":821},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use strFormateDate if you need your formatted date as a string so it can be\npassed as an attribute that doesn't allow for a component.","position":{"start":{"line":37,"column":1,"offset":823},"end":{"line":38,"column":59,"offset":957},"indent":[1]}}],"position":{"start":{"line":37,"column":1,"offset":823},"end":{"line":38,"column":59,"offset":957},"indent":[1]}},{"type":"code","lang":"ts","meta":null,"value":"import { strFormatDate } from \"@jobber/components/FormatDate\";","position":{"start":{"line":40,"column":1,"offset":959},"end":{"line":42,"column":4,"offset":1031},"indent":[1,1]}},{"type":"jsx","value":"<Playground>\n  <Text>{strFormatDate(new Date())}</Text>\n</Playground>","position":{"start":{"line":44,"column":1,"offset":1033},"end":{"line":46,"column":14,"offset":1102},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Design & usage guidelines","position":{"start":{"line":48,"column":4,"offset":1107},"end":{"line":48,"column":29,"offset":1132},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":1104},"end":{"line":48,"column":29,"offset":1132},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use FormatDate to ensure that a date is represented as expected.","position":{"start":{"line":50,"column":1,"offset":1134},"end":{"line":50,"column":65,"offset":1198},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":1134},"end":{"line":50,"column":65,"offset":1198},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If there are additional text styling concerns, wrap FormatDate in a\n","position":{"start":{"line":52,"column":1,"offset":1200},"end":{"line":53,"column":1,"offset":1268},"indent":[1]}},{"type":"link","title":null,"url":"https://atlantis.getjobber.com/packages-components-src-text-text","children":[{"type":"text","value":"Text","position":{"start":{"line":53,"column":2,"offset":1269},"end":{"line":53,"column":6,"offset":1273},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1268},"end":{"line":53,"column":73,"offset":1340},"indent":[]}},{"type":"text","value":"\ncomponent.","position":{"start":{"line":53,"column":73,"offset":1340},"end":{"line":54,"column":11,"offset":1351},"indent":[1]}}],"position":{"start":{"line":52,"column":1,"offset":1200},"end":{"line":54,"column":11,"offset":1351},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If the formatted date is intended to be part of a heading, wrap FormatDate in a\n","position":{"start":{"line":56,"column":1,"offset":1353},"end":{"line":57,"column":1,"offset":1433},"indent":[1]}},{"type":"link","title":null,"url":"https://atlantis.getjobber.com/packages-components-src-heading-heading","children":[{"type":"text","value":"Heading","position":{"start":{"line":57,"column":2,"offset":1434},"end":{"line":57,"column":9,"offset":1441},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":1433},"end":{"line":57,"column":82,"offset":1514},"indent":[]}},{"type":"text","value":"\ncomponent.","position":{"start":{"line":57,"column":82,"offset":1514},"end":{"line":58,"column":11,"offset":1525},"indent":[1]}}],"position":{"start":{"line":56,"column":1,"offset":1353},"end":{"line":58,"column":11,"offset":1525},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you require a string instead of a component use strFormatDate.","position":{"start":{"line":60,"column":1,"offset":1527},"end":{"line":60,"column":66,"offset":1592},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":1527},"end":{"line":60,"column":66,"offset":1592},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":63,"column":1,"offset":1595},"end":{"line":63,"column":31,"offset":1625},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":63,"column":31,"offset":1625}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { Playground, Props } from \"docz\";\nimport { ComponentStatus } from \"@jobber/docx\";\nimport { CivilDate } from \"@std-proposal/temporal\";\nimport { FormatDate, strFormatDate } from \".\";\nimport { Text } from \"../Text\";\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"formatdate\"\n    }}>{`FormatDate`}</h1>\n    <ComponentStatus stage=\"pre\" responsive=\"yes\" accessible=\"yes\" mdxType=\"ComponentStatus\" />\n    <p>{`In Jobber a FormatDate is used to ensure that the date is displayed in the\nexpected format. No text styling is applied, this simply formats the date.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { FormatDate } from \"@jobber/components/FormatDate\";\n`}</code></pre>\n    <Playground __position={1} __code={'<FormatDate date={new CivilDate(2020, 2, 26)} />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ComponentStatus,\n      CivilDate,\n      FormatDate,\n      strFormatDate,\n      Text,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <FormatDate date={new CivilDate(2020, 2, 26)} mdxType=\"FormatDate\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={FormatDate} mdxType=\"Props\" />\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"getting-a-string-version\"\n    }}>{`Getting a string version`}</h2>\n    <p>{`Use strFormateDate if you need your formatted date as a string so it can be\npassed as an attribute that doesn't allow for a component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { strFormatDate } from \"@jobber/components/FormatDate\";\n`}</code></pre>\n    <Playground __position={3} __code={'<Text>{strFormatDate(new Date())}</Text>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ComponentStatus,\n      CivilDate,\n      FormatDate,\n      strFormatDate,\n      Text,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Text mdxType=\"Text\">{strFormatDate(new Date())}</Text>\n    </Playground>\n    <h2 {...{\n      \"id\": \"design--usage-guidelines\"\n    }}>{`Design & usage guidelines`}</h2>\n    <p>{`Use FormatDate to ensure that a date is represented as expected.`}</p>\n    <p>{`If there are additional text styling concerns, wrap FormatDate in a\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://atlantis.getjobber.com/packages-components-src-text-text\"\n      }}>{`Text`}</a>{`\ncomponent.`}</p>\n    <p>{`If the formatted date is intended to be part of a heading, wrap FormatDate in a\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://atlantis.getjobber.com/packages-components-src-heading-heading\"\n      }}>{`Heading`}</a>{`\ncomponent.`}</p>\n    <p>{`If you require a string instead of a component use strFormatDate.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}