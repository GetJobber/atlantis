{"expireTime":9007200931831372000,"key":"gatsby-plugin-mdx-entire-payload-3432c2c5a0c7a0ff6215de5290bd534f-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":114,"offset":115},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":117},"end":{"line":5,"column":29,"offset":145},"indent":[]}},{"type":"import","value":"import { Playground } from \"docz\";\nimport { useLiveAnnounce } from \"./\";\nimport { Button } from \"@jobber/components/Button\";","position":{"start":{"line":8,"column":1,"offset":148},"end":{"line":10,"column":52,"offset":272},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"useLiveAnnounce","position":{"start":{"line":12,"column":3,"offset":276},"end":{"line":12,"column":18,"offset":291},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":274},"end":{"line":12,"column":18,"offset":291},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Announce a message through the screen reader whenever a user does an action like\ndeletion or addition.","position":{"start":{"line":14,"column":1,"offset":293},"end":{"line":15,"column":22,"offset":395},"indent":[1]}}],"position":{"start":{"line":14,"column":1,"offset":293},"end":{"line":15,"column":22,"offset":395},"indent":[1]}},{"type":"code","lang":"ts","meta":null,"value":"import { useLiveAnnounce } from \"@jobber/hooks\";","position":{"start":{"line":17,"column":1,"offset":397},"end":{"line":19,"column":4,"offset":455},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Before you try this example, turn on Voice Over (Mac), or a windows equivalent.\nYou can turn on Voice over by holding ","position":{"start":{"line":21,"column":1,"offset":457},"end":{"line":22,"column":39,"offset":575},"indent":[1]}},{"type":"inlineCode","value":"Command ⌘","position":{"start":{"line":22,"column":39,"offset":575},"end":{"line":22,"column":50,"offset":586},"indent":[]}},{"type":"text","value":" and press the finger print key\n3 times (fast).","position":{"start":{"line":22,"column":50,"offset":586},"end":{"line":23,"column":16,"offset":633},"indent":[1]}}],"position":{"start":{"line":21,"column":1,"offset":457},"end":{"line":23,"column":16,"offset":633},"indent":[1,1]}},{"type":"jsx","value":"<Playground>\n  {() => {\n    const { liveAnnounce } = useLiveAnnounce();\n    return (\n      <>\n        <Button\n          label=\"Delete\"\n          onClick={() => liveAnnounce(\"You have clicked the Delete button\")}\n        />{\" \"}\n        <Button\n          label=\"Add\"\n          onClick={() => liveAnnounce(\"You have clicked the Add button\")}\n        />\n      </>\n    );\n  }}\n</Playground>","position":{"start":{"line":25,"column":1,"offset":635},"end":{"line":41,"column":14,"offset":1021},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":44,"column":1,"offset":1024},"end":{"line":44,"column":31,"offset":1054},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":44,"column":31,"offset":1054}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { Playground } from \"docz\";\nimport { useLiveAnnounce } from \"./\";\nimport { Button } from \"@jobber/components/Button\";\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"useliveannounce\"\n    }}>{`useLiveAnnounce`}</h1>\n    <p>{`Announce a message through the screen reader whenever a user does an action like\ndeletion or addition.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { useLiveAnnounce } from \"@jobber/hooks\";\n`}</code></pre>\n    <p>{`Before you try this example, turn on Voice Over (Mac), or a windows equivalent.\nYou can turn on Voice over by holding `}<inlineCode parentName=\"p\">{`Command ⌘`}</inlineCode>{` and press the finger print key\n3 times (fast).`}</p>\n    <Playground __position={0} __code={'() => {\\n  const { liveAnnounce } = useLiveAnnounce()\\n  return (\\n    <>\\n      <Button\\n        label=\\\"Delete\\\"\\n        onClick={() => liveAnnounce(\\'You have clicked the Delete button\\')}\\n      />{\\' \\'}\\n      <Button\\n        label=\\\"Add\\\"\\n        onClick={() => liveAnnounce(\\'You have clicked the Add button\\')}\\n      />\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      useLiveAnnounce,\n      Button,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const {\n          liveAnnounce\n        } = useLiveAnnounce();\n        return <>\n        <Button label=\"Delete\" onClick={() => liveAnnounce(\"You have clicked the Delete button\")} mdxType=\"Button\" />{\" \"}\n        <Button label=\"Add\" onClick={() => liveAnnounce(\"You have clicked the Add button\")} mdxType=\"Button\" />\n      </>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}