{"expireTime":9007200931831375000,"key":"gatsby-plugin-mdx-entire-payload-147b4d756d45ea7aafb2bd02f210292e-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":114,"offset":115},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":117},"end":{"line":5,"column":29,"offset":145},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"ESLint Config ","position":{"start":{"line":8,"column":3,"offset":150},"end":{"line":8,"column":17,"offset":164},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"aka Dip Lint","position":{"start":{"line":8,"column":18,"offset":165},"end":{"line":8,"column":30,"offset":177},"indent":[]}}],"position":{"start":{"line":8,"column":17,"offset":164},"end":{"line":8,"column":31,"offset":178},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":148},"end":{"line":8,"column":31,"offset":178},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Installing","position":{"start":{"line":10,"column":4,"offset":183},"end":{"line":10,"column":14,"offset":193},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":180},"end":{"line":10,"column":14,"offset":193},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"npm install --save-dev @jobber/eslint-config","position":{"start":{"line":12,"column":1,"offset":195},"end":{"line":12,"column":47,"offset":241},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":195},"end":{"line":12,"column":47,"offset":241},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Seed your ","position":{"start":{"line":14,"column":1,"offset":243},"end":{"line":14,"column":11,"offset":253},"indent":[]}},{"type":"inlineCode","value":".eslintrc.js","position":{"start":{"line":14,"column":11,"offset":253},"end":{"line":14,"column":25,"offset":267},"indent":[]}},{"type":"text","value":" with:","position":{"start":{"line":14,"column":25,"offset":267},"end":{"line":14,"column":31,"offset":273},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":243},"end":{"line":14,"column":31,"offset":273},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"require(\"@jobber/eslint-config/patch-eslint-plugin-resolution.js\");\n\nmodule.exports = {\n  extends: [\"@jobber/eslint-config\"],\n  settings: {},\n  rules: {},\n};","position":{"start":{"line":16,"column":1,"offset":275},"end":{"line":24,"column":4,"offset":442},"indent":[1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":27,"column":1,"offset":445},"end":{"line":27,"column":31,"offset":475},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":27,"column":31,"offset":475}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"eslint-config-aka-dip-lint\"\n    }}>{`ESLint Config `}<em parentName=\"h1\">{`aka Dip Lint`}</em></h1>\n    <h2 {...{\n      \"id\": \"installing\"\n    }}>{`Installing`}</h2>\n    <p><inlineCode parentName=\"p\">{`npm install --save-dev @jobber/eslint-config`}</inlineCode></p>\n    <p>{`Seed your `}<inlineCode parentName=\"p\">{`.eslintrc.js`}</inlineCode>{` with:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`require(\"@jobber/eslint-config/patch-eslint-plugin-resolution.js\");\n\nmodule.exports = {\n  extends: [\"@jobber/eslint-config\"],\n  settings: {},\n  rules: {},\n};\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}