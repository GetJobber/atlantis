{"expireTime":9007200931831330000,"key":"gatsby-plugin-mdx-entire-payload-a5e2de3184d85a985b4aa1f1ea6ad6ff-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":114,"offset":115},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":117},"end":{"line":5,"column":29,"offset":145},"indent":[]}},{"type":"import","value":"import { Playground, Props } from \"docz\";\nimport { ComponentStatus } from \"@jobber/docx\";\nimport { useState } from \"react\";","position":{"start":{"line":8,"column":1,"offset":148},"end":{"line":10,"column":34,"offset":271},"indent":[1,1]}},{"type":"import","value":"import { Drawer, DrawerGrid } from \".\";\nimport { Content } from \"@jobber/components/Content\";\nimport { Button } from \"@jobber/components/Button\";\nimport { Text } from \"../Text\";\nimport { Page } from \"../Page\";","position":{"start":{"line":12,"column":1,"offset":273},"end":{"line":16,"column":32,"offset":482},"indent":[1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Drawer","position":{"start":{"line":18,"column":3,"offset":486},"end":{"line":18,"column":9,"offset":492},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":484},"end":{"line":18,"column":9,"offset":492},"indent":[]}},{"type":"jsx","value":"<ComponentStatus stage=\"pre\" responsive=\"yes\" accessible=\"no\" />","position":{"start":{"line":20,"column":1,"offset":494},"end":{"line":20,"column":65,"offset":558},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Drawers are temporary sidebars that allow users to view supplementary content.\nUsers can interact with the main content while the drawer is visible.","position":{"start":{"line":22,"column":1,"offset":560},"end":{"line":23,"column":70,"offset":708},"indent":[1]}}],"position":{"start":{"line":22,"column":1,"offset":560},"end":{"line":23,"column":70,"offset":708},"indent":[1]}},{"type":"code","lang":"ts","meta":null,"value":"import { Page } from \"@jobber/components/Page\";","position":{"start":{"line":25,"column":1,"offset":710},"end":{"line":27,"column":4,"offset":767},"indent":[1,1]}},{"type":"jsx","value":"<Playground>\n  {() => {\n    const [drawerOpen, setDrawerOpen] = useState(true);\n    return(\n      <DrawerGrid>\n        <Page\n          title=\"Page\"\n          width=\"fill\"\n          intro=\"\"\n        >\n          <Content>\n            <Button\n              label=\"Toggle Drawer\"\n              ariaControls=\"drawer-element\"\n              onClick={() => setDrawerOpen(!drawerOpen)}\n            />\n            <Text>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</Text>\n          </Content>\n        </Page>\n        <Drawer id=\"drawer-element\" title=\"Drawer\" open={drawerOpen} onRequestClose={() => setDrawerOpen(!drawerOpen)}>\n          <Content>\n            <Text>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?</Text>\n          </Content>\n        </Drawer>\n      </DrawerGrid>)\n  }}","position":{"start":{"line":29,"column":1,"offset":769},"end":{"line":54,"column":5,"offset":2764},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"</Playground>","position":{"start":{"line":56,"column":1,"offset":2766},"end":{"line":56,"column":14,"offset":2779},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Props","position":{"start":{"line":58,"column":4,"offset":2784},"end":{"line":58,"column":9,"offset":2789},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":2781},"end":{"line":58,"column":9,"offset":2789},"indent":[]}},{"type":"jsx","value":"<Props of={Drawer} />","position":{"start":{"line":60,"column":1,"offset":2791},"end":{"line":60,"column":22,"offset":2812},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Accessibility","position":{"start":{"line":62,"column":4,"offset":2817},"end":{"line":62,"column":17,"offset":2830},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":2814},"end":{"line":62,"column":17,"offset":2830},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Drawer is built using an\n","position":{"start":{"line":64,"column":1,"offset":2832},"end":{"line":65,"column":1,"offset":2857},"indent":[1]}},{"type":"link","title":null,"url":"https://www.w3.org/TR/html52/sections.html#the-aside-element","children":[{"type":"inlineCode","value":"aside","position":{"start":{"line":65,"column":2,"offset":2858},"end":{"line":65,"column":9,"offset":2865},"indent":[]}},{"type":"text","value":" element","position":{"start":{"line":65,"column":9,"offset":2865},"end":{"line":65,"column":17,"offset":2873},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":2857},"end":{"line":65,"column":80,"offset":2936},"indent":[]}},{"type":"text","value":"\nto indicate to assistive technology that the content within the Drawer is:","position":{"start":{"line":65,"column":80,"offset":2936},"end":{"line":66,"column":75,"offset":3011},"indent":[1]}}],"position":{"start":{"line":64,"column":1,"offset":2832},"end":{"line":66,"column":75,"offset":3011},"indent":[1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"tangentially related to the content of the parenting sectioning content, and\nwhich could be considered separate from that content. (W3 Org)","position":{"start":{"line":68,"column":3,"offset":3015},"end":{"line":69,"column":65,"offset":3156},"indent":[3]}}],"position":{"start":{"line":68,"column":3,"offset":3015},"end":{"line":69,"column":65,"offset":3156},"indent":[3]}}],"position":{"start":{"line":68,"column":1,"offset":3013},"end":{"line":69,"column":65,"offset":3156},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"For drawer toggle elements, use ","position":{"start":{"line":71,"column":1,"offset":3158},"end":{"line":71,"column":33,"offset":3190},"indent":[]}},{"type":"inlineCode","value":"aria-controls","position":{"start":{"line":71,"column":33,"offset":3190},"end":{"line":71,"column":48,"offset":3205},"indent":[]}},{"type":"text","value":" attribute on the trigger and an\n","position":{"start":{"line":71,"column":48,"offset":3205},"end":{"line":72,"column":1,"offset":3238},"indent":[1]}},{"type":"inlineCode","value":"id","position":{"start":{"line":72,"column":1,"offset":3238},"end":{"line":72,"column":5,"offset":3242},"indent":[]}},{"type":"text","value":" for the drawer element.","position":{"start":{"line":72,"column":5,"offset":3242},"end":{"line":72,"column":29,"offset":3266},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":3158},"end":{"line":72,"column":29,"offset":3266},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Related components","position":{"start":{"line":74,"column":4,"offset":3271},"end":{"line":74,"column":22,"offset":3289},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":3268},"end":{"line":74,"column":22,"offset":3289},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Drawer is similar in some regards to Card and Modal.","position":{"start":{"line":76,"column":1,"offset":3291},"end":{"line":76,"column":53,"offset":3343},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":3291},"end":{"line":76,"column":53,"offset":3343},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For an experience where the user can only interact with one \"mode\" of content\n(the main view ","position":{"start":{"line":78,"column":1,"offset":3345},"end":{"line":79,"column":16,"offset":3438},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"or","position":{"start":{"line":79,"column":17,"offset":3439},"end":{"line":79,"column":19,"offset":3441},"indent":[]}}],"position":{"start":{"line":79,"column":16,"offset":3438},"end":{"line":79,"column":20,"offset":3442},"indent":[]}},{"type":"text","value":" the contents of the component) use\n","position":{"start":{"line":79,"column":20,"offset":3442},"end":{"line":80,"column":1,"offset":3478},"indent":[1]}},{"type":"link","title":null,"url":"https://atlantis.getjobber.com/components/modal","children":[{"type":"text","value":"Modal.","position":{"start":{"line":80,"column":2,"offset":3479},"end":{"line":80,"column":8,"offset":3485},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":3478},"end":{"line":80,"column":58,"offset":3535},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":3345},"end":{"line":80,"column":58,"offset":3535},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For an inline grouping of content that is relevant within the main view and\nnon-dismissible, use ","position":{"start":{"line":82,"column":1,"offset":3537},"end":{"line":83,"column":22,"offset":3634},"indent":[1]}},{"type":"link","title":null,"url":"https://atlantis.getjobber.com/components/modal","children":[{"type":"text","value":"Card.","position":{"start":{"line":83,"column":23,"offset":3635},"end":{"line":83,"column":28,"offset":3640},"indent":[]}}],"position":{"start":{"line":83,"column":22,"offset":3634},"end":{"line":83,"column":78,"offset":3690},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":3537},"end":{"line":83,"column":78,"offset":3690},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"DrawerGrid (Experimental)","position":{"start":{"line":85,"column":5,"offset":3696},"end":{"line":85,"column":30,"offset":3721},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":3692},"end":{"line":85,"column":30,"offset":3721},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A ","position":{"start":{"line":87,"column":1,"offset":3723},"end":{"line":87,"column":3,"offset":3725},"indent":[]}},{"type":"inlineCode","value":"DrawerGrid","position":{"start":{"line":87,"column":3,"offset":3725},"end":{"line":87,"column":15,"offset":3737},"indent":[]}},{"type":"text","value":" wraps the content and the drawer component. It allows the content\nto fill the available space when a user toggles the drawer.","position":{"start":{"line":87,"column":15,"offset":3737},"end":{"line":88,"column":60,"offset":3863},"indent":[1]}}],"position":{"start":{"line":87,"column":1,"offset":3723},"end":{"line":88,"column":60,"offset":3863},"indent":[1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":91,"column":1,"offset":3866},"end":{"line":91,"column":31,"offset":3896},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":91,"column":31,"offset":3896}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { Playground, Props } from \"docz\";\nimport { ComponentStatus } from \"@jobber/docx\";\nimport { useState } from \"react\";\nimport { Drawer, DrawerGrid } from \".\";\nimport { Content } from \"@jobber/components/Content\";\nimport { Button } from \"@jobber/components/Button\";\nimport { Text } from \"../Text\";\nimport { Page } from \"../Page\";\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"drawer\"\n    }}>{`Drawer`}</h1>\n    <ComponentStatus stage=\"pre\" responsive=\"yes\" accessible=\"no\" mdxType=\"ComponentStatus\" />\n    <p>{`Drawers are temporary sidebars that allow users to view supplementary content.\nUsers can interact with the main content while the drawer is visible.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { Page } from \"@jobber/components/Page\";\n`}</code></pre>\n    <Playground __position={1} __code={'() => {\\n  const [drawerOpen, setDrawerOpen] = useState(true)\\n  return (\\n    <DrawerGrid>\\n      <Page title=\\\"Page\\\" width=\\\"fill\\\" intro=\\\"\\\">\\n        <Content>\\n          <Button\\n            label=\\\"Toggle Drawer\\\"\\n            ariaControls=\\\"drawer-element\\\"\\n            onClick={() => setDrawerOpen(!drawerOpen)}\\n          />\\n          <Text>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\\n            enim ad minim veniam, quis nostrud exercitation ullamco laboris\\n            nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\\n            reprehenderit in voluptate velit esse cillum dolore eu fugiat\\n            nulla pariatur. Excepteur sint occaecat cupidatat non proident,\\n            sunt in culpa qui officia deserunt mollit anim id est laborum.\\n          </Text>\\n        </Content>\\n      </Page>\\n      <Drawer\\n        id=\\\"drawer-element\\\"\\n        title=\\\"Drawer\\\"\\n        open={drawerOpen}\\n        onRequestClose={() => setDrawerOpen(!drawerOpen)}\\n      >\\n        <Content>\\n          <Text>\\n            Sed ut perspiciatis unde omnis iste natus error sit voluptatem\\n            accusantium doloremque laudantium, totam rem aperiam, eaque ipsa\\n            quae ab illo inventore veritatis et quasi architecto beatae vitae\\n            dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit\\n            aspernatur aut odit aut fugit, sed quia consequuntur magni dolores\\n            eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam\\n            est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci\\n            velit, sed quia non numquam eius modi tempora incidunt ut labore\\n            et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima\\n            veniam, quis nostrum exercitationem ullam corporis suscipit\\n            laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem\\n            vel eum iure reprehenderit qui in ea voluptate velit esse quam\\n            nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo\\n            voluptas nulla pariatur?\\n          </Text>\\n        </Content>\\n      </Drawer>\\n    </DrawerGrid>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ComponentStatus,\n      useState,\n      Drawer,\n      DrawerGrid,\n      Content,\n      Button,\n      Text,\n      Page,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [drawerOpen, setDrawerOpen] = useState(true);\n        return <DrawerGrid mdxType=\"DrawerGrid\">\n        <Page title=\"Page\" width=\"fill\" intro=\"\" mdxType=\"Page\">\n          <Content mdxType=\"Content\">\n            <Button label=\"Toggle Drawer\" ariaControls=\"drawer-element\" onClick={() => setDrawerOpen(!drawerOpen)} mdxType=\"Button\" />\n            <Text mdxType=\"Text\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</Text>\n          </Content>\n        </Page>\n        <Drawer id=\"drawer-element\" title=\"Drawer\" open={drawerOpen} onRequestClose={() => setDrawerOpen(!drawerOpen)} mdxType=\"Drawer\">\n          <Content mdxType=\"Content\">\n            <Text mdxType=\"Text\">Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?</Text>\n          </Content>\n        </Drawer>\n      </DrawerGrid>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Drawer} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"accessibility\"\n    }}>{`Accessibility`}</h2>\n    <p>{`Drawer is built using an\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.w3.org/TR/html52/sections.html#the-aside-element\"\n      }}><inlineCode parentName=\"a\">{`aside`}</inlineCode>{` element`}</a>{`\nto indicate to assistive technology that the content within the Drawer is:`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`tangentially related to the content of the parenting sectioning content, and\nwhich could be considered separate from that content. (W3 Org)`}</p>\n    </blockquote>\n    <p>{`For drawer toggle elements, use `}<inlineCode parentName=\"p\">{`aria-controls`}</inlineCode>{` attribute on the trigger and an\n`}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` for the drawer element.`}</p>\n    <h2 {...{\n      \"id\": \"related-components\"\n    }}>{`Related components`}</h2>\n    <p>{`Drawer is similar in some regards to Card and Modal.`}</p>\n    <p>{`For an experience where the user can only interact with one \"mode\" of content\n(the main view `}<em parentName=\"p\">{`or`}</em>{` the contents of the component) use\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://atlantis.getjobber.com/components/modal\"\n      }}>{`Modal.`}</a></p>\n    <p>{`For an inline grouping of content that is relevant within the main view and\nnon-dismissible, use `}<a parentName=\"p\" {...{\n        \"href\": \"https://atlantis.getjobber.com/components/modal\"\n      }}>{`Card.`}</a></p>\n    <h3 {...{\n      \"id\": \"drawergrid-experimental\"\n    }}>{`DrawerGrid (Experimental)`}</h3>\n    <p>{`A `}<inlineCode parentName=\"p\">{`DrawerGrid`}</inlineCode>{` wraps the content and the drawer component. It allows the content\nto fill the available space when a user toggles the drawer.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}