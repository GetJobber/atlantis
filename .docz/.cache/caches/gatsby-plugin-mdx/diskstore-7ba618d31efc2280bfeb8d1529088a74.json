{"expireTime":9007200931831330000,"key":"gatsby-plugin-mdx-entire-payload-414a6ae50a7e7b8d06120154f11128d6-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":114,"offset":115},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":117},"end":{"line":5,"column":29,"offset":145},"indent":[]}},{"type":"import","value":"import { ArgsTable, Canvas, Meta, Story } from \"@storybook/addon-docs\";\nimport { CivilTime } from \"@std-proposal/temporal\";\nimport { FormatTime } from \".\";","position":{"start":{"line":7,"column":1,"offset":147},"end":{"line":9,"column":32,"offset":302},"indent":[1,1]}},{"type":"jsx","value":"<Meta title=\"Components/FormatTime\" component={FormatTime} />","position":{"start":{"line":11,"column":1,"offset":304},"end":{"line":11,"column":62,"offset":365},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"FormatTime","position":{"start":{"line":13,"column":3,"offset":369},"end":{"line":13,"column":13,"offset":379},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":367},"end":{"line":13,"column":13,"offset":379},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In Jobber a FormatTime is used to ensure that time is displayed in the expected\nformat. No text styling is applied, this simply formats the text.","position":{"start":{"line":15,"column":1,"offset":381},"end":{"line":16,"column":66,"offset":526},"indent":[1]}}],"position":{"start":{"line":15,"column":1,"offset":381},"end":{"line":16,"column":66,"offset":526},"indent":[1]}},{"type":"code","lang":"ts","meta":null,"value":"import { FormatTime } from \"@jobber/components/FormatTime\";","position":{"start":{"line":18,"column":1,"offset":528},"end":{"line":20,"column":4,"offset":597},"indent":[1,1]}},{"type":"jsx","value":"<Canvas>\n  <Story\n    name=\"FormatTime\"\n    args={{\n      time: new CivilTime(2, 35),\n    }}\n  >\n    {args => (\n      <>\n        <FormatTime {...args} />\n        -\n        <FormatTime {...args} time={new CivilTime(18, 35)} />\n      </>\n    )}\n  </Story>\n</Canvas>","position":{"start":{"line":22,"column":1,"offset":599},"end":{"line":37,"column":10,"offset":862},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Props","position":{"start":{"line":39,"column":4,"offset":867},"end":{"line":39,"column":9,"offset":872},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":864},"end":{"line":39,"column":9,"offset":872},"indent":[]}},{"type":"jsx","value":"<ArgsTable of={FormatTime} story=\"FormatTime\" />","position":{"start":{"line":41,"column":1,"offset":874},"end":{"line":41,"column":49,"offset":922},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":43,"column":1,"offset":924},"end":{"line":43,"column":4,"offset":927},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Specify format","position":{"start":{"line":45,"column":4,"offset":932},"end":{"line":45,"column":18,"offset":946},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":929},"end":{"line":45,"column":18,"offset":946},"indent":[]}},{"type":"jsx","value":"<Canvas>\n  <FormatTime time={new CivilTime(2, 35)} use24HourClock={true} />\n  -\n  <FormatTime time={new CivilTime(18, 35)} use24HourClock={true} />\n  <br />\n  <FormatTime time={new CivilTime(2, 35)} use24HourClock={false} />\n  -\n  <FormatTime time={new CivilTime(18, 35)} use24HourClock={false} />\n</Canvas>","position":{"start":{"line":47,"column":1,"offset":948},"end":{"line":55,"column":10,"offset":1255},"indent":[1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":58,"column":1,"offset":1258},"end":{"line":58,"column":31,"offset":1288},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":58,"column":31,"offset":1288}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { ArgsTable, Canvas, Meta, Story } from \"@storybook/addon-docs\";\nimport { CivilTime } from \"@std-proposal/temporal\";\nimport { FormatTime } from \".\";\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Meta title=\"Components/FormatTime\" component={FormatTime} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"formattime\"\n    }}>{`FormatTime`}</h1>\n    <p>{`In Jobber a FormatTime is used to ensure that time is displayed in the expected\nformat. No text styling is applied, this simply formats the text.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { FormatTime } from \"@jobber/components/FormatTime\";\n`}</code></pre>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"FormatTime\" args={{\n        time: new CivilTime(2, 35)\n      }} mdxType=\"Story\">\n    {args => <>\n        <FormatTime {...args} mdxType=\"FormatTime\" />\n        -\n        <FormatTime {...args} time={new CivilTime(18, 35)} mdxType=\"FormatTime\" />\n      </>}\n  </Story>\n    </Canvas>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <ArgsTable of={FormatTime} story=\"FormatTime\" mdxType=\"ArgsTable\" />\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"specify-format\"\n    }}>{`Specify format`}</h2>\n    <Canvas mdxType=\"Canvas\">\n  <FormatTime time={new CivilTime(2, 35)} use24HourClock={true} mdxType=\"FormatTime\" />\n  -\n  <FormatTime time={new CivilTime(18, 35)} use24HourClock={true} mdxType=\"FormatTime\" />\n  <br />\n  <FormatTime time={new CivilTime(2, 35)} use24HourClock={false} mdxType=\"FormatTime\" />\n  -\n  <FormatTime time={new CivilTime(18, 35)} use24HourClock={false} mdxType=\"FormatTime\" />\n    </Canvas>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}