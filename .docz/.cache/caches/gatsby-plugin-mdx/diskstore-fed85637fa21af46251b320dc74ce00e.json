{"expireTime":9007200931831381000,"key":"gatsby-plugin-mdx-entire-payload-34acc1038759cc2da20c152d8b683dd7-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":114,"offset":115},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":117},"end":{"line":5,"column":29,"offset":145},"indent":[]}},{"type":"import","value":"import { ArgsTable, Canvas, Meta, Story } from \"@storybook/addon-docs\";\nimport {\n  Body,\n  Cell,\n  CellCurrency,\n  CellNumeric,\n  Footer,\n  Header,\n  Row,\n  Table,\n} from \".\";","position":{"start":{"line":7,"column":1,"offset":147},"end":{"line":17,"column":12,"offset":322},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<Meta title=\"Components/Table\" component={Table} />","position":{"start":{"line":19,"column":1,"offset":324},"end":{"line":19,"column":52,"offset":375},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Table","position":{"start":{"line":21,"column":3,"offset":379},"end":{"line":21,"column":8,"offset":384},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":377},"end":{"line":21,"column":8,"offset":384},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Tables are used to organize and display tabular data to users.","position":{"start":{"line":23,"column":1,"offset":386},"end":{"line":23,"column":63,"offset":448},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":386},"end":{"line":23,"column":63,"offset":448},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In addition to the base ","position":{"start":{"line":25,"column":1,"offset":450},"end":{"line":25,"column":25,"offset":474},"indent":[]}},{"type":"inlineCode","value":"Table","position":{"start":{"line":25,"column":25,"offset":474},"end":{"line":25,"column":32,"offset":481},"indent":[]}},{"type":"text","value":" component, there are additional ","position":{"start":{"line":25,"column":32,"offset":481},"end":{"line":25,"column":65,"offset":514},"indent":[]}},{"type":"inlineCode","value":"Header","position":{"start":{"line":25,"column":65,"offset":514},"end":{"line":25,"column":73,"offset":522},"indent":[]}},{"type":"text","value":",\n","position":{"start":{"line":25,"column":73,"offset":522},"end":{"line":26,"column":1,"offset":524},"indent":[1]}},{"type":"inlineCode","value":"Body","position":{"start":{"line":26,"column":1,"offset":524},"end":{"line":26,"column":7,"offset":530},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":26,"column":7,"offset":530},"end":{"line":26,"column":9,"offset":532},"indent":[]}},{"type":"inlineCode","value":"Footer","position":{"start":{"line":26,"column":9,"offset":532},"end":{"line":26,"column":17,"offset":540},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":26,"column":17,"offset":540},"end":{"line":26,"column":19,"offset":542},"indent":[]}},{"type":"inlineCode","value":"Row","position":{"start":{"line":26,"column":19,"offset":542},"end":{"line":26,"column":24,"offset":547},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":26,"column":24,"offset":547},"end":{"line":26,"column":29,"offset":552},"indent":[]}},{"type":"inlineCode","value":"Cell","position":{"start":{"line":26,"column":29,"offset":552},"end":{"line":26,"column":35,"offset":558},"indent":[]}},{"type":"text","value":" each of which is used to construct a\ncompliant table.","position":{"start":{"line":26,"column":35,"offset":558},"end":{"line":27,"column":17,"offset":612},"indent":[1]}}],"position":{"start":{"line":25,"column":1,"offset":450},"end":{"line":27,"column":17,"offset":612},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Multiple ","position":{"start":{"line":29,"column":1,"offset":614},"end":{"line":29,"column":10,"offset":623},"indent":[]}},{"type":"link","title":null,"url":"#cell-types","children":[{"type":"text","value":"Cell types","position":{"start":{"line":29,"column":11,"offset":624},"end":{"line":29,"column":21,"offset":634},"indent":[]}}],"position":{"start":{"line":29,"column":10,"offset":623},"end":{"line":29,"column":35,"offset":648},"indent":[]}},{"type":"text","value":" are provided for common formats.","position":{"start":{"line":29,"column":35,"offset":648},"end":{"line":29,"column":68,"offset":681},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":614},"end":{"line":29,"column":68,"offset":681},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"import {\n  Table,\n  Header,\n  Body,\n  Footer,\n  Row,\n  Cell,\n} from \"@jobber/components/Table\";","position":{"start":{"line":31,"column":1,"offset":683},"end":{"line":40,"column":4,"offset":788},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<Canvas>\n  <Story name=\"Table\">\n    {args => (\n      <Table {...args}>\n        <Header>\n          <Cell>Ship</Cell>\n          <Cell>Class</Cell>\n          <Cell align=\"right\">Cost</Cell>\n          <Cell align=\"right\">Crew</Cell>\n        </Header>\n        <Body>\n          <Row>\n            <Cell>Nostromo</Cell>\n            <Cell>Towing Vehicle</Cell>\n            <CellCurrency value={42000000} />\n            <CellNumeric value={7} />\n          </Row>\n          <Row>\n            <Cell>Rodger Young</Cell>\n            <Cell>Corvette Transport</Cell>\n            <Cell />\n            <CellNumeric value={200} />\n          </Row>\n          <Row>\n            <Cell>USS Enterprise</Cell>\n            <Cell>Constitution</Cell>\n            <Cell />\n            <CellNumeric value={205} />\n          </Row>\n        </Body>\n        <Footer>\n          <Cell />\n          <Cell />\n          <Cell />\n          <CellNumeric value={412} />\n        </Footer>\n      </Table>\n    )}\n  </Story>\n</Canvas>","position":{"start":{"line":42,"column":1,"offset":790},"end":{"line":81,"column":10,"offset":1779},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Design & usage guidelines","position":{"start":{"line":83,"column":4,"offset":1784},"end":{"line":83,"column":29,"offset":1809},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":1781},"end":{"line":83,"column":29,"offset":1809},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The Table component is a great solution when you need to allow the user to\ncompare data across items. It's a tried-and-true means of data visualization\nthat can make reports easier to read.","position":{"start":{"line":85,"column":1,"offset":1811},"end":{"line":87,"column":38,"offset":2000},"indent":[1,1]}}],"position":{"start":{"line":85,"column":1,"offset":1811},"end":{"line":87,"column":38,"offset":2000},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"A best practice in Table presentation is to ensure that all columns with\nnumerical data (and their headers) round to the same decimal point, and are\nright-aligned. This makes it much easier for the reader to quickly parse large\ndistinctions in dollar amounts, inventory counts, and other key business data.","position":{"start":{"line":89,"column":1,"offset":2002},"end":{"line":92,"column":79,"offset":2308},"indent":[1,1,1]}}],"position":{"start":{"line":89,"column":1,"offset":2002},"end":{"line":92,"column":79,"offset":2308},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To list more complex collections of information (such as multi-line content like\na detailed property address), you may want to consider the\n","position":{"start":{"line":94,"column":1,"offset":2310},"end":{"line":96,"column":1,"offset":2450},"indent":[1,1]}},{"type":"link","title":null,"url":"https://atlantis.getjobber.com/components/list","children":[{"type":"text","value":"List","position":{"start":{"line":96,"column":2,"offset":2451},"end":{"line":96,"column":6,"offset":2455},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":2450},"end":{"line":96,"column":55,"offset":2504},"indent":[]}},{"type":"text","value":" component. If you have a\nsmall list of information with a 1:1 label-to-data relationship (for example,\nthe issued and due dates on an invoice), consider using\n","position":{"start":{"line":96,"column":55,"offset":2504},"end":{"line":99,"column":1,"offset":2664},"indent":[1,1,1]}},{"type":"link","title":null,"url":"https://atlantis.getjobber.com/components/description-list","children":[{"type":"text","value":"DescriptionList","position":{"start":{"line":99,"column":2,"offset":2665},"end":{"line":99,"column":17,"offset":2680},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":2664},"end":{"line":99,"column":78,"offset":2741},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":99,"column":78,"offset":2741},"end":{"line":99,"column":79,"offset":2742},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":2310},"end":{"line":99,"column":79,"offset":2742},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Props","position":{"start":{"line":101,"column":4,"offset":2747},"end":{"line":101,"column":9,"offset":2752},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":2744},"end":{"line":101,"column":9,"offset":2752},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Table components do not currently accept options.","position":{"start":{"line":103,"column":1,"offset":2754},"end":{"line":103,"column":50,"offset":2803},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":2754},"end":{"line":103,"column":50,"offset":2803},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":105,"column":1,"offset":2805},"end":{"line":105,"column":4,"offset":2808},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Cell types","position":{"start":{"line":107,"column":4,"offset":2813},"end":{"line":107,"column":14,"offset":2823},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":2810},"end":{"line":107,"column":14,"offset":2823},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Cell","position":{"start":{"line":109,"column":5,"offset":2829},"end":{"line":109,"column":9,"offset":2833},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":2825},"end":{"line":109,"column":9,"offset":2833},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A ","position":{"start":{"line":111,"column":1,"offset":2835},"end":{"line":111,"column":3,"offset":2837},"indent":[]}},{"type":"inlineCode","value":"Cell","position":{"start":{"line":111,"column":3,"offset":2837},"end":{"line":111,"column":9,"offset":2843},"indent":[]}},{"type":"text","value":" can contain text, or other elements. It can also be used to make\nspecialized reusable cell types such as ","position":{"start":{"line":111,"column":9,"offset":2843},"end":{"line":112,"column":41,"offset":2949},"indent":[1]}},{"type":"inlineCode","value":"CellNumeric","position":{"start":{"line":112,"column":41,"offset":2949},"end":{"line":112,"column":54,"offset":2962},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":112,"column":54,"offset":2962},"end":{"line":112,"column":59,"offset":2967},"indent":[]}},{"type":"inlineCode","value":"CellCurrency","position":{"start":{"line":112,"column":59,"offset":2967},"end":{"line":112,"column":73,"offset":2981},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":112,"column":73,"offset":2981},"end":{"line":112,"column":74,"offset":2982},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":2835},"end":{"line":112,"column":74,"offset":2982},"indent":[1]}},{"type":"jsx","value":"<ArgsTable of={Cell} />","position":{"start":{"line":114,"column":1,"offset":2984},"end":{"line":114,"column":24,"offset":3007},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"CellNumeric","position":{"start":{"line":116,"column":5,"offset":3013},"end":{"line":116,"column":16,"offset":3024},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":3009},"end":{"line":116,"column":16,"offset":3024},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A ","position":{"start":{"line":118,"column":1,"offset":3026},"end":{"line":118,"column":3,"offset":3028},"indent":[]}},{"type":"inlineCode","value":"CellNumeric","position":{"start":{"line":118,"column":3,"offset":3028},"end":{"line":118,"column":16,"offset":3041},"indent":[]}},{"type":"text","value":" is used to display numeric values to users in tables. It is\npreferred to simply ","position":{"start":{"line":118,"column":16,"offset":3041},"end":{"line":119,"column":21,"offset":3122},"indent":[1]}},{"type":"inlineCode","value":"Cell","position":{"start":{"line":119,"column":21,"offset":3122},"end":{"line":119,"column":27,"offset":3128},"indent":[]}},{"type":"text","value":" as it ensures characters are visually aligned\nvertically.","position":{"start":{"line":119,"column":27,"offset":3128},"end":{"line":120,"column":12,"offset":3186},"indent":[1]}}],"position":{"start":{"line":118,"column":1,"offset":3026},"end":{"line":120,"column":12,"offset":3186},"indent":[1,1]}},{"type":"jsx","value":"<ArgsTable of={CellNumeric} />","position":{"start":{"line":122,"column":1,"offset":3188},"end":{"line":122,"column":31,"offset":3218},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"CellCurrency","position":{"start":{"line":124,"column":5,"offset":3224},"end":{"line":124,"column":17,"offset":3236},"indent":[]}}],"position":{"start":{"line":124,"column":1,"offset":3220},"end":{"line":124,"column":17,"offset":3236},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A ","position":{"start":{"line":126,"column":1,"offset":3238},"end":{"line":126,"column":3,"offset":3240},"indent":[]}},{"type":"inlineCode","value":"CellCurrency","position":{"start":{"line":126,"column":3,"offset":3240},"end":{"line":126,"column":17,"offset":3254},"indent":[]}},{"type":"text","value":" is used to format and display monetary values.","position":{"start":{"line":126,"column":17,"offset":3254},"end":{"line":126,"column":64,"offset":3301},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":3238},"end":{"line":126,"column":64,"offset":3301},"indent":[]}},{"type":"jsx","value":"<ArgsTable of={CellCurrency} />","position":{"start":{"line":128,"column":1,"offset":3303},"end":{"line":128,"column":32,"offset":3334},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":131,"column":1,"offset":3337},"end":{"line":131,"column":31,"offset":3367},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":131,"column":31,"offset":3367}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { ArgsTable, Canvas, Meta, Story } from \"@storybook/addon-docs\";\nimport {\n  Body,\n  Cell,\n  CellCurrency,\n  CellNumeric,\n  Footer,\n  Header,\n  Row,\n  Table,\n} from \".\";\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Meta title=\"Components/Table\" component={Table} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"table\"\n    }}>{`Table`}</h1>\n    <p>{`Tables are used to organize and display tabular data to users.`}</p>\n    <p>{`In addition to the base `}<inlineCode parentName=\"p\">{`Table`}</inlineCode>{` component, there are additional `}<inlineCode parentName=\"p\">{`Header`}</inlineCode>{`,\n`}<inlineCode parentName=\"p\">{`Body`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Footer`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Row`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Cell`}</inlineCode>{` each of which is used to construct a\ncompliant table.`}</p>\n    <p>{`Multiple `}<a parentName=\"p\" {...{\n        \"href\": \"#cell-types\"\n      }}>{`Cell types`}</a>{` are provided for common formats.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import {\n  Table,\n  Header,\n  Body,\n  Footer,\n  Row,\n  Cell,\n} from \"@jobber/components/Table\";\n`}</code></pre>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Table\" mdxType=\"Story\">\n    {args => <Table {...args} mdxType=\"Table\">\n        <Header mdxType=\"Header\">\n          <Cell mdxType=\"Cell\">Ship</Cell>\n          <Cell mdxType=\"Cell\">Class</Cell>\n          <Cell align=\"right\" mdxType=\"Cell\">Cost</Cell>\n          <Cell align=\"right\" mdxType=\"Cell\">Crew</Cell>\n        </Header>\n        <Body mdxType=\"Body\">\n          <Row mdxType=\"Row\">\n            <Cell mdxType=\"Cell\">Nostromo</Cell>\n            <Cell mdxType=\"Cell\">Towing Vehicle</Cell>\n            <CellCurrency value={42000000} mdxType=\"CellCurrency\" />\n            <CellNumeric value={7} mdxType=\"CellNumeric\" />\n          </Row>\n          <Row mdxType=\"Row\">\n            <Cell mdxType=\"Cell\">Rodger Young</Cell>\n            <Cell mdxType=\"Cell\">Corvette Transport</Cell>\n            <Cell mdxType=\"Cell\" />\n            <CellNumeric value={200} mdxType=\"CellNumeric\" />\n          </Row>\n          <Row mdxType=\"Row\">\n            <Cell mdxType=\"Cell\">USS Enterprise</Cell>\n            <Cell mdxType=\"Cell\">Constitution</Cell>\n            <Cell mdxType=\"Cell\" />\n            <CellNumeric value={205} mdxType=\"CellNumeric\" />\n          </Row>\n        </Body>\n        <Footer mdxType=\"Footer\">\n          <Cell mdxType=\"Cell\" />\n          <Cell mdxType=\"Cell\" />\n          <Cell mdxType=\"Cell\" />\n          <CellNumeric value={412} mdxType=\"CellNumeric\" />\n        </Footer>\n      </Table>}\n  </Story>\n    </Canvas>\n    <h2 {...{\n      \"id\": \"design--usage-guidelines\"\n    }}>{`Design & usage guidelines`}</h2>\n    <p>{`The Table component is a great solution when you need to allow the user to\ncompare data across items. It's a tried-and-true means of data visualization\nthat can make reports easier to read.`}</p>\n    <p>{`A best practice in Table presentation is to ensure that all columns with\nnumerical data (and their headers) round to the same decimal point, and are\nright-aligned. This makes it much easier for the reader to quickly parse large\ndistinctions in dollar amounts, inventory counts, and other key business data.`}</p>\n    <p>{`To list more complex collections of information (such as multi-line content like\na detailed property address), you may want to consider the\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://atlantis.getjobber.com/components/list\"\n      }}>{`List`}</a>{` component. If you have a\nsmall list of information with a 1:1 label-to-data relationship (for example,\nthe issued and due dates on an invoice), consider using\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://atlantis.getjobber.com/components/description-list\"\n      }}>{`DescriptionList`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <p>{`Table components do not currently accept options.`}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"cell-types\"\n    }}>{`Cell types`}</h2>\n    <h3 {...{\n      \"id\": \"cell\"\n    }}>{`Cell`}</h3>\n    <p>{`A `}<inlineCode parentName=\"p\">{`Cell`}</inlineCode>{` can contain text, or other elements. It can also be used to make\nspecialized reusable cell types such as `}<inlineCode parentName=\"p\">{`CellNumeric`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`CellCurrency`}</inlineCode>{`.`}</p>\n    <ArgsTable of={Cell} mdxType=\"ArgsTable\" />\n    <h3 {...{\n      \"id\": \"cellnumeric\"\n    }}>{`CellNumeric`}</h3>\n    <p>{`A `}<inlineCode parentName=\"p\">{`CellNumeric`}</inlineCode>{` is used to display numeric values to users in tables. It is\npreferred to simply `}<inlineCode parentName=\"p\">{`Cell`}</inlineCode>{` as it ensures characters are visually aligned\nvertically.`}</p>\n    <ArgsTable of={CellNumeric} mdxType=\"ArgsTable\" />\n    <h3 {...{\n      \"id\": \"cellcurrency\"\n    }}>{`CellCurrency`}</h3>\n    <p>{`A `}<inlineCode parentName=\"p\">{`CellCurrency`}</inlineCode>{` is used to format and display monetary values.`}</p>\n    <ArgsTable of={CellCurrency} mdxType=\"ArgsTable\" />\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}