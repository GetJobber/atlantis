{"expireTime":9007200931831381000,"key":"gatsby-plugin-mdx-entire-payload-318109e0f08adb367a91193f80153ced-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":114,"offset":115},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":117},"end":{"line":5,"column":29,"offset":145},"indent":[]}},{"type":"import","value":"import { useState } from \"react\";\nimport { ArgsTable, Canvas, Meta, Story } from \"@storybook/addon-docs\";\nimport { ExampleWithHooks } from \"mdxUtils/ExampleWithHooks\";\nimport { Content } from \"@jobber/components/Content\";\nimport { Text } from \"@jobber/components/Text\";\nimport { Checkbox } from \"@jobber/components/Checkbox\";\nimport { Divider } from \"@jobber/components/Divider\";\nimport { Avatar } from \"@jobber/components/Avatar\";\nimport { RadioGroup, RadioOption } from \"@jobber/components/RadioGroup\";","position":{"start":{"line":7,"column":1,"offset":147},"end":{"line":15,"column":73,"offset":651},"indent":[1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<Meta\n  title=\"Components/RadioGroup\"\n  component={RadioGroup}\n  subcomponents={{ RadioOption }}\n/>","position":{"start":{"line":17,"column":1,"offset":653},"end":{"line":21,"column":3,"offset":752},"indent":[1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Radio Group","position":{"start":{"line":23,"column":3,"offset":756},"end":{"line":23,"column":14,"offset":767},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":754},"end":{"line":23,"column":14,"offset":767},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"RadioGroup will allow users to choose a single selection from one of a list of\nprovided options.","position":{"start":{"line":25,"column":1,"offset":769},"end":{"line":26,"column":18,"offset":865},"indent":[1]}}],"position":{"start":{"line":25,"column":1,"offset":769},"end":{"line":26,"column":18,"offset":865},"indent":[1]}},{"type":"code","lang":"ts","meta":null,"value":"import { RadioGroup } from \"@jobber/components/RadioGroup\";","position":{"start":{"line":28,"column":1,"offset":867},"end":{"line":30,"column":4,"offset":936},"indent":[1,1]}},{"type":"jsx","value":"<Canvas>\n  <Story name=\"RadioGroup\">\n    {() => {\n      const [company, setCompany] = useState(\"apple\");\n      return (\n        <RadioGroup onChange={setCompany} value={company} ariaLabel=\"Companies\">\n          <RadioOption value=\"apple\" label=\"Apple\" />\n          <RadioOption value=\"google\" label=\"Google\" />\n          <RadioOption value=\"microsoft\" label=\"Microsoft\" />\n        </RadioGroup>\n      );\n    }}\n  </Story>\n</Canvas>","position":{"start":{"line":32,"column":1,"offset":938},"end":{"line":45,"column":10,"offset":1369},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<ArgsTable of={RadioGroup} story=\"RadioGroup\" />","position":{"start":{"line":47,"column":1,"offset":1371},"end":{"line":47,"column":49,"offset":1419},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RadioOption props","position":{"start":{"line":49,"column":4,"offset":1424},"end":{"line":49,"column":21,"offset":1441},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1421},"end":{"line":49,"column":21,"offset":1441},"indent":[]}},{"type":"jsx","value":"<ArgsTable of={RadioOption} story=\"RadioGroup\" />","position":{"start":{"line":51,"column":1,"offset":1443},"end":{"line":51,"column":50,"offset":1492},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Disabled","position":{"start":{"line":53,"column":4,"offset":1497},"end":{"line":53,"column":12,"offset":1505},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1494},"end":{"line":53,"column":12,"offset":1505},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"RadioOptions","position":{"start":{"line":55,"column":1,"offset":1507},"end":{"line":55,"column":15,"offset":1521},"indent":[]}},{"type":"text","value":" can be disabled by passing in the disabled prop. Disabling an\noption will prevent a user from being able to select the option.","position":{"start":{"line":55,"column":15,"offset":1521},"end":{"line":56,"column":65,"offset":1648},"indent":[1]}}],"position":{"start":{"line":55,"column":1,"offset":1507},"end":{"line":56,"column":65,"offset":1648},"indent":[1]}},{"type":"jsx","value":"<Canvas>\n  <ExampleWithHooks>\n    {() => {\n      const [company, setCompany] = useState(\"apple\");\n      const [checked, setChecked] = useState(true);\n      return (\n        <Content spacing=\"large\">\n          <RadioGroup\n            onChange={setCompany}\n            value={company}\n            ariaLabel=\"Companies\"\n          >\n            <RadioOption value=\"apple\" label=\"Apple\" />\n            <RadioOption value=\"google\" label=\"Google\" />\n            <RadioOption value=\"amazon\" label=\"Amazon\" disabled={true} />\n            <RadioOption\n              value=\"microsoft\"\n              label=\"Microsoft\"\n              disabled={!checked}\n            />\n          </RadioGroup>\n          <Divider />\n          <Checkbox\n            checked={checked}\n            label=\"Allow Microsoft\"\n            onChange={setChecked}\n          />\n        </Content>\n      );\n    }}\n  </ExampleWithHooks>\n</Canvas>","position":{"start":{"line":58,"column":1,"offset":1650},"end":{"line":89,"column":10,"offset":2550},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Description","position":{"start":{"line":91,"column":4,"offset":2555},"end":{"line":91,"column":15,"offset":2566},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":2552},"end":{"line":91,"column":15,"offset":2566},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A ","position":{"start":{"line":93,"column":1,"offset":2568},"end":{"line":93,"column":3,"offset":2570},"indent":[]}},{"type":"inlineCode","value":"description","position":{"start":{"line":93,"column":3,"offset":2570},"end":{"line":93,"column":16,"offset":2583},"indent":[]}},{"type":"text","value":" can be used to further describe the label of the ","position":{"start":{"line":93,"column":16,"offset":2583},"end":{"line":93,"column":66,"offset":2633},"indent":[]}},{"type":"inlineCode","value":"RadioOption","position":{"start":{"line":93,"column":66,"offset":2633},"end":{"line":93,"column":79,"offset":2646},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":93,"column":79,"offset":2646},"end":{"line":93,"column":80,"offset":2647},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":2568},"end":{"line":93,"column":80,"offset":2647},"indent":[]}},{"type":"jsx","value":"<Canvas>\n  <ExampleWithHooks>\n    {() => {\n      const [company, setCompany] = useState(\"apple\");\n      return (\n        <RadioGroup onChange={setCompany} value={company} ariaLabel=\"Companies\">\n          <RadioOption\n            value=\"apple\"\n            label=\"Apple\"\n            description=\"A delicious fruit that fends off doctors\"\n          />\n          <RadioOption\n            value=\"amazon\"\n            label=\"Amazon\"\n            description=\"The worlds largest rainforest\"\n          />\n          <RadioOption\n            value=\"google\"\n            label=\"Google\"\n            description=\"A search engine\"\n          />\n        </RadioGroup>\n      );\n    }}\n  </ExampleWithHooks>\n</Canvas>","position":{"start":{"line":95,"column":1,"offset":2649},"end":{"line":120,"column":10,"offset":3345},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Render RadioOption with children","position":{"start":{"line":122,"column":4,"offset":3350},"end":{"line":122,"column":36,"offset":3382},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":3347},"end":{"line":122,"column":36,"offset":3382},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If the ","position":{"start":{"line":124,"column":1,"offset":3384},"end":{"line":124,"column":8,"offset":3391},"indent":[]}},{"type":"inlineCode","value":"RadioGroup","position":{"start":{"line":124,"column":8,"offset":3391},"end":{"line":124,"column":20,"offset":3403},"indent":[]}},{"type":"text","value":" is being used to select something other then text, you can\nrender the ","position":{"start":{"line":124,"column":20,"offset":3403},"end":{"line":125,"column":12,"offset":3474},"indent":[1]}},{"type":"inlineCode","value":"RadioOptions","position":{"start":{"line":125,"column":12,"offset":3474},"end":{"line":125,"column":26,"offset":3488},"indent":[]}},{"type":"text","value":" with ","position":{"start":{"line":125,"column":26,"offset":3488},"end":{"line":125,"column":32,"offset":3494},"indent":[]}},{"type":"inlineCode","value":"children","position":{"start":{"line":125,"column":32,"offset":3494},"end":{"line":125,"column":42,"offset":3504},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":125,"column":42,"offset":3504},"end":{"line":125,"column":43,"offset":3505},"indent":[]}}],"position":{"start":{"line":124,"column":1,"offset":3384},"end":{"line":125,"column":43,"offset":3505},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":127,"column":3,"offset":3509},"end":{"line":127,"column":8,"offset":3514},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":3507},"end":{"line":127,"column":10,"offset":3516},"indent":[]}},{"type":"text","value":" When using ","position":{"start":{"line":127,"column":10,"offset":3516},"end":{"line":127,"column":22,"offset":3528},"indent":[]}},{"type":"inlineCode","value":"children","position":{"start":{"line":127,"column":22,"offset":3528},"end":{"line":127,"column":32,"offset":3538},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":127,"column":32,"offset":3538},"end":{"line":127,"column":34,"offset":3540},"indent":[]}},{"type":"inlineCode","value":"label","position":{"start":{"line":127,"column":34,"offset":3540},"end":{"line":127,"column":41,"offset":3547},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":127,"column":41,"offset":3547},"end":{"line":127,"column":46,"offset":3552},"indent":[]}},{"type":"inlineCode","value":"description","position":{"start":{"line":127,"column":46,"offset":3552},"end":{"line":127,"column":59,"offset":3565},"indent":[]}},{"type":"text","value":" are not allowed due\nto the fact that they would collide with the ","position":{"start":{"line":127,"column":59,"offset":3565},"end":{"line":128,"column":46,"offset":3631},"indent":[1]}},{"type":"inlineCode","value":"children","position":{"start":{"line":128,"column":46,"offset":3631},"end":{"line":128,"column":56,"offset":3641},"indent":[]}},{"type":"text","value":" prop.","position":{"start":{"line":128,"column":56,"offset":3641},"end":{"line":128,"column":62,"offset":3647},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":3507},"end":{"line":128,"column":62,"offset":3647},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":130,"column":3,"offset":3651},"end":{"line":130,"column":8,"offset":3656},"indent":[]}}],"position":{"start":{"line":130,"column":1,"offset":3649},"end":{"line":130,"column":10,"offset":3658},"indent":[]}},{"type":"text","value":" When using ","position":{"start":{"line":130,"column":10,"offset":3658},"end":{"line":130,"column":22,"offset":3670},"indent":[]}},{"type":"inlineCode","value":"children","position":{"start":{"line":130,"column":22,"offset":3670},"end":{"line":130,"column":32,"offset":3680},"indent":[]}},{"type":"text","value":" it is the responsibility of the child to supply\nthe proper accessible labels. If you are using children that do not contain\ntext, an ","position":{"start":{"line":130,"column":32,"offset":3680},"end":{"line":132,"column":10,"offset":3814},"indent":[1,1]}},{"type":"inlineCode","value":"aria-label","position":{"start":{"line":132,"column":10,"offset":3814},"end":{"line":132,"column":22,"offset":3826},"indent":[]}},{"type":"text","value":" should be provided.","position":{"start":{"line":132,"column":22,"offset":3826},"end":{"line":132,"column":42,"offset":3846},"indent":[]}}],"position":{"start":{"line":130,"column":1,"offset":3649},"end":{"line":132,"column":42,"offset":3846},"indent":[1,1]}},{"type":"jsx","value":"<Canvas>\n  <ExampleWithHooks>\n    {() => {\n      const [company, setPhoto] = useState(\"JBR\");\n      const users = [\n        { name: \"Jobber\", initials: \"JBR\" },\n        { name: \"User 1\", initials: \"U1\" },\n        { name: \"User 2\", initials: \"U2\" },\n        { name: \"User 3\", initials: \"U3\" },\n        { name: \"User 4\", initials: \"U4\" },\n      ];\n      return (\n        <>\n          <Content>\n            <Text>Select a user</Text>\n            <RadioGroup onChange={setPhoto} value={company} ariaLabel=\"Users\">\n              {users.map(user => (\n                <RadioOption value={user.name} key={user.name}>\n                  <Avatar initials={user.initials} name={user.name} />\n                </RadioOption>\n              ))}\n            </RadioGroup>\n          </Content>\n        </>\n      );\n    }}\n  </ExampleWithHooks>\n</Canvas>","position":{"start":{"line":134,"column":1,"offset":3848},"end":{"line":161,"column":10,"offset":4683},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":164,"column":1,"offset":4686},"end":{"line":164,"column":31,"offset":4716},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":164,"column":31,"offset":4716}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { useState } from \"react\";\nimport { ArgsTable, Canvas, Meta, Story } from \"@storybook/addon-docs\";\nimport { ExampleWithHooks } from \"mdxUtils/ExampleWithHooks\";\nimport { Content } from \"@jobber/components/Content\";\nimport { Text } from \"@jobber/components/Text\";\nimport { Checkbox } from \"@jobber/components/Checkbox\";\nimport { Divider } from \"@jobber/components/Divider\";\nimport { Avatar } from \"@jobber/components/Avatar\";\nimport { RadioGroup, RadioOption } from \"@jobber/components/RadioGroup\";\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Meta title=\"Components/RadioGroup\" component={RadioGroup} subcomponents={{\n      RadioOption\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"radio-group\"\n    }}>{`Radio Group`}</h1>\n    <p>{`RadioGroup will allow users to choose a single selection from one of a list of\nprovided options.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { RadioGroup } from \"@jobber/components/RadioGroup\";\n`}</code></pre>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"RadioGroup\" mdxType=\"Story\">\n    {() => {\n          const [company, setCompany] = useState(\"apple\");\n          return <RadioGroup onChange={setCompany} value={company} ariaLabel=\"Companies\" mdxType=\"RadioGroup\">\n          <RadioOption value=\"apple\" label=\"Apple\" mdxType=\"RadioOption\" />\n          <RadioOption value=\"google\" label=\"Google\" mdxType=\"RadioOption\" />\n          <RadioOption value=\"microsoft\" label=\"Microsoft\" mdxType=\"RadioOption\" />\n        </RadioGroup>;\n        }}\n  </Story>\n    </Canvas>\n    <ArgsTable of={RadioGroup} story=\"RadioGroup\" mdxType=\"ArgsTable\" />\n    <h2 {...{\n      \"id\": \"radiooption-props\"\n    }}>{`RadioOption props`}</h2>\n    <ArgsTable of={RadioOption} story=\"RadioGroup\" mdxType=\"ArgsTable\" />\n    <h2 {...{\n      \"id\": \"disabled\"\n    }}>{`Disabled`}</h2>\n    <p><inlineCode parentName=\"p\">{`RadioOptions`}</inlineCode>{` can be disabled by passing in the disabled prop. Disabling an\noption will prevent a user from being able to select the option.`}</p>\n    <Canvas mdxType=\"Canvas\">\n  <ExampleWithHooks mdxType=\"ExampleWithHooks\">\n    {() => {\n          const [company, setCompany] = useState(\"apple\");\n          const [checked, setChecked] = useState(true);\n          return <Content spacing=\"large\" mdxType=\"Content\">\n          <RadioGroup onChange={setCompany} value={company} ariaLabel=\"Companies\" mdxType=\"RadioGroup\">\n            <RadioOption value=\"apple\" label=\"Apple\" mdxType=\"RadioOption\" />\n            <RadioOption value=\"google\" label=\"Google\" mdxType=\"RadioOption\" />\n            <RadioOption value=\"amazon\" label=\"Amazon\" disabled={true} mdxType=\"RadioOption\" />\n            <RadioOption value=\"microsoft\" label=\"Microsoft\" disabled={!checked} mdxType=\"RadioOption\" />\n          </RadioGroup>\n          <Divider mdxType=\"Divider\" />\n          <Checkbox checked={checked} label=\"Allow Microsoft\" onChange={setChecked} mdxType=\"Checkbox\" />\n        </Content>;\n        }}\n  </ExampleWithHooks>\n    </Canvas>\n    <h2 {...{\n      \"id\": \"description\"\n    }}>{`Description`}</h2>\n    <p>{`A `}<inlineCode parentName=\"p\">{`description`}</inlineCode>{` can be used to further describe the label of the `}<inlineCode parentName=\"p\">{`RadioOption`}</inlineCode>{`.`}</p>\n    <Canvas mdxType=\"Canvas\">\n  <ExampleWithHooks mdxType=\"ExampleWithHooks\">\n    {() => {\n          const [company, setCompany] = useState(\"apple\");\n          return <RadioGroup onChange={setCompany} value={company} ariaLabel=\"Companies\" mdxType=\"RadioGroup\">\n          <RadioOption value=\"apple\" label=\"Apple\" description=\"A delicious fruit that fends off doctors\" mdxType=\"RadioOption\" />\n          <RadioOption value=\"amazon\" label=\"Amazon\" description=\"The worlds largest rainforest\" mdxType=\"RadioOption\" />\n          <RadioOption value=\"google\" label=\"Google\" description=\"A search engine\" mdxType=\"RadioOption\" />\n        </RadioGroup>;\n        }}\n  </ExampleWithHooks>\n    </Canvas>\n    <h2 {...{\n      \"id\": \"render-radiooption-with-children\"\n    }}>{`Render RadioOption with children`}</h2>\n    <p>{`If the `}<inlineCode parentName=\"p\">{`RadioGroup`}</inlineCode>{` is being used to select something other then text, you can\nrender the `}<inlineCode parentName=\"p\">{`RadioOptions`}</inlineCode>{` with `}<inlineCode parentName=\"p\">{`children`}</inlineCode>{`.`}</p>\n    <p><strong parentName=\"p\">{`Note:`}</strong>{` When using `}<inlineCode parentName=\"p\">{`children`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`label`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`description`}</inlineCode>{` are not allowed due\nto the fact that they would collide with the `}<inlineCode parentName=\"p\">{`children`}</inlineCode>{` prop.`}</p>\n    <p><strong parentName=\"p\">{`Note:`}</strong>{` When using `}<inlineCode parentName=\"p\">{`children`}</inlineCode>{` it is the responsibility of the child to supply\nthe proper accessible labels. If you are using children that do not contain\ntext, an `}<inlineCode parentName=\"p\">{`aria-label`}</inlineCode>{` should be provided.`}</p>\n    <Canvas mdxType=\"Canvas\">\n  <ExampleWithHooks mdxType=\"ExampleWithHooks\">\n    {() => {\n          const [company, setPhoto] = useState(\"JBR\");\n          const users = [{\n            name: \"Jobber\",\n            initials: \"JBR\"\n          }, {\n            name: \"User 1\",\n            initials: \"U1\"\n          }, {\n            name: \"User 2\",\n            initials: \"U2\"\n          }, {\n            name: \"User 3\",\n            initials: \"U3\"\n          }, {\n            name: \"User 4\",\n            initials: \"U4\"\n          }];\n          return <>\n          <Content mdxType=\"Content\">\n            <Text mdxType=\"Text\">Select a user</Text>\n            <RadioGroup onChange={setPhoto} value={company} ariaLabel=\"Users\" mdxType=\"RadioGroup\">\n              {users.map(user => <RadioOption value={user.name} key={user.name} mdxType=\"RadioOption\">\n                  <Avatar initials={user.initials} name={user.name} mdxType=\"Avatar\" />\n                </RadioOption>)}\n            </RadioGroup>\n          </Content>\n        </>;\n        }}\n  </ExampleWithHooks>\n    </Canvas>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}