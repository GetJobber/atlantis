{"expireTime":9007200931831373000,"key":"gatsby-plugin-mdx-entire-payload-b171c8dde37ba647e8a2276ab41e2acf-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":114,"offset":115},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":117},"end":{"line":5,"column":29,"offset":145},"indent":[]}},{"type":"import","value":"import { Playground } from \"docz\";","position":{"start":{"line":8,"column":1,"offset":148},"end":{"line":8,"column":35,"offset":182},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"useAssert","position":{"start":{"line":10,"column":3,"offset":186},"end":{"line":10,"column":12,"offset":195},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":184},"end":{"line":10,"column":12,"offset":195},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"During development, disrupt the render of a component when a conditional is met.\nThis is helpful when you want to limit something that typescript can't do...\nyet.","position":{"start":{"line":12,"column":1,"offset":197},"end":{"line":14,"column":5,"offset":359},"indent":[1,1]}}],"position":{"start":{"line":12,"column":1,"offset":197},"end":{"line":14,"column":5,"offset":359},"indent":[1,1]}},{"type":"code","lang":"ts","meta":null,"value":"import { useAssert } from \"@jobber/hooks\";","position":{"start":{"line":16,"column":1,"offset":361},"end":{"line":18,"column":4,"offset":413},"indent":[1,1]}},{"type":"code","lang":"ts","meta":null,"value":"const child: ReactElement = <Avatar initials=\"JBR\" />;\n// Make sure the child can only be an <Icon /> component\nuseAssert(child.type !== Icon, \"You can only pass in an <Icon /> child\");","position":{"start":{"line":20,"column":1,"offset":415},"end":{"line":24,"column":4,"offset":610},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Warn","position":{"start":{"line":26,"column":4,"offset":615},"end":{"line":26,"column":8,"offset":619},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":612},"end":{"line":26,"column":8,"offset":619},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you still want to assert but doesn't want to disrupt the render, you can pass\nin a ","position":{"start":{"line":28,"column":1,"offset":621},"end":{"line":29,"column":6,"offset":707},"indent":[1]}},{"type":"inlineCode","value":"warn: true","position":{"start":{"line":29,"column":6,"offset":707},"end":{"line":29,"column":18,"offset":719},"indent":[]}},{"type":"text","value":" param. This will throw a warning on your browser console.","position":{"start":{"line":29,"column":18,"offset":719},"end":{"line":29,"column":76,"offset":777},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":621},"end":{"line":29,"column":76,"offset":777},"indent":[1]}},{"type":"code","lang":"ts","meta":null,"value":"const url: string = \"http://getjobber.com\";\n// Make sure the url always starts with https://\nuseAssert(url.startsWith(\"http://\"), \"Please pass in an `https://` url\", {\n  warn: true,\n});","position":{"start":{"line":31,"column":1,"offset":779},"end":{"line":37,"column":4,"offset":974},"indent":[1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":40,"column":1,"offset":977},"end":{"line":40,"column":31,"offset":1007},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":40,"column":31,"offset":1007}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { Playground } from \"docz\";\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"useassert\"\n    }}>{`useAssert`}</h1>\n    <p>{`During development, disrupt the render of a component when a conditional is met.\nThis is helpful when you want to limit something that typescript can't do...\nyet.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { useAssert } from \"@jobber/hooks\";\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`const child: ReactElement = <Avatar initials=\"JBR\" />;\n// Make sure the child can only be an <Icon /> component\nuseAssert(child.type !== Icon, \"You can only pass in an <Icon /> child\");\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"warn\"\n    }}>{`Warn`}</h2>\n    <p>{`If you still want to assert but doesn't want to disrupt the render, you can pass\nin a `}<inlineCode parentName=\"p\">{`warn: true`}</inlineCode>{` param. This will throw a warning on your browser console.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`const url: string = \"http://getjobber.com\";\n// Make sure the url always starts with https://\nuseAssert(url.startsWith(\"http://\"), \"Please pass in an \\`https://\\` url\", {\n  warn: true,\n});\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}