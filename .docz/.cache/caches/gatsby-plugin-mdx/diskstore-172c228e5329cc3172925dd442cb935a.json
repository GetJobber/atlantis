{"expireTime":9007200931831331000,"key":"gatsby-plugin-mdx-entire-payload-6fa6b96901c0ef5544a3a13a8a3c6e47-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":114,"offset":115},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":117},"end":{"line":5,"column":29,"offset":145},"indent":[]}},{"type":"import","value":"import { Playground, Props } from \"docz\";\nimport { useState } from \"react\";\nimport { ComponentStatus } from \"@jobber/docx\";\nimport { Banner } from \"@jobber/components/Banner\";\nimport { Text } from \"@jobber/components/Text\";\nimport { InputText } from \"@jobber/components/InputText\";\nimport { InputValidation } from \".\";","position":{"start":{"line":8,"column":1,"offset":148},"end":{"line":14,"column":37,"offset":466},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Input Validation","position":{"start":{"line":16,"column":3,"offset":470},"end":{"line":16,"column":19,"offset":486},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":468},"end":{"line":16,"column":19,"offset":486},"indent":[]}},{"type":"jsx","value":"<ComponentStatus stage=\"ready\" responsive=\"yes\" accessible=\"yes\" />","position":{"start":{"line":18,"column":1,"offset":488},"end":{"line":18,"column":68,"offset":555},"indent":[]}},{"type":"jsx","value":"<Banner type=\"warning\">\n  90% of validation for inputs will be handled out-of-the-box by the{\" \"}\n  <a href=\"/components/input-text/#validation-message\">\n    input component's validation\n  </a>\n  . Check that you cannot use the built-in validation before using this component.\n</Banner>","position":{"start":{"line":20,"column":1,"offset":557},"end":{"line":26,"column":10,"offset":843},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"InputValidation","position":{"start":{"line":28,"column":1,"offset":845},"end":{"line":28,"column":18,"offset":862},"indent":[]}},{"type":"text","value":" allows you to show the validation messages in cases where an\n","position":{"start":{"line":28,"column":18,"offset":862},"end":{"line":29,"column":1,"offset":924},"indent":[1]}},{"type":"link","title":null,"url":"/components/input-text/#validation-message","children":[{"type":"text","value":"input's built-in validation","position":{"start":{"line":29,"column":2,"offset":925},"end":{"line":29,"column":29,"offset":952},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":924},"end":{"line":29,"column":74,"offset":997},"indent":[]}},{"type":"text","value":" is not\navailable, such as in ","position":{"start":{"line":29,"column":74,"offset":997},"end":{"line":30,"column":23,"offset":1027},"indent":[1]}},{"type":"inlineCode","value":"inline","position":{"start":{"line":30,"column":23,"offset":1027},"end":{"line":30,"column":31,"offset":1035},"indent":[]}},{"type":"text","value":" usage.","position":{"start":{"line":30,"column":31,"offset":1035},"end":{"line":30,"column":38,"offset":1042},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":845},"end":{"line":30,"column":38,"offset":1042},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For more information about ","position":{"start":{"line":32,"column":1,"offset":1044},"end":{"line":32,"column":28,"offset":1071},"indent":[]}},{"type":"inlineCode","value":"validations","position":{"start":{"line":32,"column":28,"offset":1071},"end":{"line":32,"column":41,"offset":1084},"indent":[]}},{"type":"text","value":" using any of the ","position":{"start":{"line":32,"column":41,"offset":1084},"end":{"line":32,"column":59,"offset":1102},"indent":[]}},{"type":"inlineCode","value":"Input","position":{"start":{"line":32,"column":59,"offset":1102},"end":{"line":32,"column":66,"offset":1109},"indent":[]}},{"type":"text","value":" components,\nsee the ","position":{"start":{"line":32,"column":66,"offset":1109},"end":{"line":33,"column":9,"offset":1130},"indent":[1]}},{"type":"link","title":null,"url":"/components/input-text/#validation-message","children":[{"type":"text","value":"InputText","position":{"start":{"line":33,"column":10,"offset":1131},"end":{"line":33,"column":19,"offset":1140},"indent":[]}}],"position":{"start":{"line":33,"column":9,"offset":1130},"end":{"line":33,"column":64,"offset":1185},"indent":[]}},{"type":"text","value":" documentation.","position":{"start":{"line":33,"column":64,"offset":1185},"end":{"line":33,"column":79,"offset":1200},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":1044},"end":{"line":33,"column":79,"offset":1200},"indent":[1]}},{"type":"code","lang":"ts","meta":null,"value":"import { InputValidation } from \"@jobber/components/InputValidation\";","position":{"start":{"line":35,"column":1,"offset":1202},"end":{"line":37,"column":4,"offset":1281},"indent":[1,1]}},{"type":"jsx","value":"<Playground>\n  {() => {\n    const [validationMessages, setValidationMessages] = useState(undefined);\n    return (\n      <div>\n        <Text>\n          My name is\n          <InputText\n            validations={{\n              required: {\n                value: true,\n                message: \"Please tell me your name\",\n              },\n              pattern: {\n                value: /Jeff/,\n                message: \"Have you considered a better name, like Jeff?\",\n              },\n            }}\n            onValidation={setValidationMessages}\n            name=\"myName\"\n            size=\"small\"\n            inline={true}\n            maxLength={4}\n          />\n        </Text>\n        {validationMessages && <InputValidation message={validationMessages} />}\n      </div>\n    );\n  }}\n</Playground>","position":{"start":{"line":39,"column":1,"offset":1283},"end":{"line":68,"column":14,"offset":2080},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Props","position":{"start":{"line":70,"column":4,"offset":2085},"end":{"line":70,"column":9,"offset":2090},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":2082},"end":{"line":70,"column":9,"offset":2090},"indent":[]}},{"type":"jsx","value":"<Props of={InputValidation} />","position":{"start":{"line":72,"column":1,"offset":2092},"end":{"line":72,"column":31,"offset":2122},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":75,"column":1,"offset":2125},"end":{"line":75,"column":31,"offset":2155},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":75,"column":31,"offset":2155}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { Playground, Props } from \"docz\";\nimport { useState } from \"react\";\nimport { ComponentStatus } from \"@jobber/docx\";\nimport { Banner } from \"@jobber/components/Banner\";\nimport { Text } from \"@jobber/components/Text\";\nimport { InputText } from \"@jobber/components/InputText\";\nimport { InputValidation } from \".\";\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"input-validation\"\n    }}>{`Input Validation`}</h1>\n    <ComponentStatus stage=\"ready\" responsive=\"yes\" accessible=\"yes\" mdxType=\"ComponentStatus\" />\n    <Banner type=\"warning\" mdxType=\"Banner\">\n  90% of validation for inputs will be handled out-of-the-box by the{\" \"}\n  <a href=\"/components/input-text/#validation-message\">\n    input component's validation\n  </a>\n  . Check that you cannot use the built-in validation before using this component.\n    </Banner>\n    <p><inlineCode parentName=\"p\">{`InputValidation`}</inlineCode>{` allows you to show the validation messages in cases where an\n`}<a parentName=\"p\" {...{\n        \"href\": \"/components/input-text/#validation-message\"\n      }}>{`input's built-in validation`}</a>{` is not\navailable, such as in `}<inlineCode parentName=\"p\">{`inline`}</inlineCode>{` usage.`}</p>\n    <p>{`For more information about `}<inlineCode parentName=\"p\">{`validations`}</inlineCode>{` using any of the `}<inlineCode parentName=\"p\">{`Input`}</inlineCode>{` components,\nsee the `}<a parentName=\"p\" {...{\n        \"href\": \"/components/input-text/#validation-message\"\n      }}>{`InputText`}</a>{` documentation.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { InputValidation } from \"@jobber/components/InputValidation\";\n`}</code></pre>\n    <Playground __position={2} __code={'() => {\\n  const [validationMessages, setValidationMessages] = useState(undefined)\\n  return (\\n    <div>\\n      <Text>\\n        My name is\\n        <InputText\\n          validations={{\\n            required: {\\n              value: true,\\n              message: \\'Please tell me your name\\',\\n            },\\n            pattern: {\\n              value: /Jeff/,\\n              message: \\'Have you considered a better name, like Jeff?\\',\\n            },\\n          }}\\n          onValidation={setValidationMessages}\\n          name=\\\"myName\\\"\\n          size=\\\"small\\\"\\n          inline={true}\\n          maxLength={4}\\n        />\\n      </Text>\\n      {validationMessages && <InputValidation message={validationMessages} />}\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      ComponentStatus,\n      Banner,\n      Text,\n      InputText,\n      InputValidation,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [validationMessages, setValidationMessages] = useState(undefined);\n        return <div>\n        <Text mdxType=\"Text\">\n          My name is\n          <InputText validations={{\n              required: {\n                value: true,\n                message: \"Please tell me your name\"\n              },\n              pattern: {\n                value: /Jeff/,\n                message: \"Have you considered a better name, like Jeff?\"\n              }\n            }} onValidation={setValidationMessages} name=\"myName\" size=\"small\" inline={true} maxLength={4} mdxType=\"InputText\" />\n        </Text>\n        {validationMessages && <InputValidation message={validationMessages} mdxType=\"InputValidation\" />}\n      </div>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={InputValidation} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}