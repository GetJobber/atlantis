{"expireTime":9007200931831381000,"key":"gatsby-plugin-mdx-entire-payload-be20f2164c3138fc616204e5109e90e6-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":114,"offset":115},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":117},"end":{"line":5,"column":29,"offset":145},"indent":[]}},{"type":"import","value":"import { Playground, Props } from \"docz\";\nimport { StatusLabel } from \".\";\nimport { Content } from \"../Content\";","position":{"start":{"line":8,"column":1,"offset":148},"end":{"line":10,"column":38,"offset":260},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Status Label","position":{"start":{"line":12,"column":3,"offset":264},"end":{"line":12,"column":15,"offset":276},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":262},"end":{"line":12,"column":15,"offset":276},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":14,"column":1,"offset":278},"end":{"line":14,"column":5,"offset":282},"indent":[]}},{"type":"inlineCode","value":"<StatusLabel>","position":{"start":{"line":14,"column":5,"offset":282},"end":{"line":14,"column":20,"offset":297},"indent":[]}},{"type":"text","value":" component is a visual component that allows users to quickly\ndetermine the status of an item (e.g., \"Active\", \"Overdue\").","position":{"start":{"line":14,"column":20,"offset":297},"end":{"line":15,"column":61,"offset":419},"indent":[1]}}],"position":{"start":{"line":14,"column":1,"offset":278},"end":{"line":15,"column":61,"offset":419},"indent":[1]}},{"type":"code","lang":"ts","meta":null,"value":"import { StatusLabel } from \"@jobber/components/StatusLabel\";","position":{"start":{"line":17,"column":1,"offset":421},"end":{"line":19,"column":4,"offset":492},"indent":[1,1]}},{"type":"jsx","value":"<Playground>\n  <StatusLabel label=\"Bob\" />\n</Playground>","position":{"start":{"line":21,"column":1,"offset":494},"end":{"line":23,"column":14,"offset":550},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Props","position":{"start":{"line":25,"column":4,"offset":555},"end":{"line":25,"column":9,"offset":560},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":552},"end":{"line":25,"column":9,"offset":560},"indent":[]}},{"type":"jsx","value":"<Props of={StatusLabel} />","position":{"start":{"line":27,"column":1,"offset":562},"end":{"line":27,"column":27,"offset":588},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Usage guidelines","position":{"start":{"line":29,"column":4,"offset":593},"end":{"line":29,"column":20,"offset":609},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":590},"end":{"line":29,"column":20,"offset":609},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"StatusLabel is a more opinionated version of\n","position":{"start":{"line":31,"column":1,"offset":611},"end":{"line":32,"column":1,"offset":656},"indent":[1]}},{"type":"link","title":null,"url":"/components/inline-label","children":[{"type":"text","value":"InlineLabel","position":{"start":{"line":32,"column":2,"offset":657},"end":{"line":32,"column":13,"offset":668},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":656},"end":{"line":32,"column":40,"offset":695},"indent":[]}},{"type":"text","value":" and offers only 5 possible status\nrepresentations:","position":{"start":{"line":32,"column":40,"offset":695},"end":{"line":33,"column":17,"offset":746},"indent":[1]}}],"position":{"start":{"line":31,"column":1,"offset":611},"end":{"line":33,"column":17,"offset":746},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Success","position":{"start":{"line":35,"column":5,"offset":752},"end":{"line":35,"column":12,"offset":759},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":748},"end":{"line":35,"column":12,"offset":759},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Convey that an item is in a successful state, such as approved or paid.","position":{"start":{"line":37,"column":1,"offset":761},"end":{"line":37,"column":72,"offset":832},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":761},"end":{"line":37,"column":72,"offset":832},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Critical","position":{"start":{"line":39,"column":5,"offset":838},"end":{"line":39,"column":13,"offset":846},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":834},"end":{"line":39,"column":13,"offset":846},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Alert the user to a critically important issue such as a late appointment or an\noverdue payment.","position":{"start":{"line":41,"column":1,"offset":848},"end":{"line":42,"column":17,"offset":944},"indent":[1]}}],"position":{"start":{"line":41,"column":1,"offset":848},"end":{"line":42,"column":17,"offset":944},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Warning","position":{"start":{"line":44,"column":5,"offset":950},"end":{"line":44,"column":12,"offset":957},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":946},"end":{"line":44,"column":12,"offset":957},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Warn the user of a potential forthcoming issue like an upcoming deadline or an\nitem awaiting response.","position":{"start":{"line":46,"column":1,"offset":959},"end":{"line":47,"column":24,"offset":1061},"indent":[1]}}],"position":{"start":{"line":46,"column":1,"offset":959},"end":{"line":47,"column":24,"offset":1061},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Informative","position":{"start":{"line":49,"column":5,"offset":1067},"end":{"line":49,"column":16,"offset":1078},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1063},"end":{"line":49,"column":16,"offset":1078},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Inform the user about something that may not require action, such as a quote\nthat has already been converted into a job.","position":{"start":{"line":51,"column":1,"offset":1080},"end":{"line":52,"column":44,"offset":1200},"indent":[1]}}],"position":{"start":{"line":51,"column":1,"offset":1080},"end":{"line":52,"column":44,"offset":1200},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Inactive","position":{"start":{"line":54,"column":5,"offset":1206},"end":{"line":54,"column":13,"offset":1214},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1202},"end":{"line":54,"column":13,"offset":1214},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Signify that an item has been archived, closed, or otherwise removed from an\nactive workflow.","position":{"start":{"line":56,"column":1,"offset":1216},"end":{"line":57,"column":17,"offset":1309},"indent":[1]}}],"position":{"start":{"line":56,"column":1,"offset":1216},"end":{"line":57,"column":17,"offset":1309},"indent":[1]}},{"type":"jsx","value":"<Playground>\n  <Content>\n    <StatusLabel label=\"Success\" status=\"success\" alignment=\"start\" />\n    <StatusLabel label=\"Critical\" status=\"critical\" alignment=\"start\" />\n    <StatusLabel label=\"Informative\" status=\"informative\" alignment=\"start\" />\n    <StatusLabel label=\"Warning\" status=\"warning\" alignment=\"start\" />\n    <StatusLabel label=\"Inactive\" status=\"inactive\" alignment=\"start\" />\n  </Content>\n</Playground>","position":{"start":{"line":59,"column":1,"offset":1311},"end":{"line":67,"column":14,"offset":1729},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Alignment","position":{"start":{"line":69,"column":5,"offset":1735},"end":{"line":69,"column":14,"offset":1744},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":1731},"end":{"line":69,"column":14,"offset":1744},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Align the color indicator with the start or end of a layout as needed.","position":{"start":{"line":71,"column":1,"offset":1746},"end":{"line":71,"column":71,"offset":1816},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":1746},"end":{"line":71,"column":71,"offset":1816},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For example, in a ","position":{"start":{"line":73,"column":1,"offset":1818},"end":{"line":73,"column":19,"offset":1836},"indent":[]}},{"type":"link","title":null,"url":"/components/list","children":[{"type":"text","value":"List","position":{"start":{"line":73,"column":20,"offset":1837},"end":{"line":73,"column":24,"offset":1841},"indent":[]}}],"position":{"start":{"line":73,"column":19,"offset":1836},"end":{"line":73,"column":43,"offset":1860},"indent":[]}},{"type":"text","value":" where the StatusLabel is on the\nright, use the ","position":{"start":{"line":73,"column":43,"offset":1860},"end":{"line":74,"column":16,"offset":1908},"indent":[1]}},{"type":"inlineCode","value":"end","position":{"start":{"line":74,"column":16,"offset":1908},"end":{"line":74,"column":21,"offset":1913},"indent":[]}},{"type":"text","value":" alignment.","position":{"start":{"line":74,"column":21,"offset":1913},"end":{"line":74,"column":32,"offset":1924},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":1818},"end":{"line":74,"column":32,"offset":1924},"indent":[1]}},{"type":"jsx","value":"<Playground>\n  <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n    <StatusLabel label=\"Start\" status=\"inactive\" alignment=\"start\" />\n    <StatusLabel label=\"End\" status=\"inactive\" alignment=\"end\" />\n  </div>\n</Playground>","position":{"start":{"line":76,"column":1,"offset":1926},"end":{"line":81,"column":14,"offset":2166},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Related components","position":{"start":{"line":83,"column":4,"offset":2171},"end":{"line":83,"column":22,"offset":2189},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":2168},"end":{"line":83,"column":22,"offset":2189},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"/components/inline-label","children":[{"type":"text","value":"InlineLabel","position":{"start":{"line":85,"column":4,"offset":2194},"end":{"line":85,"column":15,"offset":2205},"indent":[]}}],"position":{"start":{"line":85,"column":3,"offset":2193},"end":{"line":85,"column":42,"offset":2232},"indent":[]}},{"type":"text","value":" should be replaced with StatusLabel\nwhere possible to provide a more intentional communication of status to users","position":{"start":{"line":85,"column":42,"offset":2232},"end":{"line":86,"column":80,"offset":2348},"indent":[3]}}],"position":{"start":{"line":85,"column":3,"offset":2193},"end":{"line":86,"column":80,"offset":2348},"indent":[3]}}],"position":{"start":{"line":85,"column":1,"offset":2191},"end":{"line":86,"column":80,"offset":2348},"indent":[1]}}],"position":{"start":{"line":85,"column":1,"offset":2191},"end":{"line":86,"column":80,"offset":2348},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Content guidelines","position":{"start":{"line":88,"column":4,"offset":2353},"end":{"line":88,"column":22,"offset":2371},"indent":[]}}],"position":{"start":{"line":88,"column":1,"offset":2350},"end":{"line":88,"column":22,"offset":2371},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"StatusLabel does not accept any child content. It presents only a text-based\nlabel describing the status, and a visual color indicator to reinforce the\nstatus.","position":{"start":{"line":90,"column":1,"offset":2373},"end":{"line":92,"column":8,"offset":2532},"indent":[1,1]}}],"position":{"start":{"line":90,"column":1,"offset":2373},"end":{"line":92,"column":8,"offset":2532},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The label should be short, ideally no longer than two words.","position":{"start":{"line":94,"column":1,"offset":2534},"end":{"line":94,"column":61,"offset":2594},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":2534},"end":{"line":94,"column":61,"offset":2594},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Accessibility","position":{"start":{"line":96,"column":4,"offset":2599},"end":{"line":96,"column":17,"offset":2612},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":2596},"end":{"line":96,"column":17,"offset":2612},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The StatusLabel has a ","position":{"start":{"line":98,"column":1,"offset":2614},"end":{"line":98,"column":23,"offset":2636},"indent":[]}},{"type":"inlineCode","value":"role","position":{"start":{"line":98,"column":23,"offset":2636},"end":{"line":98,"column":29,"offset":2642},"indent":[]}},{"type":"text","value":" of ","position":{"start":{"line":98,"column":29,"offset":2642},"end":{"line":98,"column":33,"offset":2646},"indent":[]}},{"type":"inlineCode","value":"status","position":{"start":{"line":98,"column":33,"offset":2646},"end":{"line":98,"column":41,"offset":2654},"indent":[]}},{"type":"text","value":" which is communicated to assistive\ntechnology. It does not pull focus to itself but informs the user of its'\npurpose.","position":{"start":{"line":98,"column":41,"offset":2654},"end":{"line":100,"column":9,"offset":2772},"indent":[1,1]}}],"position":{"start":{"line":98,"column":1,"offset":2614},"end":{"line":100,"column":9,"offset":2772},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The label portion of StatusLabel should be readable by assistive technology.","position":{"start":{"line":102,"column":1,"offset":2774},"end":{"line":102,"column":77,"offset":2850},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":2774},"end":{"line":102,"column":77,"offset":2850},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The color indicator is always used with a text label so that color is not the\nonly method of communicating status.","position":{"start":{"line":104,"column":1,"offset":2852},"end":{"line":105,"column":37,"offset":2966},"indent":[1]}}],"position":{"start":{"line":104,"column":1,"offset":2852},"end":{"line":105,"column":37,"offset":2966},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Responsiveness","position":{"start":{"line":107,"column":4,"offset":2971},"end":{"line":107,"column":18,"offset":2985},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":2968},"end":{"line":107,"column":18,"offset":2985},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"StatusLabel should take up as much space as is available. If StatusLabel's label\nis longer than the space available, the label should wrap.","position":{"start":{"line":109,"column":1,"offset":2987},"end":{"line":110,"column":59,"offset":3126},"indent":[1]}}],"position":{"start":{"line":109,"column":1,"offset":2987},"end":{"line":110,"column":59,"offset":3126},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Notes","position":{"start":{"line":112,"column":4,"offset":3131},"end":{"line":112,"column":9,"offset":3136},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":3128},"end":{"line":112,"column":9,"offset":3136},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"StatusLabel should replace ","position":{"start":{"line":114,"column":3,"offset":3140},"end":{"line":114,"column":30,"offset":3167},"indent":[]}},{"type":"link","title":null,"url":"/components/inline-label","children":[{"type":"text","value":"InlineLabel","position":{"start":{"line":114,"column":31,"offset":3168},"end":{"line":114,"column":42,"offset":3179},"indent":[]}}],"position":{"start":{"line":114,"column":30,"offset":3167},"end":{"line":114,"column":69,"offset":3206},"indent":[]}},{"type":"text","value":" where\npossible.","position":{"start":{"line":114,"column":69,"offset":3206},"end":{"line":115,"column":12,"offset":3224},"indent":[3]}}],"position":{"start":{"line":114,"column":3,"offset":3140},"end":{"line":115,"column":12,"offset":3224},"indent":[3]}}],"position":{"start":{"line":114,"column":1,"offset":3138},"end":{"line":115,"column":12,"offset":3224},"indent":[1]}}],"position":{"start":{"line":114,"column":1,"offset":3138},"end":{"line":115,"column":12,"offset":3224},"indent":[1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":118,"column":1,"offset":3227},"end":{"line":118,"column":31,"offset":3257},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":118,"column":31,"offset":3257}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { Playground, Props } from \"docz\";\nimport { StatusLabel } from \".\";\nimport { Content } from \"../Content\";\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"status-label\"\n    }}>{`Status Label`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`<StatusLabel>`}</inlineCode>{` component is a visual component that allows users to quickly\ndetermine the status of an item (e.g., \"Active\", \"Overdue\").`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { StatusLabel } from \"@jobber/components/StatusLabel\";\n`}</code></pre>\n    <Playground __position={0} __code={'<StatusLabel label=\\\"Bob\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      StatusLabel,\n      Content,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <StatusLabel label=\"Bob\" mdxType=\"StatusLabel\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={StatusLabel} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"usage-guidelines\"\n    }}>{`Usage guidelines`}</h2>\n    <p>{`StatusLabel is a more opinionated version of\n`}<a parentName=\"p\" {...{\n        \"href\": \"/components/inline-label\"\n      }}>{`InlineLabel`}</a>{` and offers only 5 possible status\nrepresentations:`}</p>\n    <h3 {...{\n      \"id\": \"success\"\n    }}>{`Success`}</h3>\n    <p>{`Convey that an item is in a successful state, such as approved or paid.`}</p>\n    <h3 {...{\n      \"id\": \"critical\"\n    }}>{`Critical`}</h3>\n    <p>{`Alert the user to a critically important issue such as a late appointment or an\noverdue payment.`}</p>\n    <h3 {...{\n      \"id\": \"warning\"\n    }}>{`Warning`}</h3>\n    <p>{`Warn the user of a potential forthcoming issue like an upcoming deadline or an\nitem awaiting response.`}</p>\n    <h3 {...{\n      \"id\": \"informative\"\n    }}>{`Informative`}</h3>\n    <p>{`Inform the user about something that may not require action, such as a quote\nthat has already been converted into a job.`}</p>\n    <h3 {...{\n      \"id\": \"inactive\"\n    }}>{`Inactive`}</h3>\n    <p>{`Signify that an item has been archived, closed, or otherwise removed from an\nactive workflow.`}</p>\n    <Playground __position={2} __code={'<Content>\\n  <StatusLabel label=\\\"Success\\\" status=\\\"success\\\" alignment=\\\"start\\\" />\\n  <StatusLabel label=\\\"Critical\\\" status=\\\"critical\\\" alignment=\\\"start\\\" />\\n  <StatusLabel label=\\\"Informative\\\" status=\\\"informative\\\" alignment=\\\"start\\\" />\\n  <StatusLabel label=\\\"Warning\\\" status=\\\"warning\\\" alignment=\\\"start\\\" />\\n  <StatusLabel label=\\\"Inactive\\\" status=\\\"inactive\\\" alignment=\\\"start\\\" />\\n</Content>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      StatusLabel,\n      Content,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Content mdxType=\"Content\">\n    <StatusLabel label=\"Success\" status=\"success\" alignment=\"start\" mdxType=\"StatusLabel\" />\n    <StatusLabel label=\"Critical\" status=\"critical\" alignment=\"start\" mdxType=\"StatusLabel\" />\n    <StatusLabel label=\"Informative\" status=\"informative\" alignment=\"start\" mdxType=\"StatusLabel\" />\n    <StatusLabel label=\"Warning\" status=\"warning\" alignment=\"start\" mdxType=\"StatusLabel\" />\n    <StatusLabel label=\"Inactive\" status=\"inactive\" alignment=\"start\" mdxType=\"StatusLabel\" />\n  </Content>\n    </Playground>\n    <h3 {...{\n      \"id\": \"alignment\"\n    }}>{`Alignment`}</h3>\n    <p>{`Align the color indicator with the start or end of a layout as needed.`}</p>\n    <p>{`For example, in a `}<a parentName=\"p\" {...{\n        \"href\": \"/components/list\"\n      }}>{`List`}</a>{` where the StatusLabel is on the\nright, use the `}<inlineCode parentName=\"p\">{`end`}</inlineCode>{` alignment.`}</p>\n    <Playground __position={3} __code={'<div style={{ display: \\'flex\\', justifyContent: \\'space-between\\' }}>\\n  <StatusLabel label=\\\"Start\\\" status=\\\"inactive\\\" alignment=\\\"start\\\" />\\n  <StatusLabel label=\\\"End\\\" status=\\\"inactive\\\" alignment=\\\"end\\\" />\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      StatusLabel,\n      Content,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <div style={{\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      }}>\n    <StatusLabel label=\"Start\" status=\"inactive\" alignment=\"start\" mdxType=\"StatusLabel\" />\n    <StatusLabel label=\"End\" status=\"inactive\" alignment=\"end\" mdxType=\"StatusLabel\" />\n  </div>\n    </Playground>\n    <h2 {...{\n      \"id\": \"related-components\"\n    }}>{`Related components`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/components/inline-label\"\n        }}>{`InlineLabel`}</a>{` should be replaced with StatusLabel\nwhere possible to provide a more intentional communication of status to users`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"content-guidelines\"\n    }}>{`Content guidelines`}</h2>\n    <p>{`StatusLabel does not accept any child content. It presents only a text-based\nlabel describing the status, and a visual color indicator to reinforce the\nstatus.`}</p>\n    <p>{`The label should be short, ideally no longer than two words.`}</p>\n    <h2 {...{\n      \"id\": \"accessibility\"\n    }}>{`Accessibility`}</h2>\n    <p>{`The StatusLabel has a `}<inlineCode parentName=\"p\">{`role`}</inlineCode>{` of `}<inlineCode parentName=\"p\">{`status`}</inlineCode>{` which is communicated to assistive\ntechnology. It does not pull focus to itself but informs the user of its'\npurpose.`}</p>\n    <p>{`The label portion of StatusLabel should be readable by assistive technology.`}</p>\n    <p>{`The color indicator is always used with a text label so that color is not the\nonly method of communicating status.`}</p>\n    <h2 {...{\n      \"id\": \"responsiveness\"\n    }}>{`Responsiveness`}</h2>\n    <p>{`StatusLabel should take up as much space as is available. If StatusLabel's label\nis longer than the space available, the label should wrap.`}</p>\n    <h2 {...{\n      \"id\": \"notes\"\n    }}>{`Notes`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`StatusLabel should replace `}<a parentName=\"li\" {...{\n          \"href\": \"/components/inline-label\"\n        }}>{`InlineLabel`}</a>{` where\npossible.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}