{"expireTime":9007200931831329000,"key":"gatsby-plugin-mdx-entire-payload-e5ad4621df4869ec6e5b6082b4b39ece-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":114,"offset":115},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":117},"end":{"line":5,"column":29,"offset":145},"indent":[]}},{"type":"import","value":"import { ArgsTable, Canvas, Meta, Story } from \"@storybook/addon-docs\";\nimport { useState } from \"react\";\nimport { Avatar } from \"@jobber/components/Avatar\";\nimport { Content } from \"@jobber/components/Content\";\nimport { Icon } from \"@jobber/components/Icon\";\nimport { Text } from \"@jobber/components/Text\";\nimport { Chip, Chips } from \".\";\nimport { useFakeOptionQuery } from \"./utils/mdxUtils.ts\";","position":{"start":{"line":7,"column":1,"offset":147},"end":{"line":14,"column":58,"offset":545},"indent":[1,1,1,1,1,1,1]}},{"type":"jsx","value":"<Meta title=\"Components/Chips\" component={Chips} subcomponents={{ Chip }} />","position":{"start":{"line":16,"column":1,"offset":547},"end":{"line":16,"column":77,"offset":623},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Chips","position":{"start":{"line":18,"column":3,"offset":627},"end":{"line":18,"column":8,"offset":632},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":625},"end":{"line":18,"column":8,"offset":632},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Chips are a flexible component that can be used for the selection of items from\na group while preserving vertical space in the interface.","position":{"start":{"line":20,"column":1,"offset":634},"end":{"line":21,"column":58,"offset":771},"indent":[1]}}],"position":{"start":{"line":20,"column":1,"offset":634},"end":{"line":21,"column":58,"offset":771},"indent":[1]}},{"type":"code","lang":"ts","meta":null,"value":"import { Chip, Chips } from \"@jobber/components/Chips\";","position":{"start":{"line":23,"column":1,"offset":773},"end":{"line":25,"column":4,"offset":838},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Usage guidelines","position":{"start":{"line":27,"column":4,"offset":843},"end":{"line":27,"column":20,"offset":859},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":840},"end":{"line":27,"column":20,"offset":859},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":29,"column":1,"offset":861},"end":{"line":29,"column":5,"offset":865},"indent":[]}},{"type":"inlineCode","value":"<Chip>","position":{"start":{"line":29,"column":5,"offset":865},"end":{"line":29,"column":13,"offset":873},"indent":[]}},{"type":"text","value":" will allow users to make selections in scenarios where vertical\nspace is at a premium. It has three high-level usages: single-select,\nmulti-select, and add/dismiss selection.","position":{"start":{"line":29,"column":13,"offset":873},"end":{"line":31,"column":41,"offset":1048},"indent":[1,1]}}],"position":{"start":{"line":29,"column":1,"offset":861},"end":{"line":31,"column":41,"offset":1048},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Single-select","position":{"start":{"line":33,"column":5,"offset":1054},"end":{"line":33,"column":18,"offset":1067},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":1050},"end":{"line":33,"column":18,"offset":1067},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you need the user to make a selection of a single item from among several\nitems, and those items all have short (1–2 word) labels, single-select Chips\nwill allow the user to choose one of those items.","position":{"start":{"line":35,"column":1,"offset":1069},"end":{"line":37,"column":50,"offset":1272},"indent":[1,1]}}],"position":{"start":{"line":35,"column":1,"offset":1069},"end":{"line":37,"column":50,"offset":1272},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This preserves vertical space while allowing the user to clearly identify which\nitem they have selected.","position":{"start":{"line":39,"column":1,"offset":1274},"end":{"line":40,"column":25,"offset":1378},"indent":[1]}}],"position":{"start":{"line":39,"column":1,"offset":1274},"end":{"line":40,"column":25,"offset":1378},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Unlike ","position":{"start":{"line":42,"column":1,"offset":1380},"end":{"line":42,"column":8,"offset":1387},"indent":[]}},{"type":"link","title":null,"url":"/components/radio-group","children":[{"type":"text","value":"Radio","position":{"start":{"line":42,"column":9,"offset":1388},"end":{"line":42,"column":14,"offset":1393},"indent":[]}}],"position":{"start":{"line":42,"column":8,"offset":1387},"end":{"line":42,"column":40,"offset":1419},"indent":[]}},{"type":"text","value":", the selected single-select Chip can be\nde-selected by the user, leaving all selections blank.","position":{"start":{"line":42,"column":40,"offset":1419},"end":{"line":43,"column":55,"offset":1514},"indent":[1]}}],"position":{"start":{"line":42,"column":1,"offset":1380},"end":{"line":43,"column":55,"offset":1514},"indent":[1]}},{"type":"jsx","value":"<Canvas>\n  <Story name=\"Chips\">\n    {args => {\n      const [selected, setSelected] = useState();\n      return (\n        <Content>\n          <Text>\n            You are <u>{selected ? selected : \"_______\"}</u>\n          </Text>\n          <Chips {...args} selected={selected} onChange={setSelected}>\n            <Chip\n              prefix={<Avatar initials=\"AZ\" />}\n              label=\"Amazing\"\n              value=\"Amazing\"\n            />\n            <Chip\n              prefix={<Icon name=\"video\" />}\n              label=\"Wonderful\"\n              value=\"Wonderful\"\n            />\n            <Chip\n              prefix={<Icon name=\"starFill\" />}\n              label=\"Brilliant\"\n              value=\"Brilliant\"\n            />\n            <Chip label=\"Magnificent\" value=\"Magnificent\" />\n          </Chips>\n        </Content>\n      );\n    }}\n  </Story>\n</Canvas>","position":{"start":{"line":45,"column":1,"offset":1516},"end":{"line":76,"column":10,"offset":2376},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Multi-select","position":{"start":{"line":78,"column":5,"offset":2382},"end":{"line":78,"column":17,"offset":2394},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":2378},"end":{"line":78,"column":17,"offset":2394},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you need the user to make a selection of one ","position":{"start":{"line":80,"column":1,"offset":2396},"end":{"line":80,"column":49,"offset":2444},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"or more","position":{"start":{"line":80,"column":50,"offset":2445},"end":{"line":80,"column":57,"offset":2452},"indent":[]}}],"position":{"start":{"line":80,"column":49,"offset":2444},"end":{"line":80,"column":58,"offset":2453},"indent":[]}},{"type":"text","value":" items from amongst\nseveral items, and those items all have short (1–2 word) labels, a multi-select\nChips will allow the user to choose as many items from the group as they wish.","position":{"start":{"line":80,"column":58,"offset":2453},"end":{"line":82,"column":79,"offset":2631},"indent":[1,1]}}],"position":{"start":{"line":80,"column":1,"offset":2396},"end":{"line":82,"column":79,"offset":2631},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This preserves vertical space while allowing the user to clearly identify which\nitems they have selected. To signify to the user that multiple selections are\npossible, a checkmark icon is present to reinforce the conceptual similarity to\na ","position":{"start":{"line":84,"column":1,"offset":2633},"end":{"line":87,"column":3,"offset":2873},"indent":[1,1,1]}},{"type":"link","title":null,"url":"/components/checkbox","children":[{"type":"text","value":"Checkbox","position":{"start":{"line":87,"column":4,"offset":2874},"end":{"line":87,"column":12,"offset":2882},"indent":[]}}],"position":{"start":{"line":87,"column":3,"offset":2873},"end":{"line":87,"column":35,"offset":2905},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":87,"column":35,"offset":2905},"end":{"line":87,"column":36,"offset":2906},"indent":[]}}],"position":{"start":{"line":84,"column":1,"offset":2633},"end":{"line":87,"column":36,"offset":2906},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Similar to Checkbox, a selected multi-select Chip can be de-selected by the\nuser, leaving all selections blank.","position":{"start":{"line":89,"column":1,"offset":2908},"end":{"line":90,"column":36,"offset":3019},"indent":[1]}}],"position":{"start":{"line":89,"column":1,"offset":2908},"end":{"line":90,"column":36,"offset":3019},"indent":[1]}},{"type":"export","value":"export function MultiSelectExample() {\n  const [selected, setSelected] = useState([]);\n  return (\n    <Content>\n      <Text>\n        You are <u>{selected.length ? selected.join(\" \") : \"_______\"}</u>\n      </Text>\n      <Chips type=\"multiselect\" selected={selected} onChange={setSelected}>\n        <Chip label=\"Amazing\" value=\"Amazing\" />\n        <Chip label=\"Wonderful\" value=\"Wonderful\" />\n        <Chip label=\"Brilliant\" value=\"Brilliant\" />\n        <Chip label=\"Magnificent\" value=\"Magnificent\" />\n      </Chips>\n    </Content>\n  );\n}","position":{"start":{"line":92,"column":1,"offset":3021},"end":{"line":107,"column":2,"offset":3558},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<Canvas withSource=\"none\">\n  <MultiSelectExample />\n</Canvas>","position":{"start":{"line":109,"column":1,"offset":3560},"end":{"line":111,"column":10,"offset":3621},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Add/dismiss selection","position":{"start":{"line":113,"column":5,"offset":3627},"end":{"line":113,"column":26,"offset":3648},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":3623},"end":{"line":113,"column":26,"offset":3648},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When the user will be selecting one or more items by inputting their own Chip\noptions with, use the dismissible Chip.","position":{"start":{"line":115,"column":1,"offset":3650},"end":{"line":116,"column":40,"offset":3767},"indent":[1]}}],"position":{"start":{"line":115,"column":1,"offset":3650},"end":{"line":116,"column":40,"offset":3767},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The dismissible Chip allows them to remove previous selections from the Chips.\nUse this option when the full list of possible selections is too great to\nreasonably display in one group of Chip. For example, \"all of my phone contacts\"\nwould be far too many Chip options to present in one group, and would be\noverwhelming for the user to interpret.","position":{"start":{"line":118,"column":1,"offset":3769},"end":{"line":122,"column":40,"offset":4115},"indent":[1,1,1,1]}}],"position":{"start":{"line":118,"column":1,"offset":3769},"end":{"line":122,"column":40,"offset":4115},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This format also allows the user to create their own \"freeform\" Chip options,\nwhich they can also remove once added.","position":{"start":{"line":124,"column":1,"offset":4117},"end":{"line":125,"column":39,"offset":4233},"indent":[1]}}],"position":{"start":{"line":124,"column":1,"offset":4117},"end":{"line":125,"column":39,"offset":4233},"indent":[1]}},{"type":"export","value":"export function AddDismissSelectionExample() {\n  const {\n    selected,\n    options,\n    loading,\n    handleLoadMore,\n    handleSearch,\n    handleSelect,\n    handleCustomAdd,\n  } = useFakeOptionQuery();\n  return (\n    <Chips\n      type=\"dismissible\"\n      selected={selected}\n      onChange={handleSelect}\n      onCustomAdd={handleCustomAdd}\n      isLoadingMore={loading}\n      onSearch={handleSearch}\n      onLoadMore={handleLoadMore}\n    >\n      {options.map(name => (\n        <Chip key={name} label={name} value={name} />\n      ))}\n    </Chips>\n  );\n}","position":{"start":{"line":127,"column":1,"offset":4235},"end":{"line":152,"column":2,"offset":4788},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<Canvas withSource=\"none\">\n  <AddDismissSelectionExample />\n</Canvas>","position":{"start":{"line":154,"column":1,"offset":4790},"end":{"line":156,"column":10,"offset":4859},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Props","position":{"start":{"line":158,"column":4,"offset":4864},"end":{"line":158,"column":9,"offset":4869},"indent":[]}}],"position":{"start":{"line":158,"column":1,"offset":4861},"end":{"line":158,"column":9,"offset":4869},"indent":[]}},{"type":"jsx","value":"<ArgsTable of={Chips} />","position":{"start":{"line":160,"column":1,"offset":4871},"end":{"line":160,"column":25,"offset":4895},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Content guidelines","position":{"start":{"line":162,"column":4,"offset":4900},"end":{"line":162,"column":22,"offset":4918},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":4897},"end":{"line":162,"column":22,"offset":4918},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Chip labels should be 1–2 words at most. If any of the options in the group may\nhave longer labels, consider Checkbox or Radio as necessary for your selection\ntype.","position":{"start":{"line":164,"column":1,"offset":4920},"end":{"line":166,"column":6,"offset":5084},"indent":[1,1]}}],"position":{"start":{"line":164,"column":1,"offset":4920},"end":{"line":166,"column":6,"offset":5084},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Accessibility","position":{"start":{"line":168,"column":4,"offset":5089},"end":{"line":168,"column":17,"offset":5102},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":5086},"end":{"line":168,"column":17,"offset":5102},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Chips should convey to the user whether it is a \"checkbox\" or \"radio\" element\nbased on single or multi-select. The Chips in this group have the appropriate\nroles and keyboard operation to allow the user to interact as though they are\ndealing with a checkbox or radio button.","position":{"start":{"line":170,"column":1,"offset":5104},"end":{"line":173,"column":41,"offset":5378},"indent":[1,1,1]}}],"position":{"start":{"line":170,"column":1,"offset":5104},"end":{"line":173,"column":41,"offset":5378},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If Chips is set for add/dismiss selections, the dismiss button will notify the\nuser that they will \"dismiss {label name}\" upon press.","position":{"start":{"line":175,"column":1,"offset":5380},"end":{"line":176,"column":55,"offset":5513},"indent":[1]}}],"position":{"start":{"line":175,"column":1,"offset":5380},"end":{"line":176,"column":55,"offset":5513},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Responsiveness","position":{"start":{"line":178,"column":4,"offset":5518},"end":{"line":178,"column":18,"offset":5532},"indent":[]}}],"position":{"start":{"line":178,"column":1,"offset":5515},"end":{"line":178,"column":18,"offset":5532},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The Chips themselves will take up as much space as their container allows, and\nthe Chips will flow left to right. Chips may re-flow into new rows, or scroll\nout of view in a single row, depending on your use case.","position":{"start":{"line":180,"column":1,"offset":5534},"end":{"line":182,"column":57,"offset":5747},"indent":[1,1]}}],"position":{"start":{"line":180,"column":1,"offset":5534},"end":{"line":182,"column":57,"offset":5747},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Related components","position":{"start":{"line":184,"column":4,"offset":5752},"end":{"line":184,"column":22,"offset":5770},"indent":[]}}],"position":{"start":{"line":184,"column":1,"offset":5749},"end":{"line":184,"column":22,"offset":5770},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"/components/radio-group","children":[{"type":"text","value":"Radio","position":{"start":{"line":186,"column":4,"offset":5775},"end":{"line":186,"column":9,"offset":5780},"indent":[]}}],"position":{"start":{"line":186,"column":3,"offset":5774},"end":{"line":186,"column":35,"offset":5806},"indent":[]}},{"type":"text","value":" should be used to allow the user to select\n\"one-of-many\" items (single-select) and the labels for the items are longer\nthan 1 or 2 words.","position":{"start":{"line":186,"column":35,"offset":5806},"end":{"line":188,"column":21,"offset":5948},"indent":[3,3]}}],"position":{"start":{"line":186,"column":3,"offset":5774},"end":{"line":188,"column":21,"offset":5948},"indent":[3,3]}}],"position":{"start":{"line":186,"column":1,"offset":5772},"end":{"line":188,"column":21,"offset":5948},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"/components/checkbox","children":[{"type":"text","value":"Checkbox","position":{"start":{"line":189,"column":4,"offset":5952},"end":{"line":189,"column":12,"offset":5960},"indent":[]}}],"position":{"start":{"line":189,"column":3,"offset":5951},"end":{"line":189,"column":35,"offset":5983},"indent":[]}},{"type":"text","value":" should be used to allow the user to select\n\"one-or-more-of-many\" items (multi-select) and the labels for the items are\nlonger than 1 or 2 words.","position":{"start":{"line":189,"column":35,"offset":5983},"end":{"line":191,"column":28,"offset":6132},"indent":[3,3]}}],"position":{"start":{"line":189,"column":3,"offset":5951},"end":{"line":191,"column":28,"offset":6132},"indent":[3,3]}}],"position":{"start":{"line":189,"column":1,"offset":5949},"end":{"line":191,"column":28,"offset":6132},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"/components/inline-label","children":[{"type":"text","value":"InlineLabel","position":{"start":{"line":192,"column":4,"offset":6136},"end":{"line":192,"column":15,"offset":6147},"indent":[]}}],"position":{"start":{"line":192,"column":3,"offset":6135},"end":{"line":192,"column":42,"offset":6174},"indent":[]}},{"type":"text","value":" should be used when you just need a\nrectangular element that displays the status of another element.","position":{"start":{"line":192,"column":42,"offset":6174},"end":{"line":193,"column":67,"offset":6277},"indent":[3]}}],"position":{"start":{"line":192,"column":3,"offset":6135},"end":{"line":193,"column":67,"offset":6277},"indent":[3]}}],"position":{"start":{"line":192,"column":1,"offset":6133},"end":{"line":193,"column":67,"offset":6277},"indent":[1]}}],"position":{"start":{"line":186,"column":1,"offset":5772},"end":{"line":193,"column":67,"offset":6277},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Notes","position":{"start":{"line":195,"column":4,"offset":6282},"end":{"line":195,"column":9,"offset":6287},"indent":[]}}],"position":{"start":{"line":195,"column":1,"offset":6279},"end":{"line":195,"column":9,"offset":6287},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There was some consideration to bring the ability to \"accent\" Chips with certain\ncolors for parity with Jobber's mobile platform, but we will not be implementing\nthis is for the web components as of this first iteration of our web Chip. The\nmobile use-case is very specific to a filtering use case that we as of now do\nnot anticipate will be required for the web.","position":{"start":{"line":197,"column":1,"offset":6289},"end":{"line":201,"column":45,"offset":6652},"indent":[1,1,1,1]}}],"position":{"start":{"line":197,"column":1,"offset":6289},"end":{"line":201,"column":45,"offset":6652},"indent":[1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":204,"column":1,"offset":6655},"end":{"line":204,"column":31,"offset":6685},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":204,"column":31,"offset":6685}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { ArgsTable, Canvas, Meta, Story } from \"@storybook/addon-docs\";\nimport { useState } from \"react\";\nimport { Avatar } from \"@jobber/components/Avatar\";\nimport { Content } from \"@jobber/components/Content\";\nimport { Icon } from \"@jobber/components/Icon\";\nimport { Text } from \"@jobber/components/Text\";\nimport { Chip, Chips } from \".\";\nimport { useFakeOptionQuery } from \"./utils/mdxUtils.ts\";\nexport function MultiSelectExample() {\n  const [selected, setSelected] = useState([]);\n  return <Content mdxType=\"Content\">\n      <Text mdxType=\"Text\">\n        You are <u>{selected.length ? selected.join(\" \") : \"_______\"}</u>\n      </Text>\n      <Chips type=\"multiselect\" selected={selected} onChange={setSelected} mdxType=\"Chips\">\n        <Chip label=\"Amazing\" value=\"Amazing\" mdxType=\"Chip\" />\n        <Chip label=\"Wonderful\" value=\"Wonderful\" mdxType=\"Chip\" />\n        <Chip label=\"Brilliant\" value=\"Brilliant\" mdxType=\"Chip\" />\n        <Chip label=\"Magnificent\" value=\"Magnificent\" mdxType=\"Chip\" />\n      </Chips>\n    </Content>;\n}\nexport function AddDismissSelectionExample() {\n  const {\n    selected,\n    options,\n    loading,\n    handleLoadMore,\n    handleSearch,\n    handleSelect,\n    handleCustomAdd\n  } = useFakeOptionQuery();\n  return <Chips type=\"dismissible\" selected={selected} onChange={handleSelect} onCustomAdd={handleCustomAdd} isLoadingMore={loading} onSearch={handleSearch} onLoadMore={handleLoadMore} mdxType=\"Chips\">\n      {options.map(name => <Chip key={name} label={name} value={name} mdxType=\"Chip\" />)}\n    </Chips>;\n}\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  MultiSelectExample,\nAddDismissSelectionExample,\n_frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Meta title=\"Components/Chips\" component={Chips} subcomponents={{\n      Chip\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"chips\"\n    }}>{`Chips`}</h1>\n    <p>{`Chips are a flexible component that can be used for the selection of items from\na group while preserving vertical space in the interface.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { Chip, Chips } from \"@jobber/components/Chips\";\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usage-guidelines\"\n    }}>{`Usage guidelines`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`<Chip>`}</inlineCode>{` will allow users to make selections in scenarios where vertical\nspace is at a premium. It has three high-level usages: single-select,\nmulti-select, and add/dismiss selection.`}</p>\n    <h3 {...{\n      \"id\": \"single-select\"\n    }}>{`Single-select`}</h3>\n    <p>{`If you need the user to make a selection of a single item from among several\nitems, and those items all have short (1–2 word) labels, single-select Chips\nwill allow the user to choose one of those items.`}</p>\n    <p>{`This preserves vertical space while allowing the user to clearly identify which\nitem they have selected.`}</p>\n    <p>{`Unlike `}<a parentName=\"p\" {...{\n        \"href\": \"/components/radio-group\"\n      }}>{`Radio`}</a>{`, the selected single-select Chip can be\nde-selected by the user, leaving all selections blank.`}</p>\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Chips\" mdxType=\"Story\">\n    {args => {\n          const [selected, setSelected] = useState();\n          return <Content mdxType=\"Content\">\n          <Text mdxType=\"Text\">\n            You are <u>{selected ? selected : \"_______\"}</u>\n          </Text>\n          <Chips {...args} selected={selected} onChange={setSelected} mdxType=\"Chips\">\n            <Chip prefix={<Avatar initials=\"AZ\" mdxType=\"Avatar\" />} label=\"Amazing\" value=\"Amazing\" mdxType=\"Chip\" />\n            <Chip prefix={<Icon name=\"video\" mdxType=\"Icon\" />} label=\"Wonderful\" value=\"Wonderful\" mdxType=\"Chip\" />\n            <Chip prefix={<Icon name=\"starFill\" mdxType=\"Icon\" />} label=\"Brilliant\" value=\"Brilliant\" mdxType=\"Chip\" />\n            <Chip label=\"Magnificent\" value=\"Magnificent\" mdxType=\"Chip\" />\n          </Chips>\n        </Content>;\n        }}\n  </Story>\n    </Canvas>\n    <h3 {...{\n      \"id\": \"multi-select\"\n    }}>{`Multi-select`}</h3>\n    <p>{`If you need the user to make a selection of one `}<em parentName=\"p\">{`or more`}</em>{` items from amongst\nseveral items, and those items all have short (1–2 word) labels, a multi-select\nChips will allow the user to choose as many items from the group as they wish.`}</p>\n    <p>{`This preserves vertical space while allowing the user to clearly identify which\nitems they have selected. To signify to the user that multiple selections are\npossible, a checkmark icon is present to reinforce the conceptual similarity to\na `}<a parentName=\"p\" {...{\n        \"href\": \"/components/checkbox\"\n      }}>{`Checkbox`}</a>{`.`}</p>\n    <p>{`Similar to Checkbox, a selected multi-select Chip can be de-selected by the\nuser, leaving all selections blank.`}</p>\n\n    <Canvas withSource=\"none\" mdxType=\"Canvas\">\n  <MultiSelectExample mdxType=\"MultiSelectExample\" />\n    </Canvas>\n    <h3 {...{\n      \"id\": \"adddismiss-selection\"\n    }}>{`Add/dismiss selection`}</h3>\n    <p>{`When the user will be selecting one or more items by inputting their own Chip\noptions with, use the dismissible Chip.`}</p>\n    <p>{`The dismissible Chip allows them to remove previous selections from the Chips.\nUse this option when the full list of possible selections is too great to\nreasonably display in one group of Chip. For example, \"all of my phone contacts\"\nwould be far too many Chip options to present in one group, and would be\noverwhelming for the user to interpret.`}</p>\n    <p>{`This format also allows the user to create their own \"freeform\" Chip options,\nwhich they can also remove once added.`}</p>\n\n    <Canvas withSource=\"none\" mdxType=\"Canvas\">\n  <AddDismissSelectionExample mdxType=\"AddDismissSelectionExample\" />\n    </Canvas>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <ArgsTable of={Chips} mdxType=\"ArgsTable\" />\n    <h2 {...{\n      \"id\": \"content-guidelines\"\n    }}>{`Content guidelines`}</h2>\n    <p>{`Chip labels should be 1–2 words at most. If any of the options in the group may\nhave longer labels, consider Checkbox or Radio as necessary for your selection\ntype.`}</p>\n    <h2 {...{\n      \"id\": \"accessibility\"\n    }}>{`Accessibility`}</h2>\n    <p>{`Chips should convey to the user whether it is a \"checkbox\" or \"radio\" element\nbased on single or multi-select. The Chips in this group have the appropriate\nroles and keyboard operation to allow the user to interact as though they are\ndealing with a checkbox or radio button.`}</p>\n    <p>{`If Chips is set for add/dismiss selections, the dismiss button will notify the\nuser that they will \"dismiss {label name}\" upon press.`}</p>\n    <h2 {...{\n      \"id\": \"responsiveness\"\n    }}>{`Responsiveness`}</h2>\n    <p>{`The Chips themselves will take up as much space as their container allows, and\nthe Chips will flow left to right. Chips may re-flow into new rows, or scroll\nout of view in a single row, depending on your use case.`}</p>\n    <h2 {...{\n      \"id\": \"related-components\"\n    }}>{`Related components`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/components/radio-group\"\n        }}>{`Radio`}</a>{` should be used to allow the user to select\n\"one-of-many\" items (single-select) and the labels for the items are longer\nthan 1 or 2 words.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/components/checkbox\"\n        }}>{`Checkbox`}</a>{` should be used to allow the user to select\n\"one-or-more-of-many\" items (multi-select) and the labels for the items are\nlonger than 1 or 2 words.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/components/inline-label\"\n        }}>{`InlineLabel`}</a>{` should be used when you just need a\nrectangular element that displays the status of another element.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"notes\"\n    }}>{`Notes`}</h2>\n    <p>{`There was some consideration to bring the ability to \"accent\" Chips with certain\ncolors for parity with Jobber's mobile platform, but we will not be implementing\nthis is for the web components as of this first iteration of our web Chip. The\nmobile use-case is very specific to a filtering use case that we as of now do\nnot anticipate will be required for the web.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}