{"expireTime":9007200931831381000,"key":"gatsby-plugin-mdx-entire-payload-f9bc4f384b9ad96bfc0b03628dd90e9d-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":114,"offset":115},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":117},"end":{"line":5,"column":29,"offset":145},"indent":[]}},{"type":"import","value":"import { Playground, Props } from \"docz\";\nimport { ComponentStatus } from \"@jobber/docx\";\nimport { Spinner } from \".\";\nimport { Text } from \"@jobber/components/Text\";","position":{"start":{"line":8,"column":1,"offset":148},"end":{"line":11,"column":48,"offset":314},"indent":[1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Spinner","position":{"start":{"line":13,"column":3,"offset":318},"end":{"line":13,"column":10,"offset":325},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":316},"end":{"line":13,"column":10,"offset":325},"indent":[]}},{"type":"jsx","value":"<ComponentStatus stage=\"ready\" responsive=\"yes\" accessible=\"yes\" />","position":{"start":{"line":15,"column":1,"offset":327},"end":{"line":15,"column":68,"offset":394},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"import { Spinner } from \"@jobber/components/Spinner\";","position":{"start":{"line":17,"column":1,"offset":396},"end":{"line":19,"column":4,"offset":459},"indent":[1,1]}},{"type":"jsx","value":"<Playground>\n  <Spinner />\n</Playground>","position":{"start":{"line":21,"column":1,"offset":461},"end":{"line":23,"column":14,"offset":501},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Props","position":{"start":{"line":25,"column":4,"offset":506},"end":{"line":25,"column":9,"offset":511},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":503},"end":{"line":25,"column":9,"offset":511},"indent":[]}},{"type":"jsx","value":"<Props of={Spinner} />","position":{"start":{"line":27,"column":1,"offset":513},"end":{"line":27,"column":23,"offset":535},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":29,"column":1,"offset":537},"end":{"line":29,"column":4,"offset":540},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Design & usage guidelines","position":{"start":{"line":31,"column":4,"offset":545},"end":{"line":31,"column":29,"offset":570},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":542},"end":{"line":31,"column":29,"offset":570},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use Spinner to indicate loading of content where the actual amount of loading\ntime or progress is unknown.","position":{"start":{"line":33,"column":1,"offset":572},"end":{"line":34,"column":29,"offset":678},"indent":[1]}}],"position":{"start":{"line":33,"column":1,"offset":572},"end":{"line":34,"column":29,"offset":678},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Small","position":{"start":{"line":36,"column":5,"offset":684},"end":{"line":36,"column":10,"offset":689},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":680},"end":{"line":36,"column":10,"offset":689},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":38,"column":1,"offset":691},"end":{"line":38,"column":5,"offset":695},"indent":[]}},{"type":"inlineCode","value":"small","position":{"start":{"line":38,"column":5,"offset":695},"end":{"line":38,"column":12,"offset":702},"indent":[]}},{"type":"text","value":" spinner should be used on individual element of an interface (ie.\nbutton or card contents) or when inline with content","position":{"start":{"line":38,"column":12,"offset":702},"end":{"line":39,"column":53,"offset":821},"indent":[1]}}],"position":{"start":{"line":38,"column":1,"offset":691},"end":{"line":39,"column":53,"offset":821},"indent":[1]}},{"type":"jsx","value":"<Playground>\n  <Spinner size=\"small\" />\n</Playground>","position":{"start":{"line":41,"column":1,"offset":823},"end":{"line":43,"column":14,"offset":876},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Inline","position":{"start":{"line":45,"column":5,"offset":882},"end":{"line":45,"column":11,"offset":888},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":878},"end":{"line":45,"column":11,"offset":888},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use ","position":{"start":{"line":47,"column":1,"offset":890},"end":{"line":47,"column":5,"offset":894},"indent":[]}},{"type":"inlineCode","value":"inline","position":{"start":{"line":47,"column":5,"offset":894},"end":{"line":47,"column":13,"offset":902},"indent":[]}},{"type":"text","value":" to render the spinner inline with content, such as when it has a\nleading piece of text content that adds context to what loading is happening.","position":{"start":{"line":47,"column":13,"offset":902},"end":{"line":48,"column":78,"offset":1045},"indent":[1]}}],"position":{"start":{"line":47,"column":1,"offset":890},"end":{"line":48,"column":78,"offset":1045},"indent":[1]}},{"type":"jsx","value":"<Playground>\n  <Text>\n    Uploading... <Spinner size=\"small\" inline={true} />\n  </Text>\n</Playground>","position":{"start":{"line":50,"column":1,"offset":1047},"end":{"line":54,"column":14,"offset":1148},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Accessibility","position":{"start":{"line":56,"column":4,"offset":1153},"end":{"line":56,"column":17,"offset":1166},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1150},"end":{"line":56,"column":17,"offset":1166},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":58,"column":1,"offset":1168},"end":{"line":58,"column":5,"offset":1172},"indent":[]}},{"type":"inlineCode","value":"Spinner","position":{"start":{"line":58,"column":5,"offset":1172},"end":{"line":58,"column":14,"offset":1181},"indent":[]}},{"type":"text","value":" should announce itself to users of assistive technology such as\nscreenreaders.","position":{"start":{"line":58,"column":14,"offset":1181},"end":{"line":59,"column":15,"offset":1260},"indent":[1]}}],"position":{"start":{"line":58,"column":1,"offset":1168},"end":{"line":59,"column":15,"offset":1260},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The following built-in properties help ","position":{"start":{"line":61,"column":1,"offset":1262},"end":{"line":61,"column":40,"offset":1301},"indent":[]}},{"type":"inlineCode","value":"Spinner","position":{"start":{"line":61,"column":40,"offset":1301},"end":{"line":61,"column":49,"offset":1310},"indent":[]}},{"type":"text","value":" convey its' role effectively:","position":{"start":{"line":61,"column":49,"offset":1310},"end":{"line":61,"column":79,"offset":1340},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":1262},"end":{"line":61,"column":79,"offset":1340},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"role=\"alert\"","position":{"start":{"line":63,"column":3,"offset":1344},"end":{"line":63,"column":17,"offset":1358},"indent":[]}},{"type":"text","value":" allows the ","position":{"start":{"line":63,"column":17,"offset":1358},"end":{"line":63,"column":29,"offset":1370},"indent":[]}},{"type":"inlineCode","value":"Spinner","position":{"start":{"line":63,"column":29,"offset":1370},"end":{"line":63,"column":38,"offset":1379},"indent":[]}},{"type":"text","value":" to be announced as an alert feedback\nelement","position":{"start":{"line":63,"column":38,"offset":1379},"end":{"line":64,"column":10,"offset":1426},"indent":[3]}}],"position":{"start":{"line":63,"column":3,"offset":1344},"end":{"line":64,"column":10,"offset":1426},"indent":[3]}}],"position":{"start":{"line":63,"column":1,"offset":1342},"end":{"line":64,"column":10,"offset":1426},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"aria-busy={true}","position":{"start":{"line":65,"column":3,"offset":1429},"end":{"line":65,"column":21,"offset":1447},"indent":[]}},{"type":"text","value":" informs the user that the view is busy, setting the\nexpectation that they cannot interact for the time being","position":{"start":{"line":65,"column":21,"offset":1447},"end":{"line":66,"column":59,"offset":1558},"indent":[3]}}],"position":{"start":{"line":65,"column":3,"offset":1429},"end":{"line":66,"column":59,"offset":1558},"indent":[3]}}],"position":{"start":{"line":65,"column":1,"offset":1427},"end":{"line":66,"column":59,"offset":1558},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"aria-label=\"loading\"","position":{"start":{"line":67,"column":3,"offset":1561},"end":{"line":67,"column":25,"offset":1583},"indent":[]}},{"type":"text","value":" reads out \"Loading\" to assistive tech, adding context\nas to ","position":{"start":{"line":67,"column":25,"offset":1583},"end":{"line":68,"column":9,"offset":1646},"indent":[3]}},{"type":"emphasis","children":[{"type":"text","value":"why","position":{"start":{"line":68,"column":10,"offset":1647},"end":{"line":68,"column":13,"offset":1650},"indent":[]}}],"position":{"start":{"line":68,"column":9,"offset":1646},"end":{"line":68,"column":14,"offset":1651},"indent":[]}},{"type":"text","value":" the view is busy","position":{"start":{"line":68,"column":14,"offset":1651},"end":{"line":68,"column":31,"offset":1668},"indent":[]}}],"position":{"start":{"line":67,"column":3,"offset":1561},"end":{"line":68,"column":31,"offset":1668},"indent":[3]}}],"position":{"start":{"line":67,"column":1,"offset":1559},"end":{"line":68,"column":31,"offset":1668},"indent":[1]}}],"position":{"start":{"line":63,"column":1,"offset":1342},"end":{"line":68,"column":31,"offset":1668},"indent":[1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":70,"column":1,"offset":1670},"end":{"line":70,"column":4,"offset":1673},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Related components","position":{"start":{"line":72,"column":4,"offset":1678},"end":{"line":72,"column":22,"offset":1696},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":1675},"end":{"line":72,"column":22,"offset":1696},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If the amount of progress or loading time is known, use\n","position":{"start":{"line":74,"column":1,"offset":1698},"end":{"line":75,"column":1,"offset":1754},"indent":[1]}},{"type":"link","title":null,"url":"https://atlantis.getjobber.com/components/progress-bar","children":[{"type":"text","value":"ProgressBar","position":{"start":{"line":75,"column":2,"offset":1755},"end":{"line":75,"column":13,"offset":1766},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":1754},"end":{"line":75,"column":70,"offset":1823},"indent":[]}},{"type":"text","value":" to give\nthe user better context around the process.","position":{"start":{"line":75,"column":70,"offset":1823},"end":{"line":76,"column":44,"offset":1875},"indent":[1]}}],"position":{"start":{"line":74,"column":1,"offset":1698},"end":{"line":76,"column":44,"offset":1875},"indent":[1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":79,"column":1,"offset":1878},"end":{"line":79,"column":31,"offset":1908},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":79,"column":31,"offset":1908}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/taylornoj/workspace/atlantis/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { Playground, Props } from \"docz\";\nimport { ComponentStatus } from \"@jobber/docx\";\nimport { Spinner } from \".\";\nimport { Text } from \"@jobber/components/Text\";\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"spinner\"\n    }}>{`Spinner`}</h1>\n    <ComponentStatus stage=\"ready\" responsive=\"yes\" accessible=\"yes\" mdxType=\"ComponentStatus\" />\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { Spinner } from \"@jobber/components/Spinner\";\n`}</code></pre>\n    <Playground __position={1} __code={'<Spinner />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ComponentStatus,\n      Spinner,\n      Text,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Spinner mdxType=\"Spinner\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Spinner} mdxType=\"Props\" />\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"design--usage-guidelines\"\n    }}>{`Design & usage guidelines`}</h2>\n    <p>{`Use Spinner to indicate loading of content where the actual amount of loading\ntime or progress is unknown.`}</p>\n    <h3 {...{\n      \"id\": \"small\"\n    }}>{`Small`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`small`}</inlineCode>{` spinner should be used on individual element of an interface (ie.\nbutton or card contents) or when inline with content`}</p>\n    <Playground __position={3} __code={'<Spinner size=\\\"small\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ComponentStatus,\n      Spinner,\n      Text,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Spinner size=\"small\" mdxType=\"Spinner\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"inline\"\n    }}>{`Inline`}</h3>\n    <p>{`Use `}<inlineCode parentName=\"p\">{`inline`}</inlineCode>{` to render the spinner inline with content, such as when it has a\nleading piece of text content that adds context to what loading is happening.`}</p>\n    <Playground __position={4} __code={'<Text>\\n  Uploading... <Spinner size=\\\"small\\\" inline={true} />\\n</Text>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ComponentStatus,\n      Spinner,\n      Text,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Text mdxType=\"Text\">\n    Uploading... <Spinner size=\"small\" inline={true} mdxType=\"Spinner\" />\n  </Text>\n    </Playground>\n    <h2 {...{\n      \"id\": \"accessibility\"\n    }}>{`Accessibility`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Spinner`}</inlineCode>{` should announce itself to users of assistive technology such as\nscreenreaders.`}</p>\n    <p>{`The following built-in properties help `}<inlineCode parentName=\"p\">{`Spinner`}</inlineCode>{` convey its' role effectively:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`role=\"alert\"`}</inlineCode>{` allows the `}<inlineCode parentName=\"li\">{`Spinner`}</inlineCode>{` to be announced as an alert feedback\nelement`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`aria-busy={true}`}</inlineCode>{` informs the user that the view is busy, setting the\nexpectation that they cannot interact for the time being`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`aria-label=\"loading\"`}</inlineCode>{` reads out \"Loading\" to assistive tech, adding context\nas to `}<em parentName=\"li\">{`why`}</em>{` the view is busy`}</li>\n    </ul>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"related-components\"\n    }}>{`Related components`}</h2>\n    <p>{`If the amount of progress or loading time is known, use\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://atlantis.getjobber.com/components/progress-bar\"\n      }}>{`ProgressBar`}</a>{` to give\nthe user better context around the process.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}